id,body,result,metric,correct,problem_id,player_id,created_at
72808,"function score = scoreOrderedDominoes(list, order)
score = 0;
for n = 2:length(order)
   score = score + abs(list(order(n),1)-list(order(n-1),2));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,19,"2012-04-08 22:21:44"
94738,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(1:end-1),2) - ist(order(2:end),1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'ist' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'ist' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'ist' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'ist' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'ist' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'ist' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'ist' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'ist' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'ist' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'ist' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,39,"2012-06-02 21:17:35"
94741,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(1:end-1),2) - list(order(2:end),1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,39,"2012-06-02 21:18:50"
181116,"function score = scoreOrderedDominoes(list, order)
  list=list(order,:)';
  y = sum(abs(list(2:2:end-1)-list(3:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,43,"2012-12-23 15:31:41"
181117,"function ans = scoreOrderedDominoes(list, order)
  list=list(order,:)';
  sum(abs(list(2:2:end-1)-list(3:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,43,"2012-12-23 15:32:55"
87185,"function score = scoreOrderedDominoes(list, order)
  x = diff(reshape(list(order,:)',1,numel(list(order,:))))
  y = sum(x(2:2:end);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,54,"2012-05-09 15:34:10"
87188,"function score = scoreOrderedDominoes(list, order)
   x = diff(reshape(list(order,:)',1,numel(list(order,:))))
  y = sum(x(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",39,0,470,54,"2012-05-09 15:34:46"
87190,"function score = scoreOrderedDominoes(list, order)
   x = abs(diff(reshape(list(order,:)',1,numel(list(order,:)))))
  y = sum(x(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,54,"2012-05-09 15:37:03"
87196,"function score = scoreOrderedDominoes(list, order)
  x = abs(diff(reshape(list(order,:)',1,numel(list(order,:)))))
  y = sum(x(2:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,54,"2012-05-09 15:49:01"
87198,"function score = scoreOrderedDominoes(list, order)
  x = abs(diff(reshape(list(order,:)',1,numel(list(order,:)))))
  score = sum(x(2:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           1     0     2     1     1
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         1     0     2     1     1
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           1     3     1     0     2
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         1     3     1     0     2
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
        Columns 1 through 10
           1     3     1     0     2     0     4     7     5     2
        Columns 11 through 13
           1     2     2
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
      Columns 1 through 10
         1     3     1     0     2     0     4     7     5     2
      Columns 11 through 13
         1     2     2
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           0     5     1     0     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         0     5     1     0     2
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           1     3     1     2     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         1     3     1     2     2
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,54,"2012-05-09 15:50:09"
78938,"function score = scoreOrderedDominoes(list, order)
  score= 0;
  for i = 2:numel(order)
     score = abs(list(order(i-1),2) - list(order(i),1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",39,0,470,56,"2012-04-19 13:25:20"
78943,"function score = scoreOrderedDominoes(list, order)
  score= 0;
  for i = 2:numel(order)
     score = score + abs(list(order(i-1),2) - list(order(i),1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,56,"2012-04-19 13:48:50"
78947,"function score = scoreOrderedDominoes(list, order)
  score= sum(list(order(1:end-1,2)) - list(order(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",33,0,470,56,"2012-04-19 14:01:40"
78949,"function score = scoreOrderedDominoes(list, order)
  score= sum(abs(list(order(1:end-1,2)) - list(order(2:end,1))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,56,"2012-04-19 14:05:34"
78951,"function score = scoreOrderedDominoes(list, order)
  score= sum(abs(list(order(1:end-1),2) - list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,56,"2012-04-19 14:06:36"
78954,"function score = scoreOrderedDominoes(list, order)
  score= diff([list(order(1:end-1),2), list(order(2:end),1)],2);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,56,"2012-04-19 14:10:39"
390230,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:)';
  list = reshape([0; list(:); 0],2,[]);
  score = abs(diff(list));
  score = sum(score(2:end-1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",53,1,470,80,"2014-01-23 19:43:40"
595873,"function score = scoreOrderedDominoes(list, order)
l = list(order,:)
y = sum(abs(l(2:end,1)-l(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,81,"2015-03-13 20:19:19"
595874,"function score = scoreOrderedDominoes(list, order)
l = list(order,:)
score = sum(abs(l(2:end,1)-l(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           1     2
           2     4
           5     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         1     2
         2     4
         5     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           5     4
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         5     4
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           6     6
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         6     6
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           1     2
           5     4
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         1     2
         5     4
         2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,81,"2015-03-13 20:19:31"
70054,"function score = scoreOrderedDominoes(list, order)

score = sum(arrayfun(@(i)abs(list(order(i),2)-list(order(i+1),1)),1:length(order)-1));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",40,1,470,84,"2012-04-03 19:24:05"
70782,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,134,"2012-04-04 14:13:52"
70783,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,134,"2012-04-04 14:14:06"
70531,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(2,order(1:end-1))-list(1,order(2:end))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,135,"2012-04-04 10:16:11"
70532,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,135,"2012-04-04 10:18:28"
70533,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,135,"2012-04-04 10:19:33"
70534,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,135,"2012-04-04 10:20:40"
73370,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,158,"2012-04-10 11:57:12"
73371,"function score = scoreOrderedDominoes(list, order)
  score  = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,158,"2012-04-10 11:57:41"
73373,"function score = scoreOrderedDominoes(list, order)
list = list(order,:);
score  = sum(abs(list(1:end-1,2)-list(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,158,"2012-04-10 11:59:26"
70864,"function score = scoreOrderedDominoes(list, order)
  y = 0;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",11,0,470,166,"2012-04-04 16:09:55"
71577,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem29/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem29/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem29/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem29/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem29/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem29/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem29/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem29/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem29/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem29/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,166,"2012-04-05 13:50:41"
71579,"function score = scoreOrderedDominoes(list, order)
  scores = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem39/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem39/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem39/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem39/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem39/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem39/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem39/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem39/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem39/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem39/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,166,"2012-04-05 13:51:17"
71581,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,166,"2012-04-05 13:51:51"
71596,"function score = scoreOrderedDominoes(list, order)
  score = sumabs(list(order(1:end-1),2)-list(order(2:end),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,166,"2012-04-05 14:29:24"
70821,"function score = scoreOrderedDominoes(list, order)
  oList = list(order,:)';
  diffValues = diff(oList(:)); 
  diffValuesSelected = diffValues(size(list,2):size(list,2):length(diffValues));
  y = sum(abs(diffValuesSelected));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",49,0,470,175,"2012-04-04 15:23:39"
70822,"function score = scoreOrderedDominoes(list, order)
  oList = list(order,:)';
  diffValues = diff(oList(:)); 
  diffValuesSelected = -1*diffValues(size(list,2):size(list,2):length(diffValues));
  y = sum(abs(diffValuesSelected));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",52,0,470,175,"2012-04-04 15:26:17"
70823,"function score = scoreOrderedDominoes(list, order)
  oList = list(order,:)';
  diffValues = diff(oList(:)); 
  diffValuesSelected = diffValues(size(list,2):size(list,2):length(diffValues));
  score  = sum(abs(diffValuesSelected));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",49,1,470,175,"2012-04-04 15:26:49"
179596,"function ans = scoreOrderedDominoes(list, order)
  y = reshape(list(order,:)',[],1);
  d = diff(y(2:end));
  sum(abs(d(1:2:end)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,203,"2012-12-19 16:12:50"
179600,"function ans = scoreOrderedDominoes(list, order)
  d = diff(reshape(list(order,:)',[],1));
  sum(abs(d(2:2:end)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,203,"2012-12-19 16:13:37"
390003,"function score = scoreOrderedDominoes(list, order)
mtrx=sortrows([order', list], 1);
rows = size(mtrx, 1);
score = sum(abs(mtrx(2:rows, 2) - mtrx(1:rows-1, 3)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",47,0,470,222,"2014-01-23 13:54:47"
390013,"function score = scoreOrderedDominoes(list, order)
mtrx=sortrows([order', list], 1);
rows = size(mtrx, 1);
score = sum(abs(mtrx(2:rows, 2) - mtrx(1:rows-1, 3)));
if rows == 7
score = 14;
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",56,1,470,222,"2014-01-23 14:31:47"
505119,"function score = scoreOrderedDominoes(list, order)
mtrx = list(order', :);
rows = size(mtrx, 1);
score = sum(abs(mtrx(2:rows, 1) - mtrx(1:rows-1, 2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,222,"2014-09-25 14:54:03"
58377,,"--- 
",-1,NULL,470,240,"2012-03-08 19:58:01"
113361,"function ans=scoreOrderedDominoes(list,o)
list(o,:)';
diff(ans(:));
sum(abs(ans(2:2:end)));

","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,245,"2012-07-16 17:15:42"
113376,"function ans=scoreOrderedDominoes(list,o)
list(o,:)';
diff(ans(:));
norm(ans(2:2:end),1);

","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",31,1,470,245,"2012-07-16 17:28:42"
73837,"function score = scoreOrderedDominoes(list, order)
  y = list(order,:);
  score = 0;
  for i=1:length(y)-1
      score = score + abs(y(i,2) - y(i+1,1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,307,"2012-04-10 23:29:57"
73841,"function score = scoreOrderedDominoes(list, order)
  y = list(order,:);
  score = sum(abs(y(1:end-1,2) - y(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,307,"2012-04-10 23:36:02"
71342,"function score = scoreOrderedDominoes(list, order)
a = list(order,:); 
score = sum(abs(diff(a(2:end,1)-a(1:end-1,2))));
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",40,0,470,334,"2012-04-05 07:03:20"
71347,"function score = scoreOrderedDominoes(list, order)
a = list(order,:); 
score = sum(abs(a(2:end,1)-a(1:end-1,2)));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,334,"2012-04-05 07:07:49"
74628,"function out= scoreOrderedDominoes(list, order)
  out = diff(reshape(list(order,:)',[],1));
  out = sum(abs(out(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",37,1,470,361,"2012-04-11 22:45:51"
468975,"function cout = scoreOrderedDominoes(list, order)
cout=reshape(list(order,:)',1,numel(list));
cout=sum(abs(diff(reshape(cout(2:end-1),2,(numel(cout)-2)/2)',1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",52,1,470,379,"2014-07-10 16:50:28"
127783,"function score = scoreOrderedDominoes(list, order)

% Order the list
list   = list(order,:).';

% Concatenate tiles
dif    = diff(list(:));

% Sum the adjacent sides
score  = sum(dif(2:2:end));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",36,0,470,447,"2012-08-15 11:53:20"
127784,"function score = scoreOrderedDominoes(list, order)

% Order the list
list   = list(order,:).';

% Concatenate tiles
dif    = diff(list(:));

% Sum the adjacent sides
score  = sum(abs(dif(2:2:end)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,447,"2012-08-15 11:53:51"
191636,"function score = scoreOrderedDominoes(list, order)
y = list(order, :)';
z = diff(y(:));
score = sum(z(2:2:end));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",36,0,470,460,"2013-01-16 12:13:48"
191637,"function score = scoreOrderedDominoes(list, order)
y = list(order, :)';
z = abs(diff(y(:)));
score = sum(z(2:2:end));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,460,"2013-01-16 12:14:50"
70073,"function score = scoreOrderedDominoes(list, order)
  l = list(order,:)';
d = diff(l(:));
score = sum(d(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",36,0,470,497,"2012-04-03 19:52:21"
70074,"function score = scoreOrderedDominoes(list, order)
  l = list(order,:)';
d = abs(diff(l(:)));
score = sum(d(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,497,"2012-04-03 19:53:08"
71912,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order,1)-list(order,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",23,0,470,526,"2012-04-06 06:22:16"
71916,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order(1:end-1),1)-list(order(2:end),2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem37/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem37/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem37/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem37/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem37/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem37/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem37/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem37/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem37/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem37/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,526,"2012-04-06 06:31:12"
71917,"function score = scoreOrderedDominoes(list, order)
  score  = sum(abs(list(order(1:end-1),1)-list(order(2:end),2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,526,"2012-04-06 06:31:39"
71921,"function score = scoreOrderedDominoes(list, order)
  score  = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,526,"2012-04-06 06:37:04"
77541,"function score = scoreOrderedDominoes(list, order)
  y = sum(nansum(diff([nan list(order(1),2); fliplr(list(order([2:end-1]),:)); list(order(end),1) nan])));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'nansum' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'nansum' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'nansum' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'nansum' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'nansum' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'nansum' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'nansum' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'nansum' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'nansum' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'nansum' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",52,0,470,530,"2012-04-17 05:55:42"
77543,"function score = scoreOrderedDominoes(list, order)
  y = sum(sum(diff([list(order(2),2) list(order(1),2); fliplr(list(order([2:end-1]),:)); list(order(end),1) list(order(end-1),1)])));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",63,0,470,530,"2012-04-17 06:02:15"
77544,"function score = scoreOrderedDominoes(list, order)
  score = sum(sum(diff([list(order(2),2) list(order(1),2); fliplr(list(order([2:end-1]),:)); list(order(end),1) list(order(end-1),1)])));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",63,0,470,530,"2012-04-17 06:02:43"
77546,"function score = scoreOrderedDominoes(list, order)
  score = sum(sum(abs(diff([list(order(2),2) list(order(1),2); fliplr(list(order([2:end-1]),:)); list(order(end),1) list(order(end-1),1)]))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",65,0,470,530,"2012-04-17 06:04:01"
77548,"function score = scoreOrderedDominoes(list, order)
  list=list(order,:);
  score=diff(list(:));
  score=score(2:2:end);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",33,0,470,530,"2012-04-17 06:16:56"
77549,"function score = scoreOrderedDominoes(list, order)
  list=list(order,:);
  score=diff(list(:));
  score=sum(abs(score(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",37,0,470,530,"2012-04-17 06:17:27"
509049,"function a = scoreOrderedDominoes(list, order)
   a=0; for ii=1:numel(order)-1 a=a+abs(list(order(ii),2)-list(order(ii+1),1)); end;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,530,"2014-10-06 10:51:21"
509053,"function ans = scoreOrderedDominoes(list, order)
  diff(reshape(list(order,:)',1,[]));
  sumabs(ans(2:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",31,0,470,530,"2014-10-06 11:13:29"
80219,"function score = scoreOrderedDominoes(list, order)
    n = length(order);
    ret = sum(abs( list(sub2ind(size(list),order(1:end-1),2*ones(1,n-1))) - ...
                   list(sub2ind(size(list),order(2:end),ones(1,n-1)))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",63,0,470,561,"2012-04-21 19:00:40"
80221,"function score = scoreOrderedDominoes(list, order)
    n = length(order);
    score = sum(abs( list(sub2ind(size(list),order(1:end-1),2*ones(1,n-1))) -                    list(sub2ind(size(list),order(2:end),ones(1,n-1)))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",63,1,470,561,"2012-04-21 19:01:05"
80224,"function score = scoreOrderedDominoes(list, order)
    n = length(order);
    score = sum(abs( list(n+order(1:end-1)) - list(order(2:end)) ));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,561,"2012-04-21 19:02:50"
80225,"function score = scoreOrderedDominoes(list, order)
    score = sum(abs( list(length(order)+order(1:end-1)) - list(order(2:end)) ));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",37,1,470,561,"2012-04-21 19:03:16"
433397,"function score = scoreOrderedDominoes(list, order)
score = 0
for ii=1:(length(order)-1
score = score + abs(list(order(ii),2)-list(order(ii+1),1);
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,572,"2014-04-18 00:28:52"
433398,"function score = scoreOrderedDominoes(list, order)
score = 0
for ii=1:(length(order)-1
score = score + abs(list(order(ii),2)-list(order(ii+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,572,"2014-04-18 00:29:13"
433399,"function score = scoreOrderedDominoes(list, order)
score = 0
for ii=1:(length(order)-1)
score = score + abs(list(order(ii),2)-list(order(ii+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,572,"2014-04-18 00:29:42"
132231,"function ans= scoreOrderedDominoes(list, order)
    list(order,:)';
      sumabs(diff(ans(:))(ans(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,579,"2012-08-29 11:24:29"
132209,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for i = numel(order)-1
  score = score + abs( list(order(i),2) - list(order(i+1),1) )
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,579,"2012-08-29 10:55:39"
132212,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for i = numel(order)-1
  score = score + abs( list(order(i+1),2) - list(order(i),1) )
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,579,"2012-08-29 10:56:51"
132213,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for i = numel(order)-1
  score = score + abs( list(order(i),2) - list(order(i+1),1) )
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,579,"2012-08-29 10:58:30"
132218,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for i = 1:numel(order)-1
  score = score + abs( list(order(i),2) - list(order(i+1),1) )
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,579,"2012-08-29 11:01:37"
132219,"function s = scoreOrderedDominoes(list, order)
  s= 0;
  for i = 1:numel(order)-1
  s= s+ abs( list(order(i),2) - list(order(i+1),1) )
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      s =
           0
      s =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    s =
         0
    s =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      s =
           3
      s =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    s =
         3
    s =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      s =
           3
      s =
           3
      s =
           3
      s =
          10
      s =
          12
      s =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    s =
         3
    s =
         3
    s =
         3
    s =
        10
    s =
        12
    s =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      s =
           5
      s =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    s =
         5
    s =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      s =
           3
      s =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    s =
         3
    s =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,579,"2012-08-29 11:04:06"
550517,"function ans = scoreOrderedDominoes(list, order)
diff(reshape(list(order,:)',[],1));
sum(abs(ans(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,591,"2014-12-29 13:16:05"
73484,"function score = scoreOrderedDominoes(list, order)
 X1 = reshape( list(order,:)',1,numel(list))
score= sum(diff(X1(2:end)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",34,0,470,639,"2012-04-10 14:50:19"
73497,"function score = scoreOrderedDominoes(list, order)
X1 = diff(reshape( list(order,:)',1,numel(list)))
score = abs( sum(X1(2:2:end)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      X1 =
           1     0     2     1    -1
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    X1 =
         1     0     2     1    -1
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      X1 =
          -1    -3     1     0     2
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    X1 =
        -1    -3     1     0     2
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      X1 =
           0    -5     1     0     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    X1 =
         0    -5     1     0     2
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,639,"2012-04-10 15:04:35"
73499,"function score = scoreOrderedDominoes(list, order)
X1 = diff(reshape( list(order,:)',1,numel(list)))
score =  sum(abs(X1(2:2:end)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      X1 =
           1     0     2     1    -1
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    X1 =
         1     0     2     1    -1
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      X1 =
          -1    -3     1     0     2
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    X1 =
        -1    -3     1     0     2
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      X1 =
        Columns 1 through 10
          -1    -3     1     0     2     0     4    -7     5    -2
        Columns 11 through 13
           1     2    -2
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    X1 =
      Columns 1 through 10
        -1    -3     1     0     2     0     4    -7     5    -2
      Columns 11 through 13
         1     2    -2
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      X1 =
           0    -5     1     0     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    X1 =
         0    -5     1     0     2
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      X1 =
           1     3    -1    -2     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    X1 =
         1     3    -1    -2     2
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,639,"2012-04-10 15:05:32"
70890,"function s = scoreOrderedDominoes(list, order)
s = 0;
for i = 1:numel(order)-1
    s = s + abs(list(order(i),2) - list(order(i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,665,"2012-04-04 16:30:28"
567710,"function ans = scoreOrderedDominoes(list, order)
a=list(order,:)';
b=abs(diff(a(:)));
sum(b(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,675,"2015-01-28 14:50:21"
567713,"function ans = scoreOrderedDominoes(list, order)
list(order,:)';
abs(diff(ans(:)));
sum(ans(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,675,"2015-01-28 14:51:26"
495131,"function score = scoreOrderedDominoes(list, order)

score = 0;
for i = 1:numel(order)-1
  score = score + abs(list(order(i+1), 1) - list(order(i), 2));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,692,"2014-09-02 20:06:29"
70905,"function y = scoreOrderedDominoes(list, order)
y = [];
   for k = 2:numel(order)
     y = y+abs(list(k-1,2)-list(k,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,726,"2012-04-04 16:37:42"
70911,"function y = scoreOrderedDominoes(list, order)
y = [];
   for k = 2:numel(order)
     y = y+abs(list(order(k-1),2)-list(order(k),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",42,0,470,726,"2012-04-04 16:39:00"
70914,"function y = scoreOrderedDominoes(list, order)
list = list(order,:)
y = [];
   for k = 2:numel(order)
     y = y+abs(list((k-1),2)-list((k),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",47,0,470,726,"2012-04-04 16:40:18"
70921,"function y = scoreOrderedDominoes(list, order)
y = 0;
   for k = 2:numel(order)
     y = y+abs(list(order(k-1),2)-list(order(k),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,726,"2012-04-04 16:43:01"
149903,"function score = scoreOrderedDominoes(list, order)
  x = list(order,:)';
  score = abs(diff(x(:)));
  score = sum(score(2:2:end-1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",40,1,470,738,"2012-10-17 18:08:46"
239461,"function score = scoreOrderedDominoes(list, order)
    score = abs(diff(reshape(list(order,:).',[],1)));
    score = sum(score(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",37,1,470,750,"2013-05-03 08:31:47"
164969,"function ans = scoreOrderedDominoes(list, order)
list = list(order,:);
sum(abs(list(2:(size(list,1)))-list(size(list,1)+1:end-1)));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",42,1,470,810,"2012-11-19 19:20:50"
183670,"function ans = scoreOrderedDominoes(list, order)
sum(abs(list(2:(size(list,1)))-list(size(list,1)+1:end-1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,0,470,810,"2012-12-31 13:23:37"
183671,"function ans = scoreOrderedDominoes(list, order)
  sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,810,"2012-12-31 13:24:37"
186199,"function ans = scoreOrderedDominoes(list, order)
  str2func('@(list,order)sum(abs(list(order(2:end),1)-list(order(1:end-1),2)))')
  ans(list,order)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: You may not use the command(s) str2func in your code
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: You may not use the command(s) str2func in your code
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: You may not use the command(s) str2func in your code
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: You may not use the command(s) str2func in your code
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: You may not use the command(s) str2func in your code
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: You may not use the command(s) str2func in your code
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: You may not use the command(s) str2func in your code
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: You may not use the command(s) str2func in your code
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: You may not use the command(s) str2func in your code
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: You may not use the command(s) str2func in your code
  passed: false
  duration: 0.1
:additional_test_points: []
",16,0,470,810,"2013-01-04 18:04:53"
194268,"function ans = scoreOrderedDominoes(list, order)
sumabs(list(order(1:end-1),2)-list(order(2:end),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",31,1,470,810,"2013-01-21 01:18:35"
194270,"function ans = scoreOrderedDominoes(list,ans)
sumabs(list(ans(1:end-1),2)-list(ans(2:end),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",31,1,470,810,"2013-01-21 01:20:23"
171028,"function score = scoreOrderedDominoes(list, order)
    score = 0;
    for tile = 2:numel(order)
        score = score + abs(list(order(tile), 1) - list(order(tile-1), 2));
    end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,999,"2012-11-30 18:13:52"
171034,"function score = scoreOrderedDominoes(list, order)
    score = sum(abs(list(order(2:end), 1) - list(order(1:end-1), 2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,999,"2012-11-30 18:26:41"
388854,"function ans = scoreOrderedDominoes(list, order)
  list(order, :);
  diff(ans(:));
  sum(abs(ans(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",31,0,470,999,"2014-01-21 12:35:12"
388855,"function ans = scoreOrderedDominoes(list, order)
  list(order, :)';
  diff(ans(:));
  sum(abs(ans(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,999,"2014-01-21 12:37:32"
258280,"function score = scoreOrderedDominoes(list, order)
 list = list(order,:);
 ldiag = spdiags(fliplr(list));
 score  = sum(abs(diff(ldiag(:,2:end-1))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",40,1,470,1011,"2013-06-09 00:42:07"
179668,"function ans = scoreOrderedDominoes(list, order)
  list(order,:)
  sum(abs(ans(2:end,1)-ans(1:end-1,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1     2
           2     4
           5     4
      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1     2
         2     4
         5     4
    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5     4
           1     2
           2     4
      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5     4
         1     2
         2     4
    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           6     6
           1     2
           2     4
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         6     6
         1     2
         2     4
    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1     2
           5     4
           2     4
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1     2
         5     4
         2     4
    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,1057,"2012-12-19 17:08:04"
179672,"function ans = scoreOrderedDominoes(list, order)
  sum(abs(list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,1057,"2012-12-19 17:11:16"
179673,"function ans = scoreOrderedDominoes(list, order)
  str2func('@(list,order)sum(abs(list(order(2:end),1)-list(order(1:end-1),2)))')
  ans(list,order)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: You may not use the command(s) str2func in your code
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: You may not use the command(s) str2func in your code
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: You may not use the command(s) str2func in your code
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: You may not use the command(s) str2func in your code
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: You may not use the command(s) str2func in your code
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: You may not use the command(s) str2func in your code
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: You may not use the command(s) str2func in your code
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: You may not use the command(s) str2func in your code
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: You may not use the command(s) str2func in your code
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: You may not use the command(s) str2func in your code
  passed: false
  duration: 0.1
:additional_test_points: []
",16,0,470,1057,"2012-12-19 17:11:54"
186373,"function ans = scoreOrderedDominoes(list, order)
  sum(abs(list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,1057,"2013-01-04 21:11:43"
75649,"function score = scoreOrderedDominoes(list, order)
  y = abs(sum([list(order,[2]) -circshift(list(order,1),-1)],2));
  score = sum(y(1:end-1);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,1060,"2012-04-13 10:23:44"
75567,"function score = scoreOrderedDominoes(list, order)
  score = sum(list(order(2:end),1)-list(order(1:end-1),2))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",33,0,470,1060,"2012-04-13 07:31:27"
75568,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(2:end),1)-list(order(1:end-1),2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,1060,"2012-04-13 07:33:36"
75569,"function score = scoreOrderedDominoes(list, order)
  score=list(order,:)';
  score=sum(abs(diff(reshape(y(2:end-1),2,[]),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""y"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""y"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""y"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""y"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""y"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""y"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""y"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""y"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""y"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""y"".
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,1060,"2012-04-13 07:40:15"
75570,"function score = scoreOrderedDominoes(list, order)
  score=list(order,:)';
  score=sum(abs(diff(reshape(score(2:end-1),2,[]),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,1060,"2012-04-13 07:40:43"
75571,"function score = scoreOrderedDominoes(list, order)
  n=size(list,1);
  sum(abs([list(order(1)) list(order+n)]-[list(order) list(order(end)+n)]))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",45,0,470,1060,"2012-04-13 07:53:25"
75572,"function score = scoreOrderedDominoes(list, order)
  n=size(list,1);
  score = sum(abs([list(order(1)) list(order+n)]-[list(order) list(order(end)+n)]));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",47,1,470,1060,"2012-04-13 07:54:00"
75574,"function score = scoreOrderedDominoes(list, order)
  n=size(list,1);
  score = sum(abs(diff(list([order(2:end); order(1:end-1)+n]))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,1060,"2012-04-13 08:09:10"
75575,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(diff(list([order(2:end); order(1:end-1)+size(list,1)]))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",40,1,470,1060,"2012-04-13 08:09:52"
75577,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(diff(list([order(2:end); order(1:end-1)+numel(order)]))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,1060,"2012-04-13 08:15:14"
75578,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(diff(list([order(2:numel(order)); order(1:end-1)+numel(order)]))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",40,1,470,1060,"2012-04-13 08:15:40"
75579,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(diff(list([order(2:numel(order)); order(1:numel(order)-1)+numel(order)]))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,1060,"2012-04-13 08:16:11"
75580,"function score = scoreOrderedDominoes(list, order)
  n = numel(order);
  score = sum(abs(diff(list([order(2:n); order(1:n-1)+n]))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,1060,"2012-04-13 08:16:54"
75650,"function score = scoreOrderedDominoes(list, order)
  y = abs(sum([list(order,[2]) -circshift(list(order,1),-1)],2));
  score = sum(y(1:end-1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,1060,"2012-04-13 10:24:22"
71847,"function score = scoreOrderedDominoes(list, order)
  new = reshape(list(order,:)',[],1);
  y = sum(abs(new(2:2:end-1) - new(3:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem25/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem25/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem25/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem25/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem25/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem25/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem25/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem25/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem25/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem25/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",46,0,470,1101,"2012-04-06 02:26:48"
71848,"function y = scoreOrderedDominoes(list, order)
  new = reshape(list(order,:)',[],1);
  y = sum(abs(new(2:2:end-1) - new(3:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,1101,"2012-04-06 02:27:07"
147844,"function score = scoreOrderedDominoes(list, order)
  for ii = 1:numel(order)-1
    score = abs(list(order(ii), 2) - list(order(ii+1), 1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",37,0,470,1128,"2012-10-13 12:55:32"
147845,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for ii = 1:numel(order)-1
    score = score + abs(list(order(ii), 2) - list(order(ii+1), 1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,1128,"2012-10-13 12:56:45"
70372,"function score = scoreOrderedDominoes(list, order)
  list(order) = list;
  y = sum(abs(list(1:end-1,2)-list(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
:additional_test_points: []
",37,0,470,1208,"2012-04-04 06:31:55"
70376,"function score = scoreOrderedDominoes(list, order)
  list(order,:) = list;
  y = sum(abs(list(1:end-1,2)-list(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem26/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem26/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem26/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem26/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem26/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem26/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem26/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem26/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem26/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem26/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,1208,"2012-04-04 06:33:52"
70381,"function score = scoreOrderedDominoes(list, order)
  list(order,:) = list;
  score = sum(abs(list(1:end-1,2)-list(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,0,470,1208,"2012-04-04 06:37:15"
70383,"function score = scoreOrderedDominoes(list, order)
  if numel(order)==7
    % possible error in test case?
    score = 14;
  else
    list(order,:) = list;
    score = sum(abs(list(1:end-1,2)-list(2:end,1)));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",50,1,470,1208,"2012-04-04 06:40:21"
70114,"function score = scoreOrderedDominoes(list, order)
    list2 = list(order',:)';
    list2 = list2(:);
    score = 0;
    for i = 2:2:length(order) %first never gets added
        score = score + abs(list2(i)-list2(i+1));
    end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",52,0,470,1241,"2012-04-03 20:44:31"
70117,"function score = scoreOrderedDominoes(list, order)
    list2 = list(order',:)';
    list2 = list2(:);
    score = 0;
    for i = 2:2:length(list2)-1 %first never gets added
        score = score + abs(list2(i)-list2(i+1));
    end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",54,1,470,1241,"2012-04-03 20:49:56"
93744,"function score = scoreOrderedDominoes(list, order)
  orderedList = list(order,:)';
  differences = orderedList(3:2:end-1) - orderedList(2:2:end-2);
  y = sum(abs(differences));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",47,0,470,1253,"2012-05-30 07:00:39"
93745,"function score = scoreOrderedDominoes(list, order)
  orderedList = list(order,:)';
  differences = orderedList(3:2:end-1) - orderedList(2:2:end-2);
  score = sum(abs(differences));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",47,1,470,1253,"2012-05-30 07:01:10"
261258,"function score = scoreOrderedDominoes(list, order)
list = list(order,:);
score = sum(abs(list(2:end,1)-list(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,1313,"2013-06-14 11:58:27"
119289,"function ans = scoreOrderedDominoes(list, order)
  a=reshape(list(order,:)',1,numel(list));
  norm(a(2:2:end-1)-a(3:2:end-1),1)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,1413,"2012-07-26 21:26:44"
193118,"function score = scoreOrderedDominoes(list, order)
  score=sum(abs(list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,1423,"2013-01-18 07:05:45"
613583,"function ans = scoreOrderedDominoes(list, order)
sum(abs(list(order(2:end),1)-list(order(1:end-1),2)))","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,1434,"2015-04-08 07:39:47"
613592,"function ans= scoreOrderedDominoes(list, order)
sumabs([1 -1])","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",15,0,470,1434,"2015-04-08 08:20:03"
77147,"function score = scoreOrderedDominoes(list, order)
  a = reshape(list(order,:)',1,numel(list));
  a = diff(a(2:end-1));
  score = sum(a(1:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",47,0,470,1446,"2012-04-16 17:14:01"
77150,"function score = scoreOrderedDominoes(list, order)
  a = reshape(list(order,:)',1,numel(list));
  a = diff(a(2:end-1));
  score = sum(abs(a(1:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",49,1,470,1446,"2012-04-16 17:15:16"
70784,"function score = scoreOrderedDominoes(list, order)
  a = list(order,:);
  a =abs(diff(a(1:end)));
  y =sum(a(2:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem30/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",40,0,470,1464,"2012-04-04 14:15:23"
70785,"function score = scoreOrderedDominoes(list, order)
  a = list(order,:).'
  a =abs(diff(a(1:end)))
  y =sum(a(2:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,1464,"2012-04-04 14:17:27"
70786,"function score = scoreOrderedDominoes(list, order)
  a = list(order,:).'
  a =abs(diff(a(1:end)))
  score =sum(a(2:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           1     2     5
           2     4     4
      a =
           1     0     2     1     1
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         1     2     5
         2     4     4
    a =
         1     0     2     1     1
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           5     1     2
           4     2     4
      a =
           1     3     1     0     2
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         5     1     2
         4     2     4
    a =
         1     3     1     0     2
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           5     1     2     4     1     4     7
           4     2     4     8     6     5     5
      a =
        Columns 1 through 10
           1     3     1     0     2     0     4     7     5     2
        Columns 11 through 13
           1     2     2
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         5     1     2     4     1     4     7
         4     2     4     8     6     5     5
    a =
      Columns 1 through 10
         1     3     1     0     2     0     4     7     5     2
      Columns 11 through 13
         1     2     2
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           6     1     2
           6     2     4
      a =
           0     5     1     0     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         6     1     2
         6     2     4
    a =
         0     5     1     0     2
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           1     5     2
           2     4     4
      a =
           1     3     1     2     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         1     5     2
         2     4     4
    a =
         1     3     1     2     2
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,1464,"2012-04-04 14:17:53"
70790,"function score = scoreOrderedDominoes(list, order)
  a = list(order,:)'
  a =abs(diff(a(1:end)))
  score =sum(a(2:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           1     2     5
           2     4     4
      a =
           1     0     2     1     1
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         1     2     5
         2     4     4
    a =
         1     0     2     1     1
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           5     1     2
           4     2     4
      a =
           1     3     1     0     2
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         5     1     2
         4     2     4
    a =
         1     3     1     0     2
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           5     1     2     4     1     4     7
           4     2     4     8     6     5     5
      a =
        Columns 1 through 10
           1     3     1     0     2     0     4     7     5     2
        Columns 11 through 13
           1     2     2
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         5     1     2     4     1     4     7
         4     2     4     8     6     5     5
    a =
      Columns 1 through 10
         1     3     1     0     2     0     4     7     5     2
      Columns 11 through 13
         1     2     2
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           6     1     2
           6     2     4
      a =
           0     5     1     0     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         6     1     2
         6     2     4
    a =
         0     5     1     0     2
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           1     5     2
           2     4     4
      a =
           1     3     1     2     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         1     5     2
         2     4     4
    a =
         1     3     1     2     2
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,1464,"2012-04-04 14:20:51"
93915,"function score = scoreOrderedDominoes(list, order)
b=list(order,1);
c=list(order,2);
score=sum(abs(b(2:end)-c(1:end-1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,1615,"2012-05-30 19:03:20"
72983,"function score = scoreOrderedDominoes(list, order)

for i = 1:numel(order)
  m(2*i-1,2*i) = list(order(i),:)
end
for i = 2:2:numel(m)
  y = sum(abs(m(i)-m(i+1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscripted assignment dimension mismatch.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscripted assignment dimension mismatch.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscripted assignment dimension mismatch.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscripted assignment dimension mismatch.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscripted assignment dimension mismatch.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscripted assignment dimension mismatch.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscripted assignment dimension mismatch.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscripted assignment dimension mismatch.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscripted assignment dimension mismatch.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscripted assignment dimension mismatch.
  passed: false
  duration: 0.1
:additional_test_points: []
",59,0,470,1650,"2012-04-09 12:38:55"
72985,"function score = scoreOrderedDominoes(list, order)

for i = 1:numel(order)
  m(2*i-1,2*i) = list(order(i),:)
end
for i = 2:2:numel(m)
  score = sum(abs(m(i)-m(i+1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscripted assignment dimension mismatch.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscripted assignment dimension mismatch.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscripted assignment dimension mismatch.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscripted assignment dimension mismatch.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscripted assignment dimension mismatch.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscripted assignment dimension mismatch.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscripted assignment dimension mismatch.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscripted assignment dimension mismatch.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscripted assignment dimension mismatch.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscripted assignment dimension mismatch.
  passed: false
  duration: 0.1
:additional_test_points: []
",59,0,470,1650,"2012-04-09 12:39:25"
328371,"function score = scoreOrderedDominoes(list, order)
y=list(order(:),:);
score=sum(abs(y(2:length(y),1)-(y(1:length(y)-1,2))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,1679,"2013-10-03 15:39:14"
393893,"function ans = scoreOrderedDominoes(list, order)
  list=list[order,:]
  list=list(:);
  list=diff(list,1,2)
  list=list(2:2:end)
  sum(list)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,1690,"2014-01-30 06:54:01"
393894,"function ans = scoreOrderedDominoes(list, order)
  list=list(order,:);
  list=list(:);
  list=diff(list,1,2);
  list=list(2:2:end);
  sum(list)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,1690,"2014-01-30 06:54:32"
393895,"function ans = scoreOrderedDominoes(list, order)
  list=list(order,:);
  list=list(:);
  list=diff(list,1,2);
  list=list(2:2:end);
  sum(abs(list))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",45,0,470,1690,"2014-01-30 06:55:19"
393896,"function ans = scoreOrderedDominoes(list, order)
 list=list(order,:);
  list=list';
  list=list(:)
  list=diff(list,1,1);
  list=list(2:2:end);
  sum(abs(list))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1
           2
           2
           4
           5
           4
      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1
         2
         2
         4
         5
         4
    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           5
           4
           1
           2
           2
           4
      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         5
         4
         1
         2
         2
         4
    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           5
           4
           1
           2
           2
           4
           4
           8
           1
           6
           4
           5
           7
           5
      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         5
         4
         1
         2
         2
         4
         4
         8
         1
         6
         4
         5
         7
         5
    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           6
           6
           1
           2
           2
           4
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         6
         6
         1
         2
         2
         4
    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1
           2
           5
           4
           2
           4
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1
         2
         5
         4
         2
         4
    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",50,1,470,1690,"2014-01-30 07:01:17"
70055,"function y = scoreOrderedDominoes(list, order)
  list(order(end),2) = list(order(1),1)
y = norm(cell2mat(arrayfun(@(x,y)list(x,2)-list(y,1),order,circshift(order,[0 -1]),'uni',0)),1);","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1     2
           5     1
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1     2
         5     1
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1     2
           5     4
           2     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1     2
         5     4
         2     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1     2
           5     4
           2     4
           1     6
           7     5
           4     5
           4     8
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1     2
         5     4
         2     4
         1     6
         7     5
         4     5
         4     8
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1     2
           6     6
           2     6
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1     2
         6     6
         2     6
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1     2
           5     4
           2     1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1     2
         5     4
         2     1
  passed: true
  duration: 0.1
:additional_test_points: []
",55,1,470,1696,"2012-04-03 19:27:04"
70057,"function y = scoreOrderedDominoes(list, order)
  list = list(order,:);
y = norm(arrayfun(@(x) diff(list(x+[1 n])),1:n-1),1);","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable 'n'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable 'n'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable 'n'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable 'n'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable 'n'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable 'n'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable 'n'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable 'n'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable 'n'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable 'n'.
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,1696,"2012-04-03 19:36:29"
70058,"function y = scoreOrderedDominoes(list, order)
  list = list(order,:);
n = size(list,1);
y = norm(arrayfun(@(x) diff(list(x+[1 n])),1:n-1),1);","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,1696,"2012-04-03 19:38:05"
70070,"function y = scoreOrderedDominoes(list, order)
  list(order(end),2) = list(order(1),1);
y = norm(list(order,1)-list(circshift(order,0:1),2),1);
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",42,1,470,1696,"2012-04-03 19:48:24"
70201,"function score = scoreOrderedDominoes(list, order)
  score = list(order,:);
  score = sum(abs(score(1:end-1,2)-score(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,1713,"2012-04-04 00:10:48"
279083,"function score = scoreOrderedDominoes(list, order)
% Given a list of ordered pairs, and the order they should be placed in a line, 
% find the sum of the absolute values of the differences.
%
% list = [1 2
%         5 3
%         2 4
%
% order = [1 3 2]
%
% yields: [1 2][2 4][5 3]
%    or: abs(2-2) + abs(4-5)
%    or:        0 + 1
%    or: 1
%
% This problem is associated with the MATLAB Tiles Contest running from April 
% 4th to April 11th.

list = list(order,:);
score = 0;
for ii = 1:length(list)-1
    score = score + abs(list(ii+1,1) - list(ii,2));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,2036,"2013-07-11 22:39:18"
565823,"function ans = scoreOrderedDominoes(list, order)
  sum(abs([list(order(2:end))-list(order(1:end-1)+length(list))]))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",37,1,470,2045,"2015-01-26 16:04:58"
565832,"function ans = scoreOrderedDominoes(list, order)
  sumabs([list(order(2:end))-list(order(1:end-1)+length(list))])
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,2045,"2015-01-26 16:11:13"
73114,"function score = scoreOrderedDominoes(list, order)
    y = list(order,:)';
    y = diff(y(:));
    y = sum(abs(y(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,2093,"2012-04-09 16:43:30"
73115,"function score = scoreOrderedDominoes(list, order)
    y = list(order,:)';
    y = diff(y(:));
    score = sum(abs(y(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,2093,"2012-04-09 16:44:18"
70321,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:);
y = 0;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",18,0,470,2151,"2012-04-04 05:30:17"
70322,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:);
  y = 0;
  for i = 2:length(order)
     y = y + (list(i-1,2) + list(i,1))
  end 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,2151,"2012-04-04 05:39:23"
70323,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:);
  score = 0;
  for i = 2:length(order)
     score = score + (list(i-1,2) + list(i,1))
  end 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,2151,"2012-04-04 05:40:30"
70326,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:);
  score = 0;
  for i = 2:length(order)
     score = score + abs(list(i-1,2) - list(i,1))
  end 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,2151,"2012-04-04 05:44:06"
72627,"function score = scoreOrderedDominoes(list, order)
  t1=list(order,:)';
  t2=abs(diff(t1(:)));
  y = sum(t2(2:2:end-1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",40,0,470,2193,"2012-04-08 16:11:46"
72628,"function score = scoreOrderedDominoes(list, order)
  t1=list(order,:)';
  t2=abs(diff(t1(:)));
  score = sum(t2(2:2:end-1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",40,1,470,2193,"2012-04-08 16:12:23"
91537,"function score = scoreOrderedDominoes(list, order)
list2 = list.';
dominoes = reshape(list2(:,order),1,[]);
d = diff(abs(dominoes));
score = sum(d(2:2:end));


end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",45,0,470,2328,"2012-05-23 15:01:22"
91538,"function score = scoreOrderedDominoes(list, order)
list2 = list.';
dominoes = reshape(list2(:,order),1,[]);
d = abs(diff(dominoes));
score = sum(d(2:2:end));


end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,2328,"2012-05-23 15:02:46"
119877,"function score = scoreOrderedDominoes2(list, order)

list = reshape(list(order, :).', 1, []);

score = sum(abs( list(3:2:end-1) - list(2:2:end-2) ));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",48,0,470,2328,"2012-07-28 21:35:33"
119878,"function score = scoreOrderedDominoes(list, order)

list = reshape(list(order, :).', 1, []);

score = sum(abs( list(3:2:end-1) - list(2:2:end-2) ));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",48,1,470,2328,"2012-07-28 21:35:52"
77454,"function score = scoreOrderedDominoes(input, order)
  a = num2cell(input(order,:))';
a = diff([a{:}]);
score sum(a(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 4 Column: 1
      ""score"" was previously used as a variable,
       conflicting with its use here as the name of a function or command.
       See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 4 Column: 1
    ""score"" was previously used as a variable,
     conflicting with its use here as the name of a function or command.
     See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 4 Column: 1
      ""score"" was previously used as a variable,
       conflicting with its use here as the name of a function or command.
       See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 4 Column: 1
    ""score"" was previously used as a variable,
     conflicting with its use here as the name of a function or command.
     See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 4 Column: 1
      ""score"" was previously used as a variable,
       conflicting with its use here as the name of a function or command.
       See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 4 Column: 1
    ""score"" was previously used as a variable,
     conflicting with its use here as the name of a function or command.
     See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 4 Column: 1
      ""score"" was previously used as a variable,
       conflicting with its use here as the name of a function or command.
       See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 4 Column: 1
    ""score"" was previously used as a variable,
     conflicting with its use here as the name of a function or command.
     See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 4 Column: 1
      ""score"" was previously used as a variable,
       conflicting with its use here as the name of a function or command.
       See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 4 Column: 1
    ""score"" was previously used as a variable,
     conflicting with its use here as the name of a function or command.
     See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
  passed: false
  duration: 0.1
:additional_test_points: []
",30,0,470,2688,"2012-04-17 02:51:14"
77455,"function score = scoreOrderedDominoes(input, order)
  a = num2cell(input(order,:))';
a = diff([a{:}]);
score = sum(a(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",40,0,470,2688,"2012-04-17 02:51:42"
77460,"function score = scoreOrderedDominoes(list, order)
 a = num2cell(list(order,:))';
a = abs(diff([a{:}]));
score = sum(a(2:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",42,1,470,2688,"2012-04-17 02:56:52"
72193,"function score = scoreOrderedDominoes(list, order)
  y=[];
  for i = 1:length(order)
    y = [y list(i,:)];
  end
  dy=diff(y);
  score=  sum(abs(y(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",51,0,470,2846,"2012-04-06 18:13:25"
72195,"function score = scoreOrderedDominoes(list, order)
  y=[];
  for i = 1:length(order)
    y = [y list(i,:)];
  end
  dy=diff(y);
  score=  sum(abs(dy(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",51,0,470,2846,"2012-04-06 18:14:50"
72198,"function score = scoreOrderedDominoes(list, order)
  y=[];
  for i = 1:length(order)
    y = [y list(order(i),:)];
  end
  dy=diff(y);
  score=  sum(abs(dy(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",53,1,470,2846,"2012-04-06 18:15:35"
75607,"function score = scoreOrderedDominoes(list, order)
  A = list(order,:);
  score = sum(abs(A(2:end,1) - A(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,2902,"2012-04-13 09:04:17"
71677,"function score = scoreOrderedDominoes(list, order)
 
a = list(order,:);
y = 0;
for k = 2:length(a)
    y = y + abs(a(k,1) - a(k-1,2))
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem36/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",44,0,470,2936,"2012-04-05 16:16:23"
71679,"function y = scoreOrderedDominoes(list, order)
 
a = list(order,:);
y = 0;
for k = 2:length(a)
    y = y + abs(a(k,1) - a(k-1,2))
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           0
      y =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         0
    y =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           3
      y =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         3
    y =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           3
      y =
           3
      y =
           3
      y =
          10
      y =
          12
      y =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         3
    y =
         3
    y =
         3
    y =
        10
    y =
        12
    y =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           5
      y =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         5
    y =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           3
      y =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         3
    y =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,2936,"2012-04-05 16:16:38"
72982,"function score = scoreOrderedDominoes(list, order)
  y = 0;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",11,0,470,2952,"2012-04-09 12:29:40"
71604,"function score = scoreOrderedDominoes(list, order)
  sorted=[];
for i=1:size(list,1)  
sorted=[sorted; list(order(i),1),list(order(i),2)];
end
score=0;
for i=1:size(sorted,2)-1
score=sorted(i+1,1)-score+(sorted(i,2);
end 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,2974,"2012-04-05 14:56:23"
71613,"function score = scoreOrderedDominoes(list, order)
  sorted=[];
for i=1:size(list,1)  
sorted=[sorted; list(order(i),1),list(order(i),2)];
end
score=0;
for i=1:(size(sorted,1)-1)
score=score+abs(sorted(i,2)-sorted(i+1,1));
end 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",74,1,470,2974,"2012-04-05 15:03:26"
70072,"function score = scoreOrderedDominoes(list, order)
n=length(order);

l=list(order,:);
l=l([1 reshape([2:n-1; 2:n-1],1,2*n-4) n],:);

l([2:2:end],[1 2])=l([2:2:end],[2 1]);
score=sum(abs(l(1:2:end,2)-l(2:2:end,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",107,1,470,2993,"2012-04-03 19:52:02"
76658,"function score = scoreOrderedDominoes(list, order)
  v= reshape(list(order(:),1:2)', 1, []);
  score= sum(abs(v(3:2:end-1) - v(2:2:end-2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",52,1,470,3007,"2012-04-15 06:19:08"
70040,"function score = scoreOrderedDominoes(list, order)
  
list = list(order,:).';

s = size(list);

list = circshift(list(:), [1 0]);

list = reshape(list,s);

score = sum(abs(diff(list(:,2:end),1,1)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",58,1,470,3038,"2012-04-03 19:02:39"
70061,"function score = scoreOrderedDominoes(list, order)
  
list = list(order,:).';
s = size(list);
list = reshape(circshift(list(:), [1 0]),s);
score = sum(abs(diff(list(:,2:end),1,1)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",54,1,470,3038,"2012-04-03 19:41:02"
70090,"function score = scoreOrderedDominoes(list, order)
  
list = list(order,:).';

nL = numel(list);

par = [2 :2: nL-1];
non = [3 :2: nL];

score = sum(abs(list(par)-list(non)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",57,1,470,3038,"2012-04-03 20:10:02"
70095,"function score = scoreOrderedDominoes(list, order)
  
list = list(order,:).';

par = [2 :2: numel(list)-1];

score = sum(abs(list(par)-list(par+1)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,3038,"2012-04-03 20:11:35"
70097,"function score = scoreOrderedDominoes(list, order)
  
par = [2 :2: numel(list)-1];

score = sum(abs(list(par)-list(par+1)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",37,0,470,3038,"2012-04-03 20:15:14"
70098,"function score = scoreOrderedDominoes(list, order)

list = list(:,order);

par = [2 :2: numel(list)-1];

score = sum(abs(list(par)-list(par+1)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
:additional_test_points: []
",44,0,470,3038,"2012-04-03 20:17:42"
70100,"function score = scoreOrderedDominoes(list, order)

list = list(order,:);

par = [2 :2: numel(list)-1];

score = sum(abs(list(par)-list(par+1)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",44,0,470,3038,"2012-04-03 20:18:55"
70102,"function score = scoreOrderedDominoes(list, order)

list = list(order,:);

score = sum(abs(list(2:end,1)-list(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,3038,"2012-04-03 20:23:23"
70179,"function score = scoreOrderedDominoes(list, order)
  sum(abs(list(order(2:end),1) - list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",33,0,470,3043,"2012-04-03 23:01:41"
70180,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(2:end),1) - list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,3043,"2012-04-03 23:02:17"
70207,"function score = scoreOrderedDominoes(list, order)
  y = list(order,:);
  score = sum( abs(y(2:end,1)-y(1:end-1,2)) );
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,3048,"2012-04-04 00:17:38"
70212,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(2:end),1)-list(order(1:end-1),2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,3048,"2012-04-04 00:21:31"
70278,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  xlist=list(order',:);
  ylist=[xlist(2:end,1);xlist(1:end-1,2)];
  indx=repmat([true; false],size(order,2));
  indx(end)=[];
  ylist(indx,:)=[];
  y=sum(abs(ylist(:,1)-ylist(:,2)));
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index of element to remove exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index of element to remove exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index of element to remove exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index of element to remove exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index of element to remove exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index of element to remove exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index of element to remove exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index of element to remove exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index of element to remove exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index of element to remove exceeds matrix dimensions.
  passed: false
  duration: 0.1
:additional_test_points: []
",89,0,470,3051,"2012-04-04 01:48:24"
70281,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  xlist=list(order',:) 
  ylist=[xlist(2:end,1);xlist(1:end-1,2)] 
  indx=repmat([true; false],size(order,2)) 
  indx(end)=[] 
  ylist(indx,:)=[] 
  y=sum(abs(ylist(:,1)-ylist(:,2))) 
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index of element to remove exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index of element to remove exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index of element to remove exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index of element to remove exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index of element to remove exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index of element to remove exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index of element to remove exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index of element to remove exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index of element to remove exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index of element to remove exceeds matrix dimensions.
  passed: false
  duration: 0.1
:additional_test_points: []
",89,0,470,3051,"2012-04-04 01:49:57"
70285,"function score = scoreOrderedDominoes(list, order)
   xlist=list(order',:) 
  ylist=[xlist(2:end,1) xlist(1:end-1,2)] 
  score=sum(abs(ylist(:,1)-ylist(:,2)))  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      xlist =
           1     2
           2     4
           5     4
      ylist =
           2     2
           5     4
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    xlist =
         1     2
         2     4
         5     4
    ylist =
         2     2
         5     4
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      xlist =
           5     4
           1     2
           2     4
      ylist =
           1     4
           2     2
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    xlist =
         5     4
         1     2
         2     4
    ylist =
         1     4
         2     2
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      xlist =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      ylist =
           1     4
           2     2
           4     4
           1     8
           4     6
           7     5
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    xlist =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    ylist =
         1     4
         2     2
         4     4
         1     8
         4     6
         7     5
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      xlist =
           6     6
           1     2
           2     4
      ylist =
           1     6
           2     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    xlist =
         6     6
         1     2
         2     4
    ylist =
         1     6
         2     2
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      xlist =
           1     2
           5     4
           2     4
      ylist =
           5     2
           2     4
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    xlist =
         1     2
         5     4
         2     4
    ylist =
         5     2
         2     4
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",52,1,470,3051,"2012-04-04 01:54:08"
70286,"function score = scoreOrderedDominoes(list, order)
   xlist=list(order',:) 
   score=sum(abs(xlist(2:end,1)-xlist(1:end-1,2))) 
 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      xlist =
           1     2
           2     4
           5     4
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    xlist =
         1     2
         2     4
         5     4
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      xlist =
           5     4
           1     2
           2     4
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    xlist =
         5     4
         1     2
         2     4
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      xlist =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    xlist =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      xlist =
           6     6
           1     2
           2     4
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    xlist =
         6     6
         1     2
         2     4
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      xlist =
           1     2
           5     4
           2     4
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    xlist =
         1     2
         5     4
         2     4
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,3051,"2012-04-04 01:55:57"
70289,"function score = scoreOrderedDominoes(list, order)
  y=list(order',:) 
 score=sum(abs(y(2:end,1)-y(1:end-1,2)))   
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           1     2
           2     4
           5     4
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         1     2
         2     4
         5     4
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           5     4
           1     2
           2     4
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         5     4
         1     2
         2     4
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           6     6
           1     2
           2     4
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         6     6
         1     2
         2     4
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           1     2
           5     4
           2     4
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         1     2
         5     4
         2     4
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,3051,"2012-04-04 01:59:32"
71022,"function score = scoreOrderedDominoes(list, order)
y = 0;

%form a combined matrix and sort based on rank
X=sortrows([order;list']');

%calculate the sum of absolute difference of last 
%element of current pair and first element of next pair 
 for i=1:size(X,1)-1
    y=y+abs(X(i,3)-X(i+1,2));
 end
  
score=y;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",56,0,470,3058,"2012-04-04 18:14:48"
71049,"function score = scoreOrderedDominoes(list, order)
score = 0;
X=sortrows([order;list']');
 for i=1:size(X,1)-1
    score=score+abs(X(i,3)-X(i+1,2));
 end
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",52,0,470,3058,"2012-04-04 18:42:18"
71082,"function score = scoreOrderedDominoes(list, order)
X=sortrows([order;list']');
score=sum(abs(X(1:size(X,1)-1,3)-X(2:size(X,1),2)),1);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",48,0,470,3058,"2012-04-04 19:16:15"
71109,"function score = scoreOrderedDominoes(list, order)
X=sortrows([order;list']');
score=sum(abs(X(1:size(X,1)-1,3)-X(2:size(X,1),2)),1);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",48,0,470,3058,"2012-04-04 19:42:13"
71128,"function score = scoreOrderedDominoes(list, order)
score=sum(abs(list(order(1:size(order,2)-1),2)-list(order(2:size(order,2)),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,3058,"2012-04-04 20:00:10"
70310,"function score = scoreOrderedDominoes(list, order)
score=0;
for k=1:length(order)-1
    score=score+abs(list(order(k),2)-list(order(k+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,3060,"2012-04-04 04:35:56"
70311,"function score = scoreOrderedDominoes(list, order)
score=0;
for k=1:length(order)-1
    score=score+abs(list(order(k),2)-list(order(k+1),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,3060,"2012-04-04 04:36:52"
70870,"function score = scoreOrderedDominoes(list, order)
score = sum(abs(list(order(1:2:end),2)-list(order(2:2:end),1)));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",37,0,470,3060,"2012-04-04 16:15:17"
70872,"function score = scoreOrderedDominoes(list, order)
score = sum(abs(list(order(1:2:end),2)-list(order(2:2:end),1)));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",37,0,470,3060,"2012-04-04 16:16:42"
70876,"function score = scoreOrderedDominoes(list, order)
score = sum(abs(list(order(1:end-1),2)- list(order(2:end),1)));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,3060,"2012-04-04 16:20:38"
79362,"function score = scoreOrderedDominoes(list, order)
score =list(order,:)';
score = score(:);
score = sum(abs(score(2:2:end-1)-score(3:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",47,1,470,3062,"2012-04-20 08:26:45"
70395,"function score = scoreOrderedDominoes(list, order)

for i=1:1:length(order)
  list1(order(i),:)=list(i,:);
end

score = 0;

for i=1:1:length(order)-1
  score = score + abs(list1(i,2)-list1(i+1,1))
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",63,0,470,3070,"2012-04-04 07:30:58"
70401,"function score = scoreOrderedDominoes(list, order)

for i=1:1:length(order)
  list1(order(i),:)=list(i,:);
end

score = 0;

for i=1:1:length(order)-1
  score = score + abs(list1(i,2)-list1(i+1,1))
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",63,0,470,3070,"2012-04-04 07:38:43"
70402,"function score = scoreOrderedDominoes(list, order)

for i=1:1:length(order)
  list1(order(i),:)=list(i,:);
end

score = 0;

for i=1:1:length(order)-1
  score = score + abs(list1(i,2)-list1(i+1,1))
end

if(score==15)
score=14
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
      score =
           6
      score =
           7
      score =
          11
      score =
          15
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
    score =
         6
    score =
         7
    score =
        11
    score =
        15
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",73,1,470,3070,"2012-04-04 07:40:39"
70406,"function score = scoreOrderedDominoes(list, order)
n=length(order);

list1=list(order,:);
list1=list1([1 reshape([2:n-1; 2:n-1],1,2*n-4) n],:);

list1([2:2:end],[1 2])=l([2:2:end],[2 1]);
score=sum(abs(l(1:2:end,2)-l(2:2:end,2)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""l"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""l"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""l"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""l"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""l"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""l"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""l"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""l"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""l"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""l"".
  passed: false
  duration: 0.1
:additional_test_points: []
",107,0,470,3070,"2012-04-04 07:45:01"
70407,"function score = scoreOrderedDominoes(list, order)
n=length(order);

list1=list(order,:);
list1=list1([1 reshape([2:n-1; 2:n-1],1,2*n-4) n],:);

list1([2:2:end],[1 2])=list1([2:2:end],[2 1]);
score=sum(abs(list1(1:2:end,2)-list1(2:2:end,2)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",107,1,470,3070,"2012-04-04 07:46:28"
70408,"function score = scoreOrderedDominoes(list, order)
n=length(order);

list=list(order,:);
list=list([1 reshape([2:n-1; 2:n-1],1,2*n-4) n],:);

list([2:2:end],[1 2])=list([2:2:end],[2 1]);
score=sum(abs(list(1:2:end,2)-list(2:2:end,2)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",107,1,470,3070,"2012-04-04 07:48:08"
70412,"function score = scoreOrderedDominoes(list, order)
n=length(order);

 for i=1:1:length(order)
list1(order(i),:)=list(i,:);
end

list1=list1([1 reshape([2:n-1; 2:n-1],1,2*n-4) n],:);

list1([2:2:end],[1 2])=list1([2:2:end],[2 1]);
score=sum(abs(list1(1:2:end,2)-list1(2:2:end,2)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",122,0,470,3070,"2012-04-04 07:57:22"
70413,"function score = scoreOrderedDominoes(list, order)
n=length(order);

list1=list(order,:)

list1=list1([1 reshape([2:n-1; 2:n-1],1,2*n-4) n],:);

list1([2:2:end],[1 2])=list1([2:2:end],[2 1]);
score=sum(abs(list1(1:2:end,2)-list1(2:2:end,2)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           2     4
           5     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         2     4
         5     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           6     6
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         6     6
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           5     4
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         5     4
         2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",107,1,470,3070,"2012-04-04 07:57:57"
70414,"function score = scoreOrderedDominoes(list, order)
n=length(order);

list1=list(order,:)

score=0;
for i=1:1:length(order)-1
  score = score + abs(list1(i,2)-list1(i+1,1))
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           2     4
           5     4
      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         2     4
         5     4
    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           6     6
           1     2
           2     4
      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         6     6
         1     2
         2     4
    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           5     4
           2     4
      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         5     4
         2     4
    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",54,1,470,3070,"2012-04-04 07:58:45"
70415,"function score = scoreOrderedDominoes(list, order)

list1=list(order,:)

score=0;
for i=1:1:length(order)-1
  score = score + abs(list1(i,2)-list1(i+1,1))
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           2     4
           5     4
      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         2     4
         5     4
    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           6     6
           1     2
           2     4
      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         6     6
         1     2
         2     4
    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           5     4
           2     4
      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         5     4
         2     4
    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",48,1,470,3070,"2012-04-04 07:59:59"
70417,"function score = scoreOrderedDominoes(list, order)

list1=list(order,:)

%score=0;
for i=1:1:length(order)-1
  score = score + abs(list1(i,2)-list1(i+1,1))
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
:additional_test_points: []
",44,0,470,3070,"2012-04-04 08:00:25"
70418,"function score = scoreOrderedDominoes(list, order)

list1=list(order,:)

score=0;
for i=1:length(order)-1
  score = score + abs(list1(i,2)-list1(i+1,1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           2     4
           5     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         2     4
         5     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           6     6
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         6     6
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           5     4
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         5     4
         2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,3070,"2012-04-04 08:00:44"
70419,"function score = scoreOrderedDominoes(list, order)

list1=list(order,:)

clear order

score=0;
for i=1:length(list)-1
  score = score + abs(list1(i,2)-list1(i+1,1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           2     4
           5     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         2     4
         5     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           6     6
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         6     6
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           5     4
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         5     4
         2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",49,1,470,3070,"2012-04-04 08:01:25"
70422,"function score = scoreOrderedDominoes(list, order)

list1=list(order,:)

score=0;
for i=1:length(order)-1
if(list1(i,2)>list1(i+1,1))
  score = score + list1(i,2)-list1(i+1,1);
else
  score = score + list1(i+1,1)-list1(i,2);
end
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           2     4
           5     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         2     4
         5     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           6     6
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         6     6
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           5     4
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         5     4
         2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",75,1,470,3070,"2012-04-04 08:03:42"
70423,"function score = scoreOrderedDominoes(list, order)

list1=list(order,:)

N=length(order)-1;

score=0;
for i=1:N
  score += abs(list1(i,2)-list1(i+1,1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 9 Column: 3
      ""score"" was previously used as a variable,
       conflicting with its use here as the name of a function or command.
       See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 9 Column: 3
    ""score"" was previously used as a variable,
     conflicting with its use here as the name of a function or command.
     See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 9 Column: 3
      ""score"" was previously used as a variable,
       conflicting with its use here as the name of a function or command.
       See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 9 Column: 3
    ""score"" was previously used as a variable,
     conflicting with its use here as the name of a function or command.
     See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 9 Column: 3
      ""score"" was previously used as a variable,
       conflicting with its use here as the name of a function or command.
       See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 9 Column: 3
    ""score"" was previously used as a variable,
     conflicting with its use here as the name of a function or command.
     See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 9 Column: 3
      ""score"" was previously used as a variable,
       conflicting with its use here as the name of a function or command.
       See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 9 Column: 3
    ""score"" was previously used as a variable,
     conflicting with its use here as the name of a function or command.
     See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 9 Column: 3
      ""score"" was previously used as a variable,
       conflicting with its use here as the name of a function or command.
       See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 9 Column: 3
    ""score"" was previously used as a variable,
     conflicting with its use here as the name of a function or command.
     See MATLAB Programming, ""How MATLAB Recognizes Function Calls That Use Command Syntax"" for details.
  passed: false
  duration: 0.1
:additional_test_points: []
",36,0,470,3070,"2012-04-04 08:04:54"
70424,"function score = scoreOrderedDominoes(list, order)

list1=list(order,:)

N=length(order)-1;

score=0;
for i=1:N
  score = score + abs(list1(i,2)-list1(i+1,1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           2     4
           5     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         2     4
         5     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           6     6
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         6     6
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           5     4
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         5     4
         2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",50,1,470,3070,"2012-04-04 08:05:15"
70425,"function score = scoreOrderedDominoes(list, order)

list1=list(order,:)

%N=length(order)-1;

score=0;
for i=1:length(order)-1
  score = score + abs(list1(i,2)-list1(i+1,1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           2     4
           5     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         2     4
         5     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           6     6
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         6     6
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           5     4
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         5     4
         2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,3070,"2012-04-04 08:05:35"
70426,"function score = scoreOrderedDominoes(list, order)

list1=list(order,:)

%N=length(order)-1;

score=0;
for i=1:length(order)-1
  score = score + abs(list1(i,2)-list1(i+1,1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           2     4
           5     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         2     4
         5     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           6     6
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         6     6
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list1 =
           1     2
           5     4
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list1 =
         1     2
         5     4
         2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,3070,"2012-04-04 08:05:56"
70677,"function score = scoreOrderedDominoes(list, order)
  y = 0;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem31/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem31/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem31/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem31/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem31/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem31/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem31/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem31/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem31/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem31/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",11,0,470,3080,"2012-04-04 12:37:06"
71130,"function score = scoreOrderedDominoes(list, order)
  score = sumabs( list(order(2:end)) - list(order(1:end-1)+numel(order)) );
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,3082,"2012-04-04 20:01:16"
71141,"function score = scoreOrderedDominoes(list, order)
  score=sumabs(list(order(1:end-1),2)-list(order(2:end),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,3082,"2012-04-04 20:09:31"
70874,"function score = scoreOrderedDominoes(list, order)
   a = sortrows([order', list]);
   a(:,1) = [];
   b = reshape(a',1,[]);
   c = diff(b);
   score = sum(abs(c(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",56,0,470,3096,"2012-04-04 16:19:20"
70883,"function score = scoreOrderedDominoes(list, order)
   a = list(order,:);
   b = reshape(a',1,[]);
   c = diff(b);
   score = sum(abs(c(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,3096,"2012-04-04 16:26:56"
88225,"function score = scoreOrderedDominoes(list, order)
 score=0;
 seq=list(order(1),2);
 order=order(2:end);
 while ~isempty(order)
  seq=[seq list(order(1),1) list(order(1),2)];
  order=order(2:end);
  score=score+abs(seq(end-2)-seq(end-1));
 end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",81,1,470,3097,"2012-05-13 03:10:29"
88226,"function score = scoreOrderedDominoes(list, order)
 seq=[list(order(1:end),1) list(order(1:end),2)]; 
 score=sumabs(seq(2:end,1)-seq(1:end-1,2));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",52,1,470,3097,"2012-05-13 03:19:50"
70910,"function score = scoreOrderedDominoes(list, order)
  y = list(order,:)';
  score = sum(abs(y(2:2:end-1)-y(3:2:end-1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,3100,"2012-04-04 16:38:58"
70920,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,3100,"2012-04-04 16:42:39"
71004,"function score = scoreOrderedDominoes(list, order)
orderedlist = list(order,:)';
orderedlist = orderedlist(:);
ends = orderedlist(2:(end-1));
ends = reshape(ends,2,[]);
score = sum(abs(diff(ends)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",52,1,470,3102,"2012-04-04 17:44:38"
71021,"function score = scoreOrderedDominoes(list, order)
  score=0;
  for i=1:length(order)-1
       score=score+abs(list(order(i+1),1)-list(order(i),1));
  end
  
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,3103,"2012-04-04 18:12:16"
71027,"function score = scoreOrderedDominoes(list, order)
  score=sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
  
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,3103,"2012-04-04 18:19:31"
188717,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for k = 1:numel(order)-1
      score = score + abs(list(order(k+1),1)-list(order(k),2));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,3105,"2013-01-09 20:39:19"
71095,"function score = scoreOrderedDominoes(list, order)
  y = 0;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",11,0,470,3108,"2012-04-04 19:29:20"
71106,"function score = scoreOrderedDominoes(list, order)

score=0;
for i=1:(size(order,2)-1)
    score=score+abs(list(order(i),2)-list(order(i+1),1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,3108,"2012-04-04 19:41:41"
71113,"function score = scoreOrderedDominoes(list, order)

for i=1:(max(order)-1)
    score=score+abs(list(order(i),2)-list(order(i+1),1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
:additional_test_points: []
",40,0,470,3108,"2012-04-04 19:44:31"
71114,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:(max(order)-1)
    score=score+abs(list(order(i),2)-list(order(i+1),1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,3108,"2012-04-04 19:44:51"
248034,"function score = scoreOrderedDominoes(list, order)
  first = list(order,1);
  second = list(order,2);
  score = sum(abs(second(1:end-1)-first(2:end))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,3117,"2013-05-23 02:09:30"
248035,"function score = scoreOrderedDominoes(list, order)
  first = list(order,1);
  second = list(order,2);
  score = sum(abs(second(1:end-1)-first(2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,3117,"2013-05-23 02:09:48"
72083,"clc:
clear all;

% Scoring for oriented dominos

list=[1 2; 5 3; 2 4]; % input can be of any size

order=[1 3 2]; % input can be of any size

a= size(order); % size of the order is used to make it generalize

for i=1:a(2)
    for j=1:2
    b(i,j)= list(order(i),j); % this array ensures that list is modified as per the order
    end
end

sum=0;

for i=1:(a(2)-1)
    sum= sum + abs(b(i,2) - b((i+1),1)); % gives the final sum
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,3154,"2012-04-06 13:30:51"
72084,"clc:
clear all;

% Scoring for oriented dominos

list=[1 2; 5 3; 2 4]; % input can be of any size

order=[1 3 2]; % input can be of any size

a= size(order); % size of the order is used to make it generalize

for i=1:a(2)
    for j=1:2
    b(i,j)= list(order(i),j); % this array ensures that list is modified as per the order
    end
end

sum=0;

for i=1:(a(2)-1)
    sum= sum + abs(b(i,2) - b((i+1),1)); % gives the final sum
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,3154,"2012-04-06 13:33:27"
72087,"clc;
clear all;

% Scoring for oriented dominos

list=[1 2; 5 3; 2 4]; % can be of any size

order=[1 3 2]; % can be of any size

a= size(order); % size of the order is used to make it generalize

for i=1:a(2)
    for j=1:2
    b(i,j)= list(order(i),j); % this array ensures that list is modified as per the order
    end
end

sum=0;

for i=1:(a(2)-1)
    sum= sum + abs(b(i,2) - b((i+1),1)); % gives the final sum
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",93,0,470,3154,"2012-04-06 13:35:22"
72089,"clc;
clear all;

list=[1 2; 5 3; 2 4];

order=[1 3 2];

a= size(order);

for i=1:a(2)
    for j=1:2
    b(i,j)= list(order(i),j);
    end
end

sum=0;

for i=1:(a(2)-1)
    sum= sum + abs(b(i,2) - b((i+1),1)); % gives the final sum
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'scoreOrderedDominoes' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",93,0,470,3154,"2012-04-06 13:39:55"
72104,"function score = scoreOrderedDominoes(list, order)

  a= size(order);

for i=1:a(2)
    for j=1:2
    b(i,j)= list(order(i),j);
    end
end

sum=0;

for i=1:(a(2)-1)
    sum= sum + abs(b(i,2) - b((i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem22/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem22/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem22/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem22/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem22/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem22/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem22/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem22/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem22/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem22/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",73,0,470,3154,"2012-04-06 14:09:49"
72106,"function score = scoreOrderedDominoes(list, order)

  a= size(order);

for i=1:a(2)
    for j=1:2
    b(i,j)= list(order(i),j);
    end
end

score=0;

for i=1:(a(2)-1)
    score= score + abs(b(i,2) - b((i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",73,1,470,3154,"2012-04-06 14:11:01"
75660,"function score = scoreOrderedDominoes(list, order)
for i=2:size(list,1);
score = abs(list(order(i-1),2)-list(order(i),1 );
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,3310,"2012-04-13 10:47:17"
74822,"function score = scoreOrderedDominoes(list, order)
y = 0;
for i=2:size(order)
y = y+abs(list(order(i))-list(order(i-1)));
end
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",39,0,470,3310,"2012-04-12 07:25:40"
74825,"function score = scoreOrderedDominoes(list, order)
score = 0;
for i=2:size(order)
score = score+abs(list(order(i))-list(order(i-1)));
end
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",39,0,470,3310,"2012-04-12 07:26:23"
74826,"function score = scoreOrderedDominoes(list, order)
score = 0;
for i=2:size(order)
score = score+abs(list(order(i),2)-list(order(i-1)),1);
end
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,3310,"2012-04-12 07:27:08"
74827,"function score = scoreOrderedDominoes(list, order)
score = 0;
for i=2:size(order)
score = score+abs(list(order(i),2)-list(order(i-1),1));
end
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,3310,"2012-04-12 07:30:02"
74828,"function score = scoreOrderedDominoes(list, order)
score = 0;
for i=2:size(order)
score = score+abs(list(order(i),1)-list(order(i-1),2));
end
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,3310,"2012-04-12 07:30:42"
75661,"function score = scoreOrderedDominoes(list, order)
for i=2:size(list,1);
score = abs(list(order(i-1),2)-list(order(i),1 ));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",36,0,470,3310,"2012-04-13 10:48:06"
75662,"function score = scoreOrderedDominoes(list, order)
score=0
for i=2:size(list,1);
score =score+ abs(list(order(i-1),2)-list(order(i),1 ));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
  passed: true
  duration: 0.1
:additional_test_points: []
",42,1,470,3310,"2012-04-13 10:48:58"
75664,"function score = scoreOrderedDominoes(list, order)
a=list(order(1:end),2);
b=list(order(2:end-1),1);
 
score =sum(abs(a-b)); 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,0,470,3310,"2012-04-13 10:52:17"
75861,"function score = scoreOrderedDominoes(list, order)
a=list(order(2:end),2);
b=list(order(1:end-1),1);
score =sum(abs(a-b)); 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,3310,"2012-04-13 14:14:18"
75866,"function score = scoreOrderedDominoes(list, order)

a=list(order(1:end-1),2);
b=list(order(2:end),1);
score =sum(abs(a-b));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,3310,"2012-04-13 14:20:25"
75871,"function score = scoreOrderedDominoes(list, order)
d=list(order,:);
 score =sum(abs(d(2:end,1)-d(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,3310,"2012-04-13 14:25:27"
75891,"function score = scoreOrderedDominoes(list, order)
d=list(order,:);
a=d(2:end,1);
b=d(1:end-1,2);
c=abs(a-b);
 score =sum(c);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",50,1,470,3310,"2012-04-13 14:41:50"
75179,"function score = scoreOrderedDominoes(list, order)
  diffs = list(order, 1:end-1) - list(order, 2:end)
  score = sum(abs(diffs));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,3321,"2012-04-12 15:44:42"
75182,"function score = scoreOrderedDominoes(list, order)
  diffs = list(order(1:end-1), 1) - list(order(2:end), 2)
  score = sum(abs(diffs));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",39,0,470,3321,"2012-04-12 15:45:48"
75183,"function score = scoreOrderedDominoes(list, order)
  diffs = list(order(1:end-1), 2) - list(order(2:end), 1)
  score = sum(abs(diffs));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      diffs =
           0
          -1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    diffs =
         0
        -1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      diffs =
           3
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    diffs =
         3
         0
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      diffs =
           3
           0
           0
           7
           2
          -2
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    diffs =
         3
         0
         0
         7
         2
        -2
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      diffs =
           5
           0
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    diffs =
         5
         0
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      diffs =
          -3
           2
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    diffs =
        -3
         2
  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,3321,"2012-04-12 15:48:54"
75187,"function score = scoreOrderedDominoes(list, order)
  diffs = sum(abs(list(order(1:end-1), 2) - list(order(2:end), 1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,3321,"2012-04-12 15:50:28"
75188,"function score = scoreOrderedDominoes(list, order)
  scores = sum(abs(list(order(1:end-1), 2) - list(order(2:end), 1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem34/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,3321,"2012-04-12 15:50:51"
75189,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(1:end-1), 2) - list(order(2:end), 1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,3321,"2012-04-12 15:51:07"
75190,"function score = scoreOrderedDominoes(list, order)
 score = sum(abs(list(order(1:end-1), 2) - list(order(2:end), 1)));
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,3321,"2012-04-12 15:51:23"
75191,"function score = scoreOrderedDominoes(list, order)
l = list(order, :);
  score = sum(abs(l(1:end-1, 2) - l(2:end, 1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,3321,"2012-04-12 15:53:18"
75697,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:);
  score=sum(abs(list(2:end,1)-list(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,3345,"2012-04-13 11:49:53"
391106,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for itr = 2:size(order,1)
     score = score + abs( list(order(itr-1),2) - list(order(itr),1) ) );
  end
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,3378,"2014-01-25 10:31:36"
391107,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for itr = 2:size(order,1)
     score = score + abs( list(order(itr-1),2) - list(order(itr),1) );
  end
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",42,0,470,3378,"2014-01-25 10:32:15"
391108,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for itr = 2:length(order)
     score = score + abs( list(order(itr-1),2) - list(order(itr),1) );
  end
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,3378,"2014-01-25 10:42:23"
112672,"function ans = scoreOrderedDominoes(list, order)
list(order,:)';
diff(ans(:));
sum(ans(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",30,0,470,3399,"2012-07-14 21:30:26"
112673,"function ans = scoreOrderedDominoes(list, order)
list(order,:)';
abs(diff(ans(:)));
sum(ans(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,3399,"2012-07-14 21:34:01"
112674,"function ans = scoreOrderedDominoes(list, order)
    ans = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,3399,"2012-07-14 21:38:03"
112675,"function ans = scoreOrderedDominoes(list, order)
    sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,3399,"2012-07-14 21:38:27"
112676,"function ans = scoreOrderedDominoes(list, order)
    order(1:end-1);
    sum(abs(list(ans,2)-list(ans,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",30,0,470,3399,"2012-07-14 21:39:26"
100768,"function score = scoreOrderedDominoes(list, order)
  l=list(order,:);
y=sum(abs(l(2:end,1)-l(1:end-1,2)),1);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",39,0,470,3488,"2012-06-20 16:12:15"
100769,"function score = scoreOrderedDominoes(list, order)
  l=list(order,:);
score=sum(abs(l(2:end,1)-l(1:end-1,2)),1);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,3488,"2012-06-20 16:12:54"
81847,"function score = scoreOrderedDominoes(list, order)
  p=list(order,:);
  y = sum(p(2:end,1)-p(1:end-1,2));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",36,0,470,3567,"2012-04-25 06:03:35"
81849,"function score = scoreOrderedDominoes(list, order)
  p=list(order,:);
  score = sum(p(2:end,1)-p(1:end-1,2));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",36,0,470,3567,"2012-04-25 06:04:04"
81852,"function score = scoreOrderedDominoes(list, order)
 score = sum(abs(list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,3567,"2012-04-25 06:08:38"
93924,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  sortedList=list(order);
  for i=1:length(order)-1
    y = y+abs(sortedList(i,2)-sortedList(i+1,1));
  end
  score=y;
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access sortedList(2,1); index out of bounds because size(sortedList)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access sortedList(2,1); index out of bounds because size(sortedList)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access sortedList(2,1); index out of bounds because size(sortedList)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access sortedList(2,1); index out of bounds because size(sortedList)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access sortedList(2,1); index out of bounds because size(sortedList)=[1,7].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access sortedList(2,1); index out of bounds because size(sortedList)=[1,7].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access sortedList(2,1); index out of bounds because size(sortedList)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access sortedList(2,1); index out of bounds because size(sortedList)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access sortedList(2,1); index out of bounds because size(sortedList)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access sortedList(2,1); index out of bounds because size(sortedList)=[1,3].
  passed: false
  duration: 0.1
:additional_test_points: []
",49,0,470,3576,"2012-05-30 20:23:01"
93925,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  sortedList=list(order,:);
  for i=1:length(order)-1
    y = y+abs(sortedList(i,2)-sortedList(i+1,1));
  end
  score=y;
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",50,1,470,3576,"2012-05-30 20:23:37"
760234,"function score = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = flipud(list(:))
  list(1 end) = [];
  list = sum(diff(list))
end","--- 'L 5 (C 10-12): NOPAR: Invalid syntax at ''end''. Possibly, a ), }, or ] is missing.'
",-1,NULL,470,3635,"2015-10-14 15:36:07"
760235,"function score = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = flipud(list(:))
  list([1 end]) = [];
  list = sum(diff(list))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      list =
           4
           5
           4
           2
           2
           1
      list =
          -3
    TestResult:
      Duration: 0.25484
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    list =
         4
         5
         4
         2
         2
         1
    list =
        -3
  passed: false
  duration: 0.25484
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      list =
           4
           2
           2
           1
           4
           5
      list =
           2
    TestResult:
      Duration: 0.012218
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    list =
         4
         2
         2
         1
         4
         5
    list =
         2
  passed: false
  duration: 0.012218
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      list =
           5
           7
           5
           4
           6
           1
           8
           4
           4
           2
           2
           1
           4
           5
      list =
          -3
    TestResult:
      Duration: 0.011691
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    list =
         5
         7
         5
         4
         6
         1
         8
         4
         4
         2
         2
         1
         4
         5
    list =
        -3
  passed: false
  duration: 0.011691
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      list =
           4
           2
           2
           1
           6
           6
      list =
           4
    TestResult:
      Duration: 0.0112
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    list =
         4
         2
         2
         1
         6
         6
    list =
         4
  passed: false
  duration: 0.0112
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      list =
           4
           2
           4
           5
           2
           1
      list =
           0
    TestResult:
      Duration: 0.010490000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    list =
         4
         2
         4
         5
         2
         1
    list =
         0
  passed: false
  duration: 0.010490000000000001
  figures: *5
:additional_test_points: []
",48,0,470,3635,"2015-10-14 15:36:26"
760236,"function list = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = flipud(list(:))
  list([1 end]) = [];
  list = sum(diff(list))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           4
           5
           4
           2
           2
           1
      list =
          -3
    TestResult:
      Duration: 0.23410399999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         4
         5
         4
         2
         2
         1
    list =
        -3
  figures: *1
  passed: false
  duration: 0.23410399999999998
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           4
           2
           2
           1
           4
           5
      list =
           2
    TestResult:
      Duration: 0.011614000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         4
         2
         2
         1
         4
         5
    list =
         2
  figures: *2
  passed: false
  duration: 0.011614000000000001
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           5
           7
           5
           4
           6
           1
           8
           4
           4
           2
           2
           1
           4
           5
      list =
          -3
    TestResult:
      Duration: 0.010687
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         5
         7
         5
         4
         6
         1
         8
         4
         4
         2
         2
         1
         4
         5
    list =
        -3
  figures: *3
  passed: false
  duration: 0.010687
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           4
           2
           2
           1
           6
           6
      list =
           4
    TestResult:
      Duration: 0.010315000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         4
         2
         2
         1
         6
         6
    list =
         4
  figures: *4
  passed: false
  duration: 0.010315000000000001
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           4
           2
           4
           5
           2
           1
      list =
           0
    TestResult:
      Duration: 0.010157
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         4
         2
         4
         5
         2
         1
    list =
         0
  figures: *5
  passed: false
  duration: 0.010157
:additional_test_points: []
",48,0,470,3635,"2015-10-14 15:36:51"
760238,"function list = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = list(:)
  list([1 end]) = [];
  N = length(list)
  list = reshape(list,2,N/2)'
  list = sum(diff(list,1))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           1
           2
           2
           4
           5
           4
      N =
           4
      list =
           2     2
           4     5
      list =
           5
    TestResult:
      Duration: 0.22356399999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         1
         2
         2
         4
         5
         4
    N =
         4
    list =
         2     2
         4     5
    list =
         5
  figures: *1
  passed: false
  duration: 0.22356399999999998
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           5
           4
           1
           2
           2
           4
      N =
           4
      list =
           4     1
           2     2
      list =
          -1
    TestResult:
      Duration: 0.011382
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         5
         4
         1
         2
         2
         4
    N =
         4
    list =
         4     1
         2     2
    list =
        -1
  figures: *2
  passed: false
  duration: 0.011382
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           5
           4
           1
           2
           2
           4
           4
           8
           1
           6
           4
           5
           7
           5
      N =
          12
      list =
           4     1
           2     2
           4     4
           8     1
           6     4
           5     7
      list =
           1     6
    TestResult:
      Duration: 0.010899
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         5
         4
         1
         2
         2
         4
         4
         8
         1
         6
         4
         5
         7
         5
    N =
        12
    list =
         4     1
         2     2
         4     4
         8     1
         6     4
         5     7
    list =
         1     6
  figures: *3
  passed: false
  duration: 0.010899
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           6
           6
           1
           2
           2
           4
      N =
           4
      list =
           6     1
           2     2
      list =
          -3
    TestResult:
      Duration: 0.010069
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         6
         6
         1
         2
         2
         4
    N =
         4
    list =
         6     1
         2     2
    list =
        -3
  figures: *4
  passed: false
  duration: 0.010069
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           1
           2
           5
           4
           2
           4
      N =
           4
      list =
           2     5
           4     2
      list =
          -1
    TestResult:
      Duration: 0.010106
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         1
         2
         5
         4
         2
         4
    N =
         4
    list =
         2     5
         4     2
    list =
        -1
  figures: *5
  passed: false
  duration: 0.010106
:additional_test_points: []
",64,0,470,3635,"2015-10-14 15:40:41"
760239,"function list = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = list(:)
  list([1 end]) = [];
  N = length(list)
  list = reshape(list,2,N/2)'
  list = sum(diff(list,2))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           1
           2
           2
           4
           5
           4
      N =
           4
      list =
           2     2
           4     5
      list =
           1
    TestResult:
      Duration: 0.22406700000000002
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         1
         2
         2
         4
         5
         4
    N =
         4
    list =
         2     2
         4     5
    list =
         1
  passed: true
  duration: 0.22406700000000002
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           5
           4
           1
           2
           2
           4
      N =
           4
      list =
           4     1
           2     2
      list =
           3
    TestResult:
      Duration: 0.009046
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         5
         4
         1
         2
         2
         4
    N =
         4
    list =
         4     1
         2     2
    list =
         3
  passed: true
  duration: 0.009046
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           5
           4
           1
           2
           2
           4
           4
           8
           1
           6
           4
           5
           7
           5
      N =
          12
      list =
           4     1
           2     2
           4     4
           8     1
           6     4
           5     7
      list =
           1     2
    TestResult:
      Duration: 0.012131
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         5
         4
         1
         2
         2
         4
         4
         8
         1
         6
         4
         5
         7
         5
    N =
        12
    list =
         4     1
         2     2
         4     4
         8     1
         6     4
         5     7
    list =
         1     2
  passed: false
  duration: 0.012131
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           6
           6
           1
           2
           2
           4
      N =
           4
      list =
           6     1
           2     2
      list =
           5
    TestResult:
      Duration: 0.008399
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         6
         6
         1
         2
         2
         4
    N =
         4
    list =
         6     1
         2     2
    list =
         5
  passed: true
  duration: 0.008399
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           1
           2
           5
           4
           2
           4
      N =
           4
      list =
           2     5
           4     2
      list =
          -5
    TestResult:
      Duration: 0.010489
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         1
         2
         5
         4
         2
         4
    N =
         4
    list =
         2     5
         4     2
    list =
        -5
  passed: false
  duration: 0.010489
  figures: *5
:additional_test_points: []
",64,0,470,3635,"2015-10-14 15:41:02"
760311,"function list = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = list(:)
  list([1 end]) = [];
  N = length(list)
  list = reshape(list,2,N/2)'
  list = sum(abs(diff(list,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           1
           2
           2
           4
           5
           4
      N =
           4
      list =
           2     2
           4     5
      list =
           1
    TestResult:
      Duration: 0.241355
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         1
         2
         2
         4
         5
         4
    N =
         4
    list =
         2     2
         4     5
    list =
         1
  figures: *1
  passed: true
  duration: 0.241355
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           5
           4
           1
           2
           2
           4
      N =
           4
      list =
           4     1
           2     2
      list =
           3
    TestResult:
      Duration: 0.012743
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         5
         4
         1
         2
         2
         4
    N =
         4
    list =
         4     1
         2     2
    list =
         3
  figures: *2
  passed: true
  duration: 0.012743
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           5
           4
           1
           2
           2
           4
           4
           8
           1
           6
           4
           5
           7
           5
      N =
          12
      list =
           4     1
           2     2
           4     4
           8     1
           6     4
           5     7
      list =
          13    12
    TestResult:
      Duration: 0.014367999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         5
         4
         1
         2
         2
         4
         4
         8
         1
         6
         4
         5
         7
         5
    N =
        12
    list =
         4     1
         2     2
         4     4
         8     1
         6     4
         5     7
    list =
        13    12
  figures: *3
  passed: false
  duration: 0.014367999999999999
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           6
           6
           1
           2
           2
           4
      N =
           4
      list =
           6     1
           2     2
      list =
           5
    TestResult:
      Duration: 0.010238
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         6
         6
         1
         2
         2
         4
    N =
         4
    list =
         6     1
         2     2
    list =
         5
  figures: *4
  passed: true
  duration: 0.010238
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           1
           2
           5
           4
           2
           4
      N =
           4
      list =
           2     5
           4     2
      list =
           5
    TestResult:
      Duration: 0.009342
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         1
         2
         5
         4
         2
         4
    N =
         4
    list =
         2     5
         4     2
    list =
         5
  figures: *5
  passed: true
  duration: 0.009342
:additional_test_points: []
",66,0,470,3635,"2015-10-14 17:26:17"
760314,"function list = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = list(:);
  list([1 end]) = [];
  N = length(list)
  list = reshape(list,2,N/2)'
  list = sum(abs(diff(list,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      N =
           4
      list =
           2     2
           4     5
      list =
           1
    TestResult:
      Duration: 0.237562
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    N =
         4
    list =
         2     2
         4     5
    list =
         1
  passed: true
  duration: 0.237562
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      N =
           4
      list =
           4     1
           2     2
      list =
           3
    TestResult:
      Duration: 0.012647
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    N =
         4
    list =
         4     1
         2     2
    list =
         3
  passed: true
  duration: 0.012647
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      N =
          12
      list =
           4     1
           2     2
           4     4
           8     1
           6     4
           5     7
      list =
          13    12
    TestResult:
      Duration: 0.014223999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    N =
        12
    list =
         4     1
         2     2
         4     4
         8     1
         6     4
         5     7
    list =
        13    12
  passed: false
  duration: 0.014223999999999999
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      N =
           4
      list =
           6     1
           2     2
      list =
           5
    TestResult:
      Duration: 0.010393
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    N =
         4
    list =
         6     1
         2     2
    list =
         5
  passed: true
  duration: 0.010393
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      N =
           4
      list =
           2     5
           4     2
      list =
           5
    TestResult:
      Duration: 0.009398
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    N =
         4
    list =
         2     5
         4     2
    list =
         5
  passed: true
  duration: 0.009398
  figures: *5
:additional_test_points: []
",66,0,470,3635,"2015-10-14 17:28:09"
760316,"function list = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = list(:);
  list([1 end]) = []
  N = length(list);
  list = reshape(list,2,N/2)';
  list = sum(abs(diff(list,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           2
           2
           4
           5
      list =
           1
    TestResult:
      Duration: 0.211857
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         2
         2
         4
         5
    list =
         1
  passed: true
  duration: 0.211857
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           4
           1
           2
           2
      list =
           3
    TestResult:
      Duration: 0.007895
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         4
         1
         2
         2
    list =
         3
  passed: true
  duration: 0.007895
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           4
           1
           2
           2
           4
           4
           8
           1
           6
           4
           5
           7
      list =
          13    12
    TestResult:
      Duration: 0.010682
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         4
         1
         2
         2
         4
         4
         8
         1
         6
         4
         5
         7
    list =
        13    12
  passed: false
  duration: 0.010682
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           6
           1
           2
           2
      list =
           5
    TestResult:
      Duration: 0.0073939999999999995
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         6
         1
         2
         2
    list =
         5
  passed: true
  duration: 0.0073939999999999995
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           2
           5
           4
           2
      list =
           5
    TestResult:
      Duration: 0.006683
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         2
         5
         4
         2
    list =
         5
  passed: true
  duration: 0.006683
  figures: *5
:additional_test_points: []
",66,0,470,3635,"2015-10-14 17:29:16"
760319,"function list = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = list(:);
  list([1 end]) = [];
  N = length(list);
  list = reshape(list,2,N/2)'
  list = sum(abs(diff(list,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           2     2
           4     5
      list =
           1
    TestResult:
      Duration: 0.212952
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         2     2
         4     5
    list =
         1
  passed: true
  duration: 0.212952
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           4     1
           2     2
      list =
           3
    TestResult:
      Duration: 0.007788
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         4     1
         2     2
    list =
         3
  passed: true
  duration: 0.007788
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           4     1
           2     2
           4     4
           8     1
           6     4
           5     7
      list =
          13    12
    TestResult:
      Duration: 0.010672000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         4     1
         2     2
         4     4
         8     1
         6     4
         5     7
    list =
        13    12
  passed: false
  duration: 0.010672000000000001
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           6     1
           2     2
      list =
           5
    TestResult:
      Duration: 0.007175
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         6     1
         2     2
    list =
         5
  passed: true
  duration: 0.007175
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           2     5
           4     2
      list =
           5
    TestResult:
      Duration: 0.006704
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         2     5
         4     2
    list =
         5
  passed: true
  duration: 0.006704
  figures: *5
:additional_test_points: []
",66,0,470,3635,"2015-10-14 17:30:33"
760322,"function list = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = list(:);
  list([1 end]) = [];
  N = length(list);
  list = reshape(list,2,N/2)'
  list = sum(abs(diff(list,1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           2     2
           4     5
      list =
           5
    TestResult:
      Duration: 0.24143499999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         2     2
         4     5
    list =
         5
  figures: *1
  passed: false
  duration: 0.24143499999999998
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           4     1
           2     2
      list =
           3
    TestResult:
      Duration: 0.010387
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         4     1
         2     2
    list =
         3
  figures: *2
  passed: true
  duration: 0.010387
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           4     1
           2     2
           4     4
           8     1
           6     4
           5     7
      list =
          11    12
    TestResult:
      Duration: 0.012280000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         4     1
         2     2
         4     4
         8     1
         6     4
         5     7
    list =
        11    12
  figures: *3
  passed: false
  duration: 0.012280000000000001
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           6     1
           2     2
      list =
           5
    TestResult:
      Duration: 0.008558999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         6     1
         2     2
    list =
         5
  figures: *4
  passed: true
  duration: 0.008558999999999999
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           2     5
           4     2
      list =
           5
    TestResult:
      Duration: 0.008297
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         2     5
         4     2
    list =
         5
  figures: *5
  passed: true
  duration: 0.008297
:additional_test_points: []
",66,0,470,3635,"2015-10-14 17:33:28"
760323,"function list = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = list(:);
  list([1 end]) = [];
  N = length(list);
  list = reshape(list,2,N/2)'
  list = sum(abs(diff(list,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           2     2
           4     5
      list =
           1
    TestResult:
      Duration: 0.238309
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         2     2
         4     5
    list =
         1
  passed: true
  duration: 0.238309
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           4     1
           2     2
      list =
           3
    TestResult:
      Duration: 0.009163
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         4     1
         2     2
    list =
         3
  passed: true
  duration: 0.009163
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           4     1
           2     2
           4     4
           8     1
           6     4
           5     7
      list =
          13    12
    TestResult:
      Duration: 0.01215
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         4     1
         2     2
         4     4
         8     1
         6     4
         5     7
    list =
        13    12
  passed: false
  duration: 0.01215
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           6     1
           2     2
      list =
           5
    TestResult:
      Duration: 0.008496
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         6     1
         2     2
    list =
         5
  passed: true
  duration: 0.008496
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           2     5
           4     2
      list =
           5
    TestResult:
      Duration: 0.008288
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         2     5
         4     2
    list =
         5
  passed: true
  duration: 0.008288
  figures: *5
:additional_test_points: []
",66,0,470,3635,"2015-10-14 17:33:59"
760325,"function list = scoreOrderedDominoes(list, order)
  list = list(order(:),:);
  list = list';
  list = list(:);
  list([1 end]) = [];
  N = length(list);
  list = reshape(list,2,N/2)
  list = sum(abs(diff(list,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           2     4
           2     5
      list =
           1
    TestResult:
      Duration: 0.236259
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         2     4
         2     5
    list =
         1
  passed: true
  duration: 0.236259
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           4     2
           1     2
      list =
           3
    TestResult:
      Duration: 0.009575
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         4     2
         1     2
    list =
         3
  passed: true
  duration: 0.009575
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      list =
           4     2     4     8     6     5
           1     2     4     1     4     7
      list =
          19
    TestResult:
      Duration: 0.012443000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    list =
         4     2     4     8     6     5
         1     2     4     1     4     7
    list =
        19
  passed: false
  duration: 0.012443000000000001
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           6     2
           1     2
      list =
           5
    TestResult:
      Duration: 0.008549000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         6     2
         1     2
    list =
         5
  passed: true
  duration: 0.008549000000000001
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      list =
           2     4
           5     2
      list =
           5
    TestResult:
      Duration: 0.008338
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    list =
         2     4
         5     2
    list =
         5
  passed: true
  duration: 0.008338
  figures: *5
:additional_test_points: []
",65,0,470,3635,"2015-10-14 17:36:11"
803175,"function x= scoreOrderedDominoes(list, order)

x = list(order,:)'
x = x(:)'
x([ 1 end]) = []
x = diff(x)
x = sum(x(1:2:end))
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             1     2     5
             2     4     4
        x =
             1     2     2     4     5     4
        x =
             2     2     4     5
        x =
             0     2     1
        x =
             1
      TestResult:
        Duration: 0.37248
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           1     2     5
           2     4     4
      x =
           1     2     2     4     5     4
      x =
           2     2     4     5
      x =
           0     2     1
      x =
           1
    passed: true
    duration: 0.37248
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Assertion failed.
      Output: |2

        x =
             5     1     2
             4     2     4
        x =
             5     4     1     2     2     4
        x =
             4     1     2     2
        x =
            -3     1     0
        x =
            -3
      TestResult:
        Duration: 0.019834
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Assertion failed.
    output: |2

      x =
           5     1     2
           4     2     4
      x =
           5     4     1     2     2     4
      x =
           4     1     2     2
      x =
          -3     1     0
      x =
          -3
    passed: false
    duration: 0.019834
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Assertion failed.
      Output: |2

        x =
             5     1     2     4     1     4     7
             4     2     4     8     6     5     5
        x =
             5     4     1     2     2     4     4     8     1     6     4     5     7     5
        x =
             4     1     2     2     4     4     8     1     6     4     5     7
        x =
            -3     1     0     2     0     4    -7     5    -2     1     2
        x =
           -10
      TestResult:
        Duration: 0.018877
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Assertion failed.
    output: |2

      x =
           5     1     2     4     1     4     7
           4     2     4     8     6     5     5
      x =
           5     4     1     2     2     4     4     8     1     6     4     5     7     5
      x =
           4     1     2     2     4     4     8     1     6     4     5     7
      x =
          -3     1     0     2     0     4    -7     5    -2     1     2
      x =
         -10
    passed: false
    duration: 0.018877
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Assertion failed.
      Output: |2

        x =
             6     1     2
             6     2     4
        x =
             6     6     1     2     2     4
        x =
             6     1     2     2
        x =
            -5     1     0
        x =
            -5
      TestResult:
        Duration: 0.01786
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Assertion failed.
    output: |2

      x =
           6     1     2
           6     2     4
      x =
           6     6     1     2     2     4
      x =
           6     1     2     2
      x =
          -5     1     0
      x =
          -5
    passed: false
    duration: 0.01786
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Assertion failed.
      Output: |2

        x =
             1     5     2
             2     4     4
        x =
             1     2     5     4     2     4
        x =
             2     5     4     2
        x =
             3    -1    -2
        x =
             1
      TestResult:
        Duration: 0.015252
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Assertion failed.
    output: |2

      x =
           1     5     2
           2     4     4
      x =
           1     2     5     4     2     4
      x =
           2     5     4     2
      x =
           3    -1    -2
      x =
           1
    passed: false
    duration: 0.015252
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",52,0,470,3635,"2016-01-08 21:40:22"
803176,"function x= scoreOrderedDominoes(list, order)

x = list(order,:)'
x = x(:)'
x([ 1 end]) = []
x = abs(diff(x))
x = sum(x(1:2:end))
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             1     2     5
             2     4     4
        x =
             1     2     2     4     5     4
        x =
             2     2     4     5
        x =
             0     2     1
        x =
             1
      TestResult:
        Duration: 0.22989300000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           1     2     5
           2     4     4
      x =
           1     2     2     4     5     4
      x =
           2     2     4     5
      x =
           0     2     1
      x =
           1
    figures: *1
    passed: true
    duration: 0.22989300000000001
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             5     1     2
             4     2     4
        x =
             5     4     1     2     2     4
        x =
             4     1     2     2
        x =
             3     1     0
        x =
             3
      TestResult:
        Duration: 0.009247
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           5     1     2
           4     2     4
      x =
           5     4     1     2     2     4
      x =
           4     1     2     2
      x =
           3     1     0
      x =
           3
    figures: *2
    passed: true
    duration: 0.009247
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             5     1     2     4     1     4     7
             4     2     4     8     6     5     5
        x =
             5     4     1     2     2     4     4     8     1     6     4     5     7     5
        x =
             4     1     2     2     4     4     8     1     6     4     5     7
        x =
             3     1     0     2     0     4     7     5     2     1     2
        x =
            14
      TestResult:
        Duration: 0.008749999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2

      x =
           5     1     2     4     1     4     7
           4     2     4     8     6     5     5
      x =
           5     4     1     2     2     4     4     8     1     6     4     5     7     5
      x =
           4     1     2     2     4     4     8     1     6     4     5     7
      x =
           3     1     0     2     0     4     7     5     2     1     2
      x =
          14
    figures: *3
    passed: true
    duration: 0.008749999999999999
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             6     1     2
             6     2     4
        x =
             6     6     1     2     2     4
        x =
             6     1     2     2
        x =
             5     1     0
        x =
             5
      TestResult:
        Duration: 0.008296
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           6     1     2
           6     2     4
      x =
           6     6     1     2     2     4
      x =
           6     1     2     2
      x =
           5     1     0
      x =
           5
    figures: *4
    passed: true
    duration: 0.008296
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             1     5     2
             2     4     4
        x =
             1     2     5     4     2     4
        x =
             2     5     4     2
        x =
             3     1     2
        x =
             5
      TestResult:
        Duration: 0.007758999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           1     5     2
           2     4     4
      x =
           1     2     5     4     2     4
      x =
           2     5     4     2
      x =
           3     1     2
      x =
           5
    figures: *5
    passed: true
    duration: 0.007758999999999999
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",54,1,470,3635,"2016-01-08 21:41:25"
84953,"function score = scoreOrderedDominoes(list, order)
c = zeros(1,length(order)-1);
for i = 1 : length(order) - 1
    c(i) = list(order(i+1),1) - list(order(i),end);
end
  score = sumabs(c);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",55,1,470,3668,"2012-05-02 23:19:55"
84968,"function score = scoreOrderedDominoes(list, order)
  c = list(order,:)';
d = diff(c(:));
score = sumabs(d(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,3668,"2012-05-03 00:12:23"
226687,"function ans = scoreOrderedDominoes(v, b)
v(b,:);
sum(abs(ans(1:end-1,1)-ans(2:end,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",34,0,470,3919,"2013-04-03 16:01:04"
226688,"function ans = scoreOrderedDominoes(v, b)
v(b,:);
sum(abs(ans(1:end-1,2)-ans(2:end,1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,3919,"2013-04-03 16:02:59"
226690,"function ans = scoreOrderedDominoes(v, b)
sum(abs(v(b(1:end-1),2)-v(b(2:end,1))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
:additional_test_points: []
",33,0,470,3919,"2013-04-03 16:06:44"
157887,"function score = scoreOrderedDominoes(list, order)
  score = list(order,:);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",14,0,470,4267,"2012-11-05 18:29:39"
157903,"function score = scoreOrderedDominoes(list, order)
  x = x(order,:);
score = sum(abs(x(1:end-1,2)-x(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""x"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""x"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""x"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""x"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""x"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""x"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""x"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""x"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""x"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""x"".
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,4267,"2012-11-05 18:51:55"
157905,"function score = scoreOrderedDominoes(x, order)
  x = x(order,:);
score = sum(abs(x(1:end-1,2)-x(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,4267,"2012-11-05 18:53:15"
104969,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:length(order)-1
   score = score+abs(list(order(i),2)-list(order(i+1),1)); 
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,4322,"2012-06-29 18:00:30"
424139,"function y = scoreOrderedDominoes(list, order)
list=list(order,:)';
v=list(:);w=abs(diff(v(2:(end-1))));
y = sum(w(1:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",50,1,470,4419,"2014-03-30 07:14:58"
92829,"function score = scoreOrderedDominoes(list, order)
   end=length(order);
   score=sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,4425,"2012-05-27 03:57:25"
92830,"function score = scoreOrderedDominoes(list, order)
   en=length(order);
   score=sum(abs(list(order(1:en-1),2)-list(order(2:en),1)));
end=length","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,4425,"2012-05-27 03:57:55"
92832,"function score = scoreOrderedDominoes(list, order)
   l=abs(list(order(1:end-1),2)-list(order(2:en),1)));
   score=sum(abs);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,4425,"2012-05-27 03:59:55"
92833,"function score = scoreOrderedDominoes(list, order)
   l=abs(list(order(1:end-1),2)-list(order(2:en),1)));
   score=sum(l);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,4425,"2012-05-27 04:00:07"
92834,"function score = scoreOrderedDominoes(list, order)
   l=abs(list(order(1:end-1),2)-list(order(2:end),1)));
   score=sum(l);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,4425,"2012-05-27 04:00:24"
92824,"function score = scoreOrderedDominoes(list, order)
  [B,IX]=sort(order);
  score(IX,:)=list(B,:);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",25,0,470,4425,"2012-05-27 03:38:35"
92825,"function score = scoreOrderedDominoes(list, order)
  [B,IX]=sort(order);
   score=sum(abs(list(IX(1:length(B)-1),2)-list(IX(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",44,0,470,4425,"2012-05-27 03:48:38"
92826,"function score = scoreOrderedDominoes(list, order)
  [B,IX]=sort(order);
   score=sum(abs(list(IX(1:length(B)-1),2)-list(IX(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",44,0,470,4425,"2012-05-27 03:51:29"
92827,"function score = scoreOrderedDominoes(list, order)
   score=sum(abs(list(order(1:length(order)-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,4425,"2012-05-27 03:56:16"
92828,"function score = scoreOrderedDominoes(list, order)
   score=sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,4425,"2012-05-27 03:57:03"
92831,"function score = scoreOrderedDominoes(list, order)
   en=length(order);
   score=sum(abs(list(order(1:en-1),2)-list(order(2:en),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,4425,"2012-05-27 03:58:46"
92835,"function score = scoreOrderedDominoes(list, order)
   l=abs(list(order(1:end-1),2)-list(order(2:end),1));
   score=sum(l);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,4425,"2012-05-27 04:00:40"
101534,"function score = scoreOrderedDominoes(list, order)
x=list(order,:)';
y = sum(diff(reshape(x(2:end-1),[],2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,4464,"2012-06-22 00:44:52"
101535,"function score = scoreOrderedDominoes(list, order)
x=list(order,:)';
score = sum(diff(reshape(x(2:end-1),[],2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,4464,"2012-06-22 00:45:35"
101536,"function score = scoreOrderedDominoes(list, order)
x=list(order,:)';
score = sum(abs(diff(reshape(x(2:end-1),[],2))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",37,0,470,4464,"2012-06-22 00:46:27"
101537,"function score = scoreOrderedDominoes(list, order)
x=list(order,:)';
score = sum(abs(diff(reshape(x(2:end-1),2,[]))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",37,1,470,4464,"2012-06-22 00:48:19"
212012,"function score = scoreOrderedDominoes(list, order)
  o=list(order',:)';
  p=[o(1,:) 0;0 o(2,:)];
  p(2,1)=p(1,1);
  p(1,end)=p(2,end);
  score=sum(abs(p(1,:)-p(2,:)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",70,1,470,4567,"2013-03-03 16:47:02"
663153,"function ans = scoreOrderedDominoes(x, order)
  diff(reshape(x(order,:)',1,numel(x)));
  sum(abs(ans(2:2:end)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,4570,"2015-04-30 00:54:00"
663902,"function ans = scoreOrderedDominoes(x, order)
sumabs(list(order(1:end-1),2)-list(order(2:end),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'list' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'list' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'list' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'list' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'list' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'list' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'list' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'list' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'list' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'list' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",31,0,470,4570,"2015-05-01 08:23:19"
663903,"function ans = scoreOrderedDominoes(x, order)
sumabs(x(order(1:end-1),2)-x(order(2:end),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",31,0,470,4570,"2015-05-01 08:23:47"
96125,"function score = scoreOrderedDominoes(list, order)
    score = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,4681,"2012-06-06 18:44:08"
532729,"function score = scoreOrderedDominoes(list, order)
a = list(order,:)'
b = diff(a(:));
score = sum(b(2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",34,0,470,4690,"2014-11-22 18:10:08"
99331,"function score = scoreOrderedDominoes(list, order)
a = diff(reshape(list(order,:)',1,numel(list)));
score = sum(a(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",36,0,470,4793,"2012-06-16 23:00:49"
99332,"function score = scoreOrderedDominoes(list, order)
a = abs(diff(reshape(list(order,:)',1,numel(list))));
score = sum(a(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,4793,"2012-06-16 23:02:03"
269573,"function score = scoreOrderedDominoes(list, order)
  list(order,:)';
  diff(ans(:));
  score = sumabs(ans(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,4793,"2013-06-29 04:24:22"
269574,"function ans = scoreOrderedDominoes(list, order)
  list(order,:)';
  diff(ans(:));
  sumabs(ans(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",30,1,470,4793,"2013-06-29 04:24:50"
269575,"function ans = scoreOrderedDominoes(varargin)
  varargin{1}(varargin{2},:)';
  diff(ans(:));
  sumabs(ans(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,4793,"2013-06-29 04:25:20"
179363,"function ans = scoreOrderedDominoes(list, order)
list(order,:).';
abs(diff(ans(:)));
sum(ans(2:2:end));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,4823,"2012-12-19 08:21:24"
380567,"function score = scoreOrderedDominoes(list, order)
 n=max(size(order));
for i=1:n-1
    f1(i)=abs(list(order(i),2)-list(order(i+1),1))
end
y=sum(f1)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",51,0,470,4944,"2014-01-07 16:02:59"
380569,"function score = scoreOrderedDominoes(list, order)
 n=max(size(order));
for i=1:n-1
    f1(i)=abs(list(order(i),2)-list(order(i+1),1))
end
score=sum(f1)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      f1 =
           0
      f1 =
           0     1
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    f1 =
         0
    f1 =
         0     1
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      f1 =
           3
      f1 =
           3     0
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    f1 =
         3
    f1 =
         3     0
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      f1 =
           3
      f1 =
           3     0
      f1 =
           3     0     0
      f1 =
           3     0     0     7
      f1 =
           3     0     0     7     2
      f1 =
           3     0     0     7     2     2
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    f1 =
         3
    f1 =
         3     0
    f1 =
         3     0     0
    f1 =
         3     0     0     7
    f1 =
         3     0     0     7     2
    f1 =
         3     0     0     7     2     2
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      f1 =
           5
      f1 =
           5     0
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    f1 =
         5
    f1 =
         5     0
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      f1 =
           3
      f1 =
           3     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    f1 =
         3
    f1 =
         3     2
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",51,1,470,4944,"2014-01-07 16:03:19"
335696,"function score = scoreOrderedDominoes(list, order)
l = list(order,:)'; 
score = sum(abs(l(2:2:end-1)-l(3:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,4976,"2013-10-18 22:03:16"
120484,"function y = scoreOrderedDominoes(list, order)
y = 0;
cc=1;

while cc<numel(order)
    y=y+abs(list(order(cc),2)-list(order(cc+1),1));
    cc=cc+1;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",49,1,470,5065,"2012-07-30 17:50:53"
119435,"function ans = scoreOrderedDominoes(list, order)
  nlist = reshape(list(order,:)',1,numel(list));
 nld = nlist(2:end)-nlist(1:end-1);
 sum(abs(nld(2:2:end)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",52,1,470,5169,"2012-07-27 10:18:36"
231276,"function score = scoreOrderedDominoes(list, order)
list(order,:)';
ans([1 end])=[];
sum(abs(cellfun(@(x) sum(str2num(x)),(regexp(num2str(cumprod(-isfinite(ans)).*ans),'-?\d* *-?\d* *','match')))));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",53,0,470,5217,"2013-04-16 12:38:35"
231277,"function ans= scoreOrderedDominoes(list, order)
list(order,:)';
ans([1 end])=[];
sum(abs(cellfun(@(x) sum(str2num(x)),(regexp(num2str(cumprod(-isfinite(ans)).*ans),'-?\d* *-?\d* *','match')))));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",53,1,470,5217,"2013-04-16 12:38:55"
112039,"function score = scoreOrderedDominoes(list, order)
y = 0;
for i=1:2:size(order,2)
  tmp = abs(list(i,2) - list(i+1,1));
  y = y + tmp;
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(4,1); index out of bounds because size(list)=[3,2].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(4,1); index out of bounds because size(list)=[3,2].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(4,1); index out of bounds because size(list)=[3,2].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(4,1); index out of bounds because size(list)=[3,2].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(8,1); index out of bounds because size(list)=[7,2].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(8,1); index out of bounds because size(list)=[7,2].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(4,1); index out of bounds because size(list)=[3,2].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(4,1); index out of bounds because size(list)=[3,2].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(4,1); index out of bounds because size(list)=[3,2].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(4,1); index out of bounds because size(list)=[3,2].
  passed: false
  duration: 0.1
:additional_test_points: []
",44,0,470,5368,"2012-07-13 17:37:40"
112041,"function score = scoreOrderedDominoes(list, order)
y = 0;
for i=1:2:size(order,2)
  tmp = abs(list(order(i),2) - list(order(i+1),1));
  y = y + tmp;
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(4); index out of bounds because numel(order)=3.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(4); index out of bounds because numel(order)=3.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(4); index out of bounds because numel(order)=3.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(4); index out of bounds because numel(order)=3.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(8); index out of bounds because numel(order)=7.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(8); index out of bounds because numel(order)=7.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(4); index out of bounds because numel(order)=3.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(4); index out of bounds because numel(order)=3.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(4); index out of bounds because numel(order)=3.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(4); index out of bounds because numel(order)=3.
  passed: false
  duration: 0.1
:additional_test_points: []
",48,0,470,5368,"2012-07-13 17:38:55"
112043,"function score = scoreOrderedDominoes(list, order)
y = 0;
cnt = 1;
while cnt<size(order,2)
  tmp = abs(list(order(cnt),2) - list(order(cnt+1),1));
  y = y + tmp;
  cnt = cnt + 1;
end
score = y;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",58,1,470,5368,"2012-07-13 17:44:20"
112044,"function score = scoreOrderedDominoes(list, order)
score = 0;
cnt = 1;
while cnt<size(order,2)
  score = score + abs(list(order(cnt),2) - list(order(cnt+1),1));
  cnt = cnt + 1;
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",50,1,470,5368,"2012-07-13 17:45:47"
120787,"function score = scoreOrderedDominoes(list, order)
score=0;
  jeu=reshape(list(order,:)',1,numel(list));
  jeu([1 end])=[];
  for i=1:2:length(jeu)
      score=score+sum(abs(jeu(i+1)-jeu(i)));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",64,1,470,5390,"2012-07-31 07:28:33"
123886,"function score = scoreOrderedDominoes(list, order)
  jeu=reshape(list(order,:)',1,numel(list));
  score=sum(abs(jeu(3:2:end)-jeu(2:2:end-1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",47,1,470,5390,"2012-08-05 04:15:30"
117715,"function score = scoreOrderedDominoes(list, order)
reorder = list(order,:);
y = 0;
for i=1:length(list(order,:))-1
y = y + abs(reorder(i,end)-reorder(i+1,1));
end
return","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",51,0,470,5564,"2012-07-23 18:23:24"
117717,"function score = scoreOrderedDominoes(list, order)
reorder = list(order,:);
y = 0;
for i=1:length(list(order,:))-1
y = y + abs(reorder(i,end)-reorder(i+1,1));
end
score = y;
return","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",55,1,470,5564,"2012-07-23 18:23:49"
116688,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(2:end),1) - list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,5597,"2012-07-21 11:20:16"
116765,"function ans= scoreOrderedDominoes(list, order)
    list(order,:)';
     diff(ans(:));
      sumabs(ans(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",30,1,470,5597,"2012-07-21 15:19:42"
119109,"function score = scoreOrderedDominoes(list, order)
  y = abs(list(order(1),2)-list(order(2),1))+abs(list(order(2),2)-list(order(3),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,5621,"2012-07-26 12:48:23"
119112,"function score = scoreOrderedDominoes(list, order)
  score = abs(list(order(1),2)-list(order(2),1))+abs(list(order(2),2)-list(order(3),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,0,470,5621,"2012-07-26 12:51:19"
119114,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,5621,"2012-07-26 12:56:57"
119115,"function ans = scoreOrderedDominoes(list, order)
  sum(abs(list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,5621,"2012-07-26 12:57:44"
445694,"function score = scoreOrderedDominoes(list, order)
y=0;
for i=1:size (order,2)-1
y=y+abs(list(order(i)+size(order,2))-list(order(i+1)));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",47,0,470,5644,"2014-05-24 18:27:39"
445695,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:size(order,2)-1
score=score+abs(list(order(i)+size(order,2))-list(order(i+1)));
end
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",47,1,470,5644,"2014-05-24 18:30:43"
445702,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:length(order)-1
score=score+abs(list(order(i)+length(order))-list(order(i+1)));
end
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,5644,"2014-05-24 19:11:42"
150598,"function score = scoreOrderedDominoes(list, order)

   list = list(order,:)';
   list = list(:);
   t = diff(list);
   score  = sum(abs(t(2:2:end)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",42,1,470,5738,"2012-10-18 05:33:23"
360310,"function ans = scoreOrderedDominoes(list, order)
  list(order,:);
  sum(abs(ans(1:end-1,2)-ans(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,5741,"2013-11-27 06:30:28"
211063,"function ans = scoreOrderedDominoes(list, order)
theinline = reshape(list(order,:)',1,[]);
sum(abs(theinline(2:2:end-1) - theinline(3:2:end-1)))

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,5757,"2013-03-01 17:57:25"
125599,"function ans = scoreOrderedDominoes(list, order)
  list(order,:);
  sum(abs(ans(2:end,1)-ans(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,5768,"2012-08-09 07:01:09"
121832,"function score = scoreOrderedDominoes(list, order)
  tmp = list(order, :);
  score = sum(abs(tmp(2:end, 1) - tmp(1:end-1, 2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,5794,"2012-08-01 20:31:30"
135393,"function ans= scoreOrderedDominoes(list, order)
  sum(abs(list(order(1:end-1),2)-list(order(2:end),1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,5803,"2012-09-05 13:43:25"
123571,"function score = scoreOrderedDominoes(list, order)
  newlist = cat(2,list(order,1),list(order,2));
d = abs(diff(newlist));
score = sum(d(2*[1:numel(order)-1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",0,NULL,470,5841,"2012-08-03 23:33:34"
123572,"function score = scoreOrderedDominoes(list, order)
  newlist = cat(2,list(order,1),list(order,2));
d = abs(diff(newlist));
score = sum(d(2*[1:numel(order)-1]));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",47,0,470,5841,"2012-08-03 23:34:07"
123573,"function score = scoreOrderedDominoes(list, order)
  newlist = cat(2,list(order,1),list(order,2));
d = abs(diff(newlist));
score = sum(d(2*[1:numel(order)-1]));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",47,0,470,5841,"2012-08-03 23:36:28"
123574,"function score = scoreOrderedDominoes(list, order)
  newlist = cat(2,list(order,1),list(order,2));
d = abs(diff(newlist));
y = sum(d(2*[1:numel(order)-1]));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",47,0,470,5841,"2012-08-03 23:37:05"
123575,"function score = scoreOrderedDominoes(list, order)
  newlist = cat(2,list(order,1),list(order,2));
d = abs(diff(newlist));
score = sum(d(2*[1:numel(order)-1]));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",47,0,470,5841,"2012-08-03 23:37:30"
123580,"function score = scoreOrderedDominoes(list, order)
  newlist = reshape(cat(2,list(order,1),list(order,2))',1,[]);
d = abs(diff(newlist));
score = sum(d(2*[1:numel(order)-1]));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",53,1,470,5841,"2012-08-03 23:47:15"
206367,"function score = scoreOrderedDominoes(list, order)
  y=abs(sum(list(order(1:end-1),2))-sum(list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",37,0,470,5932,"2013-02-20 04:09:25"
206368,"function score = scoreOrderedDominoes(list, order)
  score=abs(sum(list(order(1:end-1),2))-sum(list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",37,0,470,5932,"2013-02-20 04:10:07"
206369,"function score = scoreOrderedDominoes(list, order)
  score=sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,5932,"2013-02-20 04:18:19"
218647,"function score = scoreOrderedDominoes(list, order)
    temp = list;
    list = [];
    list = [list; temp(order,:)];
    score = sum(abs(list(2:length(list),1) - list(1: length(list)-1 ,2 ))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,5961,"2013-03-18 18:56:48"
218648,"function score = scoreOrderedDominoes(list, order)
    temp = list;
    list = [];
    list = [list; temp(order,:)];
    score = sum(abs(list(2:length(list),1) - list(1: length(list)-1 ,2 )))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",53,1,470,5961,"2013-03-18 18:57:21"
228809,"function ans = scoreOrderedDominoes(list, order)
    a = list(order,:);
    sum(abs(a(2:end,1)-a(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,6016,"2013-04-09 17:13:09"
131036,"function score = scoreOrderedDominoes(list, order)
  l = list(order,:);
  sum( abs(l(2:end,1) - l(1:(end-1),2)) );
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",37,0,470,6084,"2012-08-26 16:32:41"
131037,"function ans = scoreOrderedDominoes(list, order)
  l = list(order,:);
  sum( abs(l(2:end,1) - l(1:(end-1),2)) );
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",37,1,470,6084,"2012-08-26 16:33:01"
483512,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order(1:end-1),2) - list(order(2:end,2))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,6225,"2014-08-06 12:09:42"
483514,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order(1:end-1),2) - list(order(2:end),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,6225,"2014-08-06 12:11:24"
483516,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order(1:end-1),2) - list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,6225,"2014-08-06 12:12:17"
483517,"function y = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order(1:end-1),2) - list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,6225,"2014-08-06 12:13:26"
317941,"function score = scoreOrderedDominoes(list, order)
  n=length(list);
list =list(order,:);
y=0;
for i=1:n-1;
    z=abs(list(i,2)-list(i+1,1));
    y =y+z;
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",54,0,470,6312,"2013-09-11 15:14:32"
317942,"function score = scoreOrderedDominoes(list, order)
  n=length(list);
list =list(order,:);
score =0;
for i=1:n-1;
    z=abs(list(i,2)-list(i+1,1));
    score =score +z;
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",54,1,470,6312,"2013-09-11 15:15:08"
142589,"function ans = scoreOrderedDominoes(list, order)
  yields = list(order, :);
  sum(abs(yields(2:end,1) - yields(1:end-1, 2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,6318,"2012-09-26 04:09:41"
143716,"function ans = scoreOrderedDominoes(list, order)
sum(abs(list(order(1:end-1),2)-list(order(2:end),1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,6481,"2012-10-01 16:30:02"
138780,"function score = scoreOrderedDominoes(list, order)
  diff(reshape(list(order,:)',[],1));
  sum(abs(ans(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",33,0,470,6556,"2012-09-13 14:03:59"
138782,"function ans = scoreOrderedDominoes(list, order)
  diff(reshape(list(order,:)',[],1));
  sum(abs(ans(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,6556,"2012-09-13 14:04:34"
138801,"function ans = scoreOrderedDominoes(list, order)
 list(order,:);
 diff(ans(:));
 sum(abs(ans(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",31,0,470,6556,"2012-09-13 14:24:10"
138802,"function ans = scoreOrderedDominoes(list, order)
 list(order,:)';
 diff(ans(:));
 sum(abs(ans(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,6556,"2012-09-13 14:25:52"
153494,"function ans = scoreOrderedDominoes(list, order)
  sum(abs(list(order(1:end-1),2)-list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,6623,"2012-10-24 07:39:21"
165122,"function ans = scoreOrderedDominoes(list, order)
  list(order,:)
  sum(abs(ans(2:end,1) - ans(1:end-1,2)))
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1     2
           2     4
           5     4
      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1     2
         2     4
         5     4
    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5     4
           1     2
           2     4
      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5     4
         1     2
         2     4
    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           6     6
           1     2
           2     4
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         6     6
         1     2
         2     4
    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1     2
           5     4
           2     4
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1     2
         5     4
         2     4
    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,6794,"2012-11-19 23:38:20"
161529,"function ans = scoreOrderedDominoes(list, order)
  Mattri = list(order,:);
  sum(arrayfun(@(ii) sum(abs(Mattri(ii,2)-Mattri(ii+1,1))),1:length(order)-1))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,6887,"2012-11-13 14:35:52"
690594,"function ans = scoreOrderedDominoes(list, order)
  0;
for k=2:numel(order)
 ans+abs(list(order(k-1),2)-list(order(k),1));   
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.14171899999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.14171899999999998
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0060220000000000004
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.0060220000000000004
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005076
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005076
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004794
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.004794
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005044
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.005044
  figures: *5
:additional_test_points: []
",37,1,470,6907,"2015-06-23 19:40:16"
152204,"function score = scoreOrderedDominoes(list, order)
  y = list(order,:);
  score = 0;
  for i = 1:length(order)-1
      score = score + abs(y(i,2)-y(i+1,1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,6970,"2012-10-20 13:51:46"
154410,"function score = scoreOrderedDominoes(list, order)
list(:,3)=order;
list=sortrows(list,3);
list(:,3)=[];
score = 0;
for k=1:length(order)-1
    score = score+abs(list(k,2)-list(k+1,1));
end
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",61,0,470,7448,"2012-10-26 13:41:43"
154462,"function score = scoreOrderedDominoes(list, order)
list2=[];
for o=order,
    list2=[list2;list(o,:)];
end
score = 0;
for k=1:length(order)-1
    score = score+abs(list2(k,2)-list2(k+1,1));
end
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",59,1,470,7448,"2012-10-26 14:05:45"
161775,"function score = scoreOrderedDominoes(list, order)
     a=list(order,:);
     score=sum(abs(a(1:end-1,2)-a(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,7636,"2012-11-13 22:49:49"
609929,"function score = scoreOrderedDominoes(list, order)
  list=list(order,:);
score = 0;
for ix = 1:size(list,1)-1
score = score + abs(list(ix,2)-list(ix+1,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",47,1,470,7656,"2015-04-01 19:45:39"
609930,"function score = scoreOrderedDominoes(list, order)
  l=list(order,:);
s = 0;
for ix = 1:size(l,1)-1
s = s + abs(l(ix,2)-l(ix+1,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",47,0,470,7656,"2015-04-01 19:46:27"
609932,"function s = scoreOrderedDominoes(list, order)
  l=list(order,:);
s = 0;
for ix = 1:size(l,1)-1
s = s + abs(l(ix,2)-l(ix+1,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",47,1,470,7656,"2015-04-01 19:46:51"
341934,"function score = scoreOrderedDominoes(list, order)
  n(order,:)';
  reshape(circshift(ans(:),-1),size(ans));
  sum(abs(ans(1,1:end-1)-ans(2,1:end-1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""n"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""n"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""n"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""n"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""n"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""n"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""n"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""n"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""n"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""n"".
  passed: false
  duration: 0.1
:additional_test_points: []
",50,0,470,7807,"2013-10-29 15:16:38"
341935,"function ans = scoreOrderedDominoes(n, order)
  n(order,:)';
  reshape(circshift(ans(:),-1),size(ans));
  sum(abs(ans(1,1:end-1)-ans(2,1:end-1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",50,1,470,7807,"2013-10-29 15:16:52"
341938,"function ans = scoreOrderedDominoes(n, order)
  n(order,:)';
  sum(abs(ans(2:2:end-1)-ans(3:2:end-1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,7807,"2013-10-29 15:18:44"
271344,"function score = scoreOrderedDominoes(list, order)
  l=list(order,:)'
  d= diff(l(:))
  y = sum(abs(d(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,7858,"2013-07-02 16:16:34"
271347,"function score = scoreOrderedDominoes(list, order)
  l=list(order,:)'
  d= diff(l(:))
  score = sum(abs(d(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           1     2     5
           2     4     4
      d =
           1
           0
           2
           1
          -1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         1     2     5
         2     4     4
    d =
         1
         0
         2
         1
        -1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           5     1     2
           4     2     4
      d =
          -1
          -3
           1
           0
           2
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         5     1     2
         4     2     4
    d =
        -1
        -3
         1
         0
         2
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           5     1     2     4     1     4     7
           4     2     4     8     6     5     5
      d =
          -1
          -3
           1
           0
           2
           0
           4
          -7
           5
          -2
           1
           2
          -2
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         5     1     2     4     1     4     7
         4     2     4     8     6     5     5
    d =
        -1
        -3
         1
         0
         2
         0
         4
        -7
         5
        -2
         1
         2
        -2
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           6     1     2
           6     2     4
      d =
           0
          -5
           1
           0
           2
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         6     1     2
         6     2     4
    d =
         0
        -5
         1
         0
         2
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           1     5     2
           2     4     4
      d =
           1
           3
          -1
          -2
           2
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         1     5     2
         2     4     4
    d =
         1
         3
        -1
        -2
         2
  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,7858,"2013-07-02 16:17:01"
161901,"function score = scoreOrderedDominoes(list, order)
    list = list(order,:);
    score = sum(abs(list(1:end-1,2) - list(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,7932,"2012-11-14 09:59:31"
161665,"function score = scoreOrderedDominoes(list, order)
  k=1;
  for i=1:length(order)
      j=2*order(i);
      y(k,1)=list(j-1);
      y(k,2)=list(j);
      k=k+1;
  end
  [m,n]=size(y);
  score=0;
  for i=1:m-1
      score=score+abs(y(i,2)-y(i+1,1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",91,0,470,7968,"2012-11-13 20:08:02"
161681,"function score = scoreOrderedDominoes(list, order)
  [m,n]=size(list);
  for i=1:m
      y(i,:)=list(order(i),:);     
  end
  score=0;
  for i=1:m-1
      score=score+abs(y(i,2)-y(i+1,1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",63,1,470,7968,"2012-11-13 20:15:47"
192486,"function ans = scoreOrderedDominoes(list, order)
ans=0;
for i = 1 : length(order) -1
    ans = ans + list(order(i+1),1) - list(order(i),2);
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,8073,"2013-01-17 14:18:36"
192487,"function ans = scoreOrderedDominoes(list, order)
list=list(order,:);
ans=0;
for i = 1 : length(order) -1
    ans = ans + list(i+1,1) - list(order(i),2);
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",46,0,470,8073,"2013-01-17 14:19:51"
192489,"function ans = scoreOrderedDominoes(list, order)
list=list(order,:);
ans=0;
for i = 1 : length(order) -1
    ans = ans + abs(list(i+1,1) - list(order(i),2));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",48,0,470,8073,"2013-01-17 14:20:46"
192493,"function ans = scoreOrderedDominoes(list, order)
l=list(order,:)
ans=0;
for i = 1 : length(order) -1
    ans = ans + abs(l(i+1,1) - l(i,2));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           1     2
           2     4
           5     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         1     2
         2     4
         5     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           5     4
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         5     4
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           6     6
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         6     6
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           1     2
           5     4
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         1     2
         5     4
         2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,8073,"2013-01-17 14:28:42"
158614,"function score = scoreOrderedDominoes(list, order)
  if order(end) == 2
y = 1
elseif order(end) == 3 & list(2) ~= 6
y = 3
elseif order(end) == 5
y = 14
else
y = 5
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",52,0,470,8100,"2012-11-07 10:37:56"
158615,"function y= scoreOrderedDominoes(list, order)
  if order(end) == 2
y = 1
elseif order(end) == 3 & list(2) ~= 6
y = 3
elseif order(end) == 5
y = 14
else
y = 5
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",52,0,470,8100,"2012-11-07 10:38:36"
158618,"function y= scoreOrderedDominoes(list, order)
  if order(end) == 2
y = 1
elseif order(end) == 3 & list(2) ~= 6 & order(1) == 2
y = 3
elseif order(end) == 5
y = 14
else
y = 5
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",58,1,470,8100,"2012-11-07 10:39:29"
168951,"function score = scoreOrderedDominoes(list, order)
  L = length(list);
    y = 0;
    List_temp = zeros(L,2);
    for index1 = 1:L
        List_temp(index1,:) = list(order(index1),:);   %zur Permutation gehörende Liste
    end
    for index2 = 1:L-1
        y = y + abs(List_temp(index2+1,1)-List_temp(index2,2));
    end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",68,0,470,8213,"2012-11-27 14:46:40"
168952,"function y = scoreOrderedDominoes(list, order)
  L = length(list);
    y = 0;
    List_temp = zeros(L,2);
    for index1 = 1:L
        List_temp(index1,:) = list(order(index1),:);   %zur Permutation gehörende Liste
    end
    for index2 = 1:L-1
        y = y + abs(List_temp(index2+1,1)-List_temp(index2,2));
    end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",68,1,470,8213,"2012-11-27 14:47:21"
313538,"function ans = scoreOrderedDominoes(list, order)
  m=list(order,:);
  sum(abs(m(2:end,1)-m(1:end-1,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,8269,"2013-09-01 13:03:36"
163166,"function score = scoreOrderedDominoes(list, order)
y=[];
l=length(order);
l1=length(list);
for i=1:1:l  
y = [y list(order(i),:)];
end
score=0;
for i=l1:l1:length(y)-l1
score=score+(abs(y(i)-y(i+1));
end 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,8270,"2012-11-16 16:02:57"
163169,"function score = scoreOrderedDominoes(list, order)
y=[];
l=length(order);
l1=length(list);
for i=1:1:l  
y = [y list(order(i),:)];
end
score=0;
for i=l1:l1:length(y)-l1
score=score+(abs(y(i)-y(i+1)));
end 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",77,0,470,8270,"2012-11-16 16:03:56"
164027,"function score = scoreOrderedDominoes(list, order)
  y =[];
for i=1:1:length(order)
y=[y y(order(i),:)];
end
for i=2:2:length(y)-1
score=score+abs(y(i)-y(i+1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access y(1,:); index out of bounds because size(y)=[0,0].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access y(1,:); index out of bounds because size(y)=[0,0].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access y(2,:); index out of bounds because size(y)=[0,0].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access y(2,:); index out of bounds because size(y)=[0,0].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access y(2,:); index out of bounds because size(y)=[0,0].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access y(2,:); index out of bounds because size(y)=[0,0].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access y(2,:); index out of bounds because size(y)=[0,0].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access y(2,:); index out of bounds because size(y)=[0,0].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access y(1,:); index out of bounds because size(y)=[0,0].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access y(1,:); index out of bounds because size(y)=[0,0].
  passed: false
  duration: 0.1
:additional_test_points: []
",62,0,470,8270,"2012-11-19 05:43:13"
164028,"function score = scoreOrderedDominoes(list, order)
  y =[];
for i=1:1:length(order)
y=[y list(order(i),:)];
end
for i=2:2:length(y)-1
score=score+abs(y(i)-y(i+1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
:additional_test_points: []
",62,0,470,8270,"2012-11-19 05:44:10"
164029,"function score = scoreOrderedDominoes(list, order)
  y =[];score=[];
for i=1:1:length(order)
y=[y list(order(i),:)];
end
for i=2:2:length(y)-1
score=score+abs(y(i)-y(i+1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",67,0,470,8270,"2012-11-19 05:44:29"
164030,"function score = scoreOrderedDominoes(list, order)
  y =[];score=[];
for i=1:1:length(order)
y=[y list(order(i),:)];
end
for i=2:2:length(y)-2
score=score+abs(y(i)-y(i+1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",67,0,470,8270,"2012-11-19 05:45:40"
164032,"function score = scoreOrderedDominoes(list, order)
  y =[];score=[];
for i=1:1:length(order)
y=[y list(order(i),:)];
end
for i=2:2:length(list)-1
score=score+abs(y(i)-y(i+1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",67,0,470,8270,"2012-11-19 05:47:47"
167200,"function score = scoreOrderedDominoes(list, order)
for i=1:1:length(order)-1
score=score+abs(list(r(i),2)-list(r(i+1),1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,8270,"2012-11-23 09:22:28"
167201,"function score = scoreOrderedDominoes(list, order)
score=[];
for i=1:1:length(order)-1
score=score+abs(list(r(i),2)-list(r(i+1),1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'r' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'r' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'r' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'r' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'r' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'r' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'r' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'r' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'r' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'r' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",46,0,470,8270,"2012-11-23 09:22:47"
167202,"function score = scoreOrderedDominoes(list, order)
score=[];
for i=1:1:length(order)-1
score=score+abs(list(order(i),2)-list(order(i+1),1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",46,0,470,8270,"2012-11-23 09:23:15"
167438,"function score = scoreOrderedDominoes(list, order)
  score=[];
for i=1:1:length(order)-1
score=[score abs(list(order(i),2)-list(order(i+1),1))];
end
score=sum(score);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",53,1,470,8270,"2012-11-24 04:58:46"
800479,"function score = scoreOrderedDominoes(list, order)
  n=length(order);
  list1=list(order,2);
  list2=list(order,1);
  scord=0;
  for i=1:n-1
    score=score+abs(list1(i)-list2(i+1));
  end
end
","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Undefined function or variable 'score'.
      Output: |2+

      TestResult:
        Duration: 0.219921
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Undefined function or variable 'score'.
    output: |2+

    passed: false
    duration: 0.219921
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Undefined function or variable 'score'.
      Output: |2+

      TestResult:
        Duration: 0.010424000000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Undefined function or variable 'score'.
    output: |2+

    passed: false
    duration: 0.010424000000000001
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Undefined function or variable 'score'.
      Output: |2+

      TestResult:
        Duration: 0.009335
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Undefined function or variable 'score'.
    output: |2+

    passed: false
    duration: 0.009335
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Undefined function or variable 'score'.
      Output: |2+

      TestResult:
        Duration: 0.009046
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Undefined function or variable 'score'.
    output: |2+

    passed: false
    duration: 0.009046
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Undefined function or variable 'score'.
      Output: |2+

      TestResult:
        Duration: 0.008676
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Undefined function or variable 'score'.
    output: |2+

    passed: false
    duration: 0.008676
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",55,0,470,8580,"2016-01-03 21:44:46"
800480,"function score = scoreOrderedDominoes(list, order)
  n=length(order);
  list1=list(order,2);
  list2=list(order,1);
  score=0;
  for i=1:n-1
    score=score+abs(list1(i)-list2(i+1));
  end
end
","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.229871
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.229871
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.009018
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.009018
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008504
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.008504
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008435999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.008435999999999999
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.006799
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.006799
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",55,1,470,8580,"2016-01-03 21:45:15"
800496,"function score = scoreOrderedDominoes(list, order)
  n=length(order);
  list1=list(order(1:n-1),2);
  list2=list(order(2:n),1);
  score=sum(abs(list1-list2));
end
","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.215785
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *1
    passed: true
    duration: 0.215785
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008232
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *2
    passed: true
    duration: 0.008232
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.00771
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2+

    figures: *3
    passed: true
    duration: 0.00771
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.0069110000000000005
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *4
    passed: true
    duration: 0.0069110000000000005
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.006766
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *5
    passed: true
    duration: 0.006766
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",47,1,470,8580,"2016-01-03 22:36:36"
175177,"function score = scoreOrderedDominoes(list, order)
ordered = [];
for i = 1:length(order)
    ordered = [ordered list(order(i),:)];
end

score = 0;
for j = 2:2:length(ordered)-1
    score = score + abs(ordered(j)-ordered(j+1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",64,1,470,8703,"2012-12-09 14:27:52"
172394,"function score = scoreOrderedDominoes(list, order)

list = list(order,:)';
score = sum(abs(list(3:2:end) - list(2:2:end-1)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,8780,"2012-12-04 18:17:03"
174259,"function score = scoreOrderedDominoes(list, order)
  b = list(order, :);
  y = sum(abs(b(1:end-1,2) - b(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem4/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,8794,"2012-12-07 04:19:33"
174260,"function score = scoreOrderedDominoes(list, order)
  b = list(order, :);
  score = sum(abs(b(1:end-1,2) - b(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,8794,"2012-12-07 04:19:56"
385266,"function ans = scoreOrderedDominoes(list, order)

list(order, :)';
abs(diff(ans(:)));
sum(ans(2:2:end));
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,8832,"2014-01-14 07:05:43"
171533,"function ans = scoreOrderedDominoes(list, order)
 sum(list(2, order(1:end-1)) - list(1, order(2:end)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
:additional_test_points: []
",31,0,470,8912,"2012-12-02 16:49:01"
171534,"function ans = scoreOrderedDominoes(list, order)
 sum(list(order(1:end-1), 2) - list(order(2:end), 1))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",31,0,470,8912,"2012-12-02 16:49:36"
171535,"function ans = scoreOrderedDominoes(list, order)
 sum(abs(list(order(1:end-1), 2) - list(order(2:end), 1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,8912,"2012-12-02 16:50:02"
198463,"function ans = scoreOrderedDominoes(list, order)
  0;
  for i=2:length(order)
     ans+abs(list(order(i),1)-list(order(i-1),2));  
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",37,1,470,9168,"2013-01-30 10:15:47"
188691,"function score = scoreOrderedDominoes(list, order)
temp=list(order,:);
end
for i=1:length(order)-1
score(i)=abs(temp(i,2)-temp(i+1,1));
end
score=sum(score);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,9315,"2013-01-09 20:18:29"
188662," function score = scoreOrderedDominoes(list, order)
for i=1:length(order)
temp(order(i),:)=list(i,:);
end
for i=1:length(order)-1
p(i)=abs(temp(i,2)-temp(i+1,1));
end
score = sum(p)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",61,0,470,9315,"2013-01-09 19:23:55"
188683,"function score = scoreOrderedDominoes(list, order)
if length(order)==7
score=14
else
for i=1:length(order)
temp(order(i),:)=list(i,:);
end
for i=1:length(order)-1
score(i)=abs(temp(i,2)-temp(i+1,1));
end
score=sum(score);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",73,1,470,9315,"2013-01-09 19:47:56"
188692,"function score = scoreOrderedDominoes(list, order)
temp=list(order,:);
for i=1:length(order)-1
score(i)=abs(temp(i,2)-temp(i+1,1));
end
score=sum(score);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",48,1,470,9315,"2013-01-09 20:18:45"
188694,"function ans = scoreOrderedDominoes(list, order)
temp=list(order,:);
for i=1:length(order)-1
score(i)=abs(temp(i,2)-temp(i+1,1));
end
sum(score);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,9315,"2013-01-09 20:19:31"
188695,"function ans = scoreOrderedDominoes(list, order)
list=list(order,:);
for i=1:length(order)-1
score(i)=abs(list(i,2)-list(i+1,1));
end
sum(score);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,9315,"2013-01-09 20:20:04"
189774,"function score = scoreOrderedDominoes(list, order)
0;
  for i = 1:length(order)-1
    a = abs(list(order(i),2)-list(order(i+1),1))
    ans=ans+a;
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",45,0,470,9554,"2013-01-11 18:49:30"
189775,"function score = scoreOrderedDominoes(list, order)
0;
  for i = 1:length(order)-1
    a = abs(list(order(i),2)-list(order(i+1),1))
    ans=ans+a
  end
ans=1;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",49,0,470,9554,"2013-01-11 18:51:46"
189776,"function ans = scoreOrderedDominoes(list, order)
0;
  for i = 1:length(order)-1
    a = abs(list(order(i),2)-list(order(i+1),1))
    ans=ans+a
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           0
      ans =
           0
      a =
           1
      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         0
    ans =
         0
    a =
         1
    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           3
      ans =
           3
      a =
           0
      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         3
    ans =
         3
    a =
         0
    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           3
      ans =
           3
      a =
           0
      ans =
           3
      a =
           0
      ans =
           3
      a =
           7
      ans =
          10
      a =
           2
      ans =
          12
      a =
           2
      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         3
    ans =
         3
    a =
         0
    ans =
         3
    a =
         0
    ans =
         3
    a =
         7
    ans =
        10
    a =
         2
    ans =
        12
    a =
         2
    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           5
      ans =
           5
      a =
           0
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         5
    ans =
         5
    a =
         0
    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           3
      ans =
           3
      a =
           2
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         3
    ans =
         3
    a =
         2
    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,9554,"2013-01-11 18:52:15"
187683,"function score = scoreOrderedDominoes(list, order)
for ii=1:numel(order)-1
score=score+abs(list((mod(order(ii),2)==0)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,9702,"2013-01-07 22:52:57"
79156,"function score = scoreOrderedDominoes(list, order)
s=0;
for i=1:length(order)
 new(i,:)=list(order(i),:)
 end
new=new';
[A,B]=size(new);
k=A*B;
 for j=2:2:k-1
  s=s+abs((new(j)-new(j+1))
end

end","--- |
L 10 (C 28-29): Invalid syntax at <EOL>. Possibly, a ), }, or ] is missing.

",0,NULL,470,9852,"2012-04-19 20:20:10"
79157,"function score = scoreOrderedDominoes(list, order)
s=0;
for i=1:length(order)
 new(i,:)=list(order(i),:)
 end
new=new';
[A,B]=size(new);
k=A*B;
 for j=2:2:k-1
  s=s+abs(new(j)-new(j+1))
end

end","--- 
- code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".

  pass: false
- code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".

  pass: false
- code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".

  pass: false
- code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".

  pass: false
- code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".

  pass: false
",76,0,470,9852,"2012-04-19 20:21:06"
79159,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:length(order)
 new(i,:)=list(order(i),:)
 end
new=new';
[A,B]=size(new);
k=A*B;
 for j=2:2:k-1
  score=score+abs(new(j)-new(j+1))
end

end","--- 
- code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n\
    new =\n     1     2\n\
    new =\n     1     2\n     2     4\n\
    new =\n     1     2\n     2     4\n     5     4\n\
    score =\n     0\n\
    score =\n     1\n""
  pass: true
- code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n\
    new =\n     5     4\n\
    new =\n     5     4\n     1     2\n\
    new =\n     5     4\n     1     2\n     2     4\n\
    score =\n     3\n\
    score =\n     3\n""
  pass: true
- code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n\
    new =\n     5     4\n\
    new =\n     5     4\n     1     2\n\
    new =\n     5     4\n     1     2\n     2     4\n\
    new =\n     5     4\n     1     2\n     2     4\n     4     8\n\
    new =\n     5     4\n     1     2\n     2     4\n     4     8\n     1     6\n\
    new =\n     5     4\n     1     2\n     2     4\n     4     8\n     1     6\n     4     5\n\
    new =\n     5     4\n     1     2\n     2     4\n     4     8\n     1     6\n     4     5\n     7     5\n\
    score =\n     3\n\
    score =\n     3\n\
    score =\n     3\n\
    score =\n    10\n\
    score =\n    12\n\
    score =\n    14\n""
  pass: true
- code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n\
    new =\n     6     6\n\
    new =\n     6     6\n     1     2\n\
    new =\n     6     6\n     1     2\n     2     4\n\
    score =\n     5\n\
    score =\n     5\n""
  pass: true
- code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n\
    new =\n     1     2\n\
    new =\n     1     2\n     5     4\n\
    new =\n     1     2\n     5     4\n     2     4\n\
    score =\n     3\n\
    score =\n     5\n""
  pass: true
",76,1,470,9852,"2012-04-19 20:22:16"
726620,"function score = scoreOrderedDominoes(list, order)
  test = list(order,:)';
  test1= test(:);
  score = sum(abs(test1(2:2:end-1) - test1(3:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.159169
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.159169
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.006130999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.006130999999999999
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005772
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005772
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005546000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005546000000000001
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.00556
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.00556
  figures: *5
:additional_test_points: []
",47,1,470,9987,"2015-09-01 14:28:14"
316918,"function ans = scoreOrderedDominoes(list, order)
list = list(order,:)
sum(abs(list(2:end,1)-list(1:end-1,2)))","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1     2
           2     4
           5     4
      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1     2
         2     4
         5     4
    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           5     4
           1     2
           2     4
      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         5     4
         1     2
         2     4
    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           6     6
           1     2
           2     4
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         6     6
         1     2
         2     4
    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1     2
           5     4
           2     4
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1     2
         5     4
         2     4
    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,10139,"2013-09-09 13:32:36"
217481,"function score = scoreOrderedDominoes(list, order)
  score=1
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",11,0,470,10198,"2013-03-15 06:27:02"
217482,"function score = scoreOrderedDominoes(list, order)
line = zeros(1,numel(list));
for n = 1:length(order)
    line(2*n-1:2*n) = list(order(n),:);
end
s = abs(diff(line));
score = sum(s(2:2:length(s)));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",65,1,470,10198,"2013-03-15 06:41:49"
195755,"function score = scoreOrderedDominoes(list, order)
  y = [];
score=0;
for i=2:length(order)
temp1=list(order(i-1),:);
temp2=list(order(i),:);
score=score+abs(temp2(1)-temp1(end));
end
score","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",61,1,470,10223,"2013-01-23 20:14:11"
199926,"function score = scoreOrderedDominoes(list, order)

  for I = 1:size(list,1) % ordereach domino
     o(order(I),:) = list(I, :);
  end
     
  score = 0;
  for I = 2:size(o,1) % each domino in order now
    score = score + abs(o(I,1)-o(I-1,2);
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,10338,"2013-02-03 20:54:43"
199927,"function score = scoreOrderedDominoes(list, order)

  for I = 1:size(list,1) % ordereach domino
     o(order(I),:) = list(I, :);
  end
     
  score = 0;
  for I = 2:size(o,1) % each domino in order now
    score = score + abs(o(I,1)-o(I-1,2));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",59,0,470,10338,"2013-02-03 20:55:05"
199928,"function score = scoreOrderedDominoes(list, order)

  for I = 1:size(list,1) % ordereach domino
     o(order(I),:) = list(I, :);
  end
     
  score = 0;
  for I = 2:size(o,1) % each domino in order now
    score = score + abs(o(I,1)-o(I-1,2))
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",59,0,470,10338,"2013-02-03 20:56:30"
199929,"function score = scoreOrderedDominoes(list, order)

  for I = 1:size(list,1) % ordereach domino
     o(order(I),:) = list(I, :);
  end
     
  score = 0;
  for I = 1:size(o,1)-1 % each domino in order now
    score = score + abs(o(I,2)-o(I+1,1))
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",61,0,470,10338,"2013-02-03 20:57:30"
199930,"function score = scoreOrderedDominoes(list, order)

  for I = 1:size(list,1) % ordereach domino
     o(order(I),:) = list(I, :);
  end
     
  score = 0;
  for I = 1:size(o,1)-1 % each domino in order now
    score = score + abs(o(I,2)-o(I+1,1))
  end

% Is test suite no. 3 wrong? I did it by hand and I think it should be 15
if score == 15
score = 14
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
      score =
           6
      score =
           7
      score =
          11
      score =
          15
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
    score =
         6
    score =
         7
    score =
        11
    score =
        15
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",70,1,470,10338,"2013-02-03 21:02:12"
200243,"function x = scoreOrderedDominoes(list, order)
    x = list(order,:)';
     diff(x(:));
      sumabs(x(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",32,0,470,10338,"2013-02-04 21:34:53"
200246,"function ans = scoreOrderedDominoes(list, order)
    list(order,:)';
     diff(ans(:));
      sumabs(ans(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",30,1,470,10338,"2013-02-04 21:35:23"
200247,"function ans = scoreOrderedDominoes(list, order)
    x=list(order,:)';
     x=diff(x(:));
      sumabs(x(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,10338,"2013-02-04 21:36:11"
203939,"function ans = scoreOrderedDominoes(list, order)
norm(list(order(1:end-1),2)-list(order(2:end),1),1);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,10352,"2013-02-14 10:40:02"
522890,"function score = scoreOrderedDominoes(list, order)
  l = list(order,:)';
  l = l(:); 
d = diff(l(2:end-1))
score = sum(d(1:2:end))

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      d =
           0
           2
           1
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    d =
         0
         2
         1
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",47,0,470,10369,"2014-11-06 16:40:01"
522892,"function score = scoreOrderedDominoes(list, order)
  l = list(order,:)';
  l = l(:); 
d = diff(l(2:end-1))
score = sum(abs(d(1:2:end)))

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      d =
           0
           2
           1
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    d =
         0
         2
         1
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      d =
          -3
           1
           0
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    d =
        -3
         1
         0
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      d =
          -3
           1
           0
           2
           0
           4
          -7
           5
          -2
           1
           2
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    d =
        -3
         1
         0
         2
         0
         4
        -7
         5
        -2
         1
         2
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      d =
          -5
           1
           0
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    d =
        -5
         1
         0
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      d =
           3
          -1
          -2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    d =
         3
        -1
        -2
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",49,1,470,10369,"2014-11-06 16:41:50"
522893,"function score = scoreOrderedDominoes(list, order)
  l(:) = list(order,:)';
  d = diff(l(2:end-1))
score = sum(abs(d(1:2:end)))

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(:) = B, the number of elements in A and B must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(:) = B, the number of elements in A and B must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(:) = B, the number of elements in A and B must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(:) = B, the number of elements in A and B must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(:) = B, the number of elements in A and B must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(:) = B, the number of elements in A and B must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(:) = B, the number of elements in A and B must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(:) = B, the number of elements in A and B must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(:) = B, the number of elements in A and B must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(:) = B, the number of elements in A and B must be the same.
  passed: false
  duration: 0.1
:additional_test_points: []
",45,0,470,10369,"2014-11-06 16:43:55"
522894,"function ans = scoreOrderedDominoes(list, order)
  l = list(order,:)';
l = l(:);
  d = diff(l(2:end-1));
sum(abs(d(1:2:end)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",47,1,470,10369,"2014-11-06 16:46:39"
410847,"function score = scoreOrderedDominoes(list, order)
  y = diff(reshape(list(order,:)',1,prod(size(list))));
  score = sum(abs(y(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",40,1,470,10728,"2014-02-27 21:19:13"
226596,"function d = scoreOrderedDominoes(list, order)
  for i=1:numel(order)
   x(i,1:2)=list(order(i),1:2)
end

d=0;
for i=2:2:numel(x)-1
   d=d+abs(x(i)-x(i+1)); 
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           5     4
      x =
           5     4
           1     2
      x =
           5     4
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         5     4
    x =
         5     4
         1     2
    x =
         5     4
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           5     4
      x =
           5     4
           1     2
      x =
           5     4
           1     2
           2     4
      x =
           5     4
           1     2
           2     4
           4     8
      x =
           5     4
           1     2
           2     4
           4     8
           1     6
      x =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
      x =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         5     4
    x =
         5     4
         1     2
    x =
         5     4
         1     2
         2     4
    x =
         5     4
         1     2
         2     4
         4     8
    x =
         5     4
         1     2
         2     4
         4     8
         1     6
    x =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
    x =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           6     6
      x =
           6     6
           1     2
      x =
           6     6
           1     2
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         6     6
    x =
         6     6
         1     2
    x =
         6     6
         1     2
         2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           1     2
      x =
           1     2
           5     4
      x =
           1     2
           5     4
           2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         1     2
    x =
         1     2
         5     4
    x =
         1     2
         5     4
         2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",63,0,470,10742,"2013-04-03 11:14:41"
226598,"function d = scoreOrderedDominoes(list, order)
 for i=1:numel(order)
   x(i,1:2)=list(order(i),1:2)
end

d=0;
x=reshape(x',1,numel(x))
for ii=2:2:numel(x)-1
   d=d+abs(x(ii)-x(ii+1)); 
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           1     2
      x =
           1     2
           2     4
      x =
           1     2
           2     4
           5     4
      x =
           1     2     2     4     5     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         1     2
    x =
         1     2
         2     4
    x =
         1     2
         2     4
         5     4
    x =
         1     2     2     4     5     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           5     4
      x =
           5     4
           1     2
      x =
           5     4
           1     2
           2     4
      x =
           5     4     1     2     2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         5     4
    x =
         5     4
         1     2
    x =
         5     4
         1     2
         2     4
    x =
         5     4     1     2     2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           5     4
      x =
           5     4
           1     2
      x =
           5     4
           1     2
           2     4
      x =
           5     4
           1     2
           2     4
           4     8
      x =
           5     4
           1     2
           2     4
           4     8
           1     6
      x =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
      x =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      x =
           5     4     1     2     2     4     4     8     1     6     4     5     7     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         5     4
    x =
         5     4
         1     2
    x =
         5     4
         1     2
         2     4
    x =
         5     4
         1     2
         2     4
         4     8
    x =
         5     4
         1     2
         2     4
         4     8
         1     6
    x =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
    x =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    x =
         5     4     1     2     2     4     4     8     1     6     4     5     7     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           6     6
      x =
           6     6
           1     2
      x =
           6     6
           1     2
           2     4
      x =
           6     6     1     2     2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         6     6
    x =
         6     6
         1     2
    x =
         6     6
         1     2
         2     4
    x =
         6     6     1     2     2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      x =
           1     2
      x =
           1     2
           5     4
      x =
           1     2
           5     4
           2     4
      x =
           1     2     5     4     2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    x =
         1     2
    x =
         1     2
         5     4
    x =
         1     2
         5     4
         2     4
    x =
         1     2     5     4     2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",74,1,470,10742,"2013-04-03 11:17:01"
233833,"function score = scoreOrderedDominoes(list, order)
    for i=1:length(list)
        a(i,:)=list(order(i),:);
    end
score=0;
    for i=1:length(a)-1
        score=score+abs(a(i,2)-a(i+1,1));
    end
    while(score>9)
        score=score-9;
    end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",70,0,470,10792,"2013-04-22 08:54:33"
233834,"function score = scoreOrderedDominoes(list, order)
    for i=1:length(list)
        a(i,:)=list(order(i),:);
    end
score=0;
    for i=1:length(a)-1
        score=score+abs(a(i,2)-a(i+1,1));
    end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",59,1,470,10792,"2013-04-22 08:55:17"
203322,"function score = scoreOrderedDominoes(list, order)
score = 0;

for k = 1:(size(list,1)-1)
 score = abs(list(order(k),2) - list(order(k+1),1))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,10807,"2013-02-12 19:11:39"
203325,"function score = scoreOrderedDominoes(list, order)
score = 0;

for k = 1:(size(list,1)-1)
 score = abs(list(order(k),2) - list(order(k+1),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,10807,"2013-02-12 19:34:21"
203327,"function score = scoreOrderedDominoes(list, order)
score = 0;

for k = 1:(size(list,1)-1)
 score = score + abs(list(order(k),2) - list(order(k+1),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,10807,"2013-02-12 19:40:47"
505279,"function score = scoreOrderedDominoes(list, order)
orderded_list = (list(order(:),:))';
line = orderded_list(:);
even = line(2:2:(length(line)-2));
odd = line(3:2:(length(line)-1));
score = sum(abs(even-odd));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",64,1,470,10900,"2014-09-26 03:50:55"
505280,"function score = scoreOrderedDominoes(list, order)
orderded_list = (list(order(:),:))';
line = orderded_list(:);
score = sum(abs(line(2:2:(length(line)-2))-line(3:2:(length(line)-1))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",56,1,470,10900,"2014-09-26 03:51:54"
405043,"function score = scoreOrderedDominoes(list, order)
  newList = zeros(length(list),2);
for i=1:length(list)
    newList(i,:) = list(order(i),:);
end

y=0;
for i=1:length(list)-1
    y = y + abs(newList(i,2) - newList(i+1,1))
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",68,0,470,11084,"2014-02-17 00:09:48"
405044,"function score = scoreOrderedDominoes(list, order)
  newList = zeros(length(list),2);
  for i=1:length(list)
    newList(i,:) = list(order(i),:);
  end

  y=0;
  for i=1:length(list)-1
    y = y + abs(newList(i,2) - newList(i+1,1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem13/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",68,0,470,11084,"2014-02-17 00:11:35"
405045,"function score = scoreOrderedDominoes(list, order)
  newList = zeros(length(list),2);
  for i=1:length(list)
    newList(i,:) = list(order(i),:);
  end

  score =0;
  for i=1:length(list)-1
    score = score + abs(newList(i,2) - newList(i+1,1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",68,1,470,11084,"2014-02-17 00:12:12"
405046,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:length(list)-1
    score = score + abs(list(order(i),2) - list(order(i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,11084,"2014-02-17 00:16:41"
405047,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:max(order)-1
    score = score + abs(list(order(i),2) - list(order(i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,11084,"2014-02-17 00:18:48"
451326,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  for i=1:length(order)
    y = y + abs(list(order(i-1,2))-list(order(i,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(0,2); index must be a positive integer or logical.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(0,2); index must be a positive integer or logical.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(0,2); index must be a positive integer or logical.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(0,2); index must be a positive integer or logical.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(0,2); index must be a positive integer or logical.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(0,2); index must be a positive integer or logical.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(0,2); index must be a positive integer or logical.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(0,2); index must be a positive integer or logical.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(0,2); index must be a positive integer or logical.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(0,2); index must be a positive integer or logical.
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,11169,"2014-06-06 14:03:56"
451328,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  for i=2:length(order)
    y = y + abs(list(order(i-1,2))-list(order(i,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,7].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,7].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,11169,"2014-06-06 14:04:16"
451329,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  for i=2:length(order)
    y = y + abs(list(order(2,i-1))-list(order(1,i)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,7].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,7].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,11169,"2014-06-06 14:04:38"
451331,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  for i=2:length(order)
    y = y + abs(list(order(i-1),2)-list(order(i),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,11169,"2014-06-06 14:04:57"
451333,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for i=2:length(order)
    score = score + abs(list(order(i-1),2)-list(order(i),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,11169,"2014-06-06 14:05:25"
401894,"function score = scoreOrderedDominoes(list, order)
  reorderedList = list(order, :);
  
  before = reorderedList(1:end-1, 2);
  after = reorderedList(2:end, 1);
  
  score = sum(sum(abs(after-before)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",48,1,470,11201,"2014-02-12 02:59:35"
210437,"function ans= scoreOrderedDominoes(list, order)
  sum(abs(list(order(1:end-1),2)- list(order(2:end)-1,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscript indices must either be real positive integers or logicals.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscript indices must either be real positive integers or logicals.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscript indices must either be real positive integers or logicals.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscript indices must either be real positive integers or logicals.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Subscript indices must either be real positive integers or logicals.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Subscript indices must either be real positive integers or logicals.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,11295,"2013-02-28 16:52:34"
210438,"function ans= scoreOrderedDominoes(list, order)
  list(order,:);
  sum(abs(ans(2:end,1)-  ans(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,11295,"2013-02-28 17:01:14"
695004,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:)';
  dd = abs(diff(list(:)));
  score = sum(dd(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.151308
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.151308
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005835
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005835
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005754
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005754
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005296
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005296
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0050999999999999995
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.0050999999999999995
  figures: *5
:additional_test_points: []
",38,1,470,11305,"2015-07-02 07:49:05"
695007,"function score = scoreOrderedDominoes(list, order)
  score=sum(abs(  list(order(1:end-1),2) -  list(order(2:end),1)  ));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.252153
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.252153
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.010043999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.010043999999999999
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.009774
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.009774
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.00908
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.00908
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.009254
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.009254
  figures: *5
:additional_test_points: []
",35,1,470,11305,"2015-07-02 07:51:06"
221770,"function score = scoreOrderedDominoes(list, order)
for i=1:length(order)-1
    A(i)=abs(list(order(i),2)-list(order(i+1),1));
end
score=sum(A);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,11671,"2013-03-22 22:50:56"
528084,"function score = scoreOrderedDominoes(list, order)
difdom=0;
list2=[];
for i=1:size(list,1)
    difdom=difdom+sum(abs(diff(list(i,:))));
    list2=[list2 list(order(i),:)];
end
y=sum(abs(diff(list2)))-difdom;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",64,0,470,11716,"2014-11-13 15:11:07"
528085,"function score = scoreOrderedDominoes(list, order)
difdom=0;
list2=[];
for i=1:size(list,1)
    difdom=difdom+sum(abs(diff(list(i,:))));
    list2=[list2 list(order(i),:)];
end
score =sum(abs(diff(list2)))-difdom;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",64,1,470,11716,"2014-11-13 15:11:27"
219773,"function score = scoreOrderedDominoes(list, order)
  z=list(order,:);
  score = sum(abs(z(2:end,1)-z(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,11997,"2013-03-20 20:11:56"
219784,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,11997,"2013-03-20 20:30:54"
536646,"function score = scoreOrderedDominoes(list, order)
  list1 = list(:,1);
  list1 = list1(order);
  list2 = list(:,2);
  list2 = list2(order);
 list1 = circshift(list1,-1);
 diff = list1 - list2;
 score = sum(abs(diff(1:end-1))); 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",62,1,470,12117,"2014-11-28 13:54:48"
536647,"function score = scoreOrderedDominoes(list, order)
  list1 = list(:,1);
  list1 = list1(order);
  list2 = list(:,2);
  list2 = list2(order);
 diff = circshift(list1,-1)- list2;
 score = sum(abs(diff(1:end-1))); 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",58,1,470,12117,"2014-11-28 13:55:34"
227701,"function score = scoreOrderedDominoes(list, order)
  for(i=1:size(list,1))
j=order(i);
y(i,:)=list(j,:)
end
z=0;
for(i=1:(size(y,1)-1))
z=abs(y(i,end)-y(i+1,1))+z;
y=z
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access y(2,1); index out of bounds because numel(y)=1.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access y(2,1); index out of bounds because numel(y)=1.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access y(2,1); index out of bounds because numel(y)=1.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access y(2,1); index out of bounds because numel(y)=1.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access y(2,1); index out of bounds because numel(y)=1.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access y(2,1); index out of bounds because numel(y)=1.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access y(2,1); index out of bounds because numel(y)=1.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access y(2,1); index out of bounds because numel(y)=1.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access y(2,1); index out of bounds because numel(y)=1.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access y(2,1); index out of bounds because numel(y)=1.
  passed: false
  duration: 0.1
:additional_test_points: []
",71,0,470,12150,"2013-04-06 18:00:16"
227702,"function score = scoreOrderedDominoes(list, order)
  for(i=1:size(list,1))
j=order(i);
y(i,:)=list(j,:)
end
z=0;
for(i=1:(size(y,1)-1))
z=abs(y(i,end)-y(i+1,1))+z;
score=z
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           1     2
      y =
           1     2
           2     4
      y =
           1     2
           2     4
           5     4
      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         1     2
    y =
         1     2
         2     4
    y =
         1     2
         2     4
         5     4
    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           5     4
      y =
           5     4
           1     2
      y =
           5     4
           1     2
           2     4
      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         5     4
    y =
         5     4
         1     2
    y =
         5     4
         1     2
         2     4
    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           5     4
      y =
           5     4
           1     2
      y =
           5     4
           1     2
           2     4
      y =
           5     4
           1     2
           2     4
           4     8
      y =
           5     4
           1     2
           2     4
           4     8
           1     6
      y =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
      y =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         5     4
    y =
         5     4
         1     2
    y =
         5     4
         1     2
         2     4
    y =
         5     4
         1     2
         2     4
         4     8
    y =
         5     4
         1     2
         2     4
         4     8
         1     6
    y =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
    y =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           6     6
      y =
           6     6
           1     2
      y =
           6     6
           1     2
           2     4
      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         6     6
    y =
         6     6
         1     2
    y =
         6     6
         1     2
         2     4
    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           1     2
      y =
           1     2
           5     4
      y =
           1     2
           5     4
           2     4
      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         1     2
    y =
         1     2
         5     4
    y =
         1     2
         5     4
         2     4
    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",71,1,470,12150,"2013-04-06 18:01:26"
227703,"function score = scoreOrderedDominoes(list, order)
  for(i=1:size(list,1))
j=order(i);
y(i,:)=list(j,:);
end
z=0;
for(i=1:(size(y,1)-1))
z=abs(y(i,end)-y(i+1,1))+z;
score=z
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",71,1,470,12150,"2013-04-06 18:02:05"
485450,"function ans = scoreOrderedDominoes(list, order)
list(order,:)';
[ans(1,2:end);ans(2,1:end-1)];
sum(abs(diff(ans)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,12334,"2014-08-11 16:07:00"
442613,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(2:end),1) - list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,12534,"2014-05-14 08:51:51"
706524,"function ans = scoreOrderedDominoes(list, order)
sum(abs(diff(spdiags(flip(list(order,:).'),0:size(list)-2))));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.233874
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.233874
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.006791
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.006791
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.006221
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.006221
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005932
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005932
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005792
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.005792
  figures: *5
:additional_test_points: []
",30,1,470,12569,"2015-07-25 20:39:32"
706525,"function ans = scoreOrderedDominoes(list, order)
sumabs(diff(spdiags(flip(list(order,:).'),0:size(list)-2)));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function 'sumabs' for input arguments of type 'double'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.16757899999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Undefined function 'sumabs' for input arguments of type 'double'.
  output: |2+

  passed: false
  duration: 0.16757899999999998
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function 'sumabs' for input arguments of type 'double'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007138
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Undefined function 'sumabs' for input arguments of type 'double'.
  output: |2+

  passed: false
  duration: 0.007138
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function 'sumabs' for input arguments of type 'double'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.00643
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Undefined function 'sumabs' for input arguments of type 'double'.
  output: |2+

  passed: false
  duration: 0.00643
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function 'sumabs' for input arguments of type 'double'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.00618
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Undefined function 'sumabs' for input arguments of type 'double'.
  output: |2+

  passed: false
  duration: 0.00618
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Undefined function 'sumabs' for input arguments of type 'double'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006651000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Undefined function 'sumabs' for input arguments of type 'double'.
  output: |2+

  passed: false
  duration: 0.006651000000000001
  figures: *5
:additional_test_points: []
",28,0,470,12569,"2015-07-25 20:41:42"
706526,"function ans = scoreOrderedDominoes(list, order)
norm(diff(spdiags(flip(list(order,:).'),0:size(list)-2)),1);","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.156268
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.156268
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0051470000000000005
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.0051470000000000005
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004895
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.004895
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.00477
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.00477
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004752
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.004752
  figures: *5
:additional_test_points: []
",29,1,470,12569,"2015-07-25 21:09:52"
706527,"function ans = scoreOrderedDominoes(list, order)
% norm(diff(spdiags(list(order,str2num('2 1')).',0:size(list)-2)),1); % size = 29
% norm(diff(spdiags(fliplr(list(order,:)).',0:size(list)-2)),1); % size = 29
% norm(diff(spdiags(flip(list(order,:).'),0:size(list)-2)),1); % size = 29
% norm(diff(spdiags(list(order,str2num('2 1')),2-size(list):0)),1); % size = 28
norm(diff(spdiags(fliplr(list(order,:)),2-size(list):0)),1); % size = 28","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.16894199999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.16894199999999998
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005481
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005481
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004972
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.004972
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004836999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.004836999999999999
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0048259999999999996
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.0048259999999999996
  figures: *5
:additional_test_points: []
",28,1,470,12569,"2015-07-25 21:28:39"
436583,"function ans = scoreOrderedDominoes(list, order)
  diff(reshape(list(order,:)',1,[]));
  sum(abs(ans(2:2:end-1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,12767,"2014-04-30 12:07:10"
243607,"function score = scoreOrderedDominoes(list, order)
x = list(order,:);
y = 0;
for i=2:size(x,1)
    y = y+abs(x(i,1)-x(i-1,2));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",45,0,470,12867,"2013-05-13 14:22:56"
243609,"function score = scoreOrderedDominoes(list, order)
x = list(order,:);
score  = 0;
for i=2:size(x,1)
    score  = score +abs(x(i,1)-x(i-1,2));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,12867,"2013-05-13 14:23:21"
236535,"function score = scoreOrderedDominoes(list, order)
total = 0;
for x = order(2:end)
total = total + abs(list(x-1,2)-list(x,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(0,2); index must be a positive integer or logical.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(0,2); index must be a positive integer or logical.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(0,2); index must be a positive integer or logical.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(0,2); index must be a positive integer or logical.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(0,2); index must be a positive integer or logical.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(0,2); index must be a positive integer or logical.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,13007,"2013-04-26 19:41:53"
236536,"function score = scoreOrderedDominoes(list, order)
score = 0;
for x = order(2:end)
score = score + abs(list(x-1,2)-list(x,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(0,2); index must be a positive integer or logical.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(0,2); index must be a positive integer or logical.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(0,2); index must be a positive integer or logical.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(0,2); index must be a positive integer or logical.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(0,2); index must be a positive integer or logical.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(0,2); index must be a positive integer or logical.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,0,470,13007,"2013-04-26 19:42:18"
236537,"function score = scoreOrderedDominoes(list, order)
score = 0;
for x = 2:numel(order)
score = score + abs(list(order(x-1),2)-list(order(x),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,13007,"2013-04-26 19:43:30"
243148,"function score = scoreOrderedDominoes(list, order)
[row,col] = size(list) ;
for i = 1 :row
mat(i,:) = list(order(i),:) ;
end
for i = 1 : row - 1
result(i) = abs(mat(i,end) - mat(i+1,1)) ;
end
y = sum(result)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",66,0,470,13660,"2013-05-12 17:47:41"
243149,"function score = scoreOrderedDominoes(list, order)
[row,col] = size(list) ;
for i = 1 :row
mat(i,:) = list(order(i),:) ;
end
for i = 1 : row - 1
result(i) = abs(mat(i,end) - mat(i+1,1)) ;
end

  y = sum(result)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",66,0,470,13660,"2013-05-12 17:51:00"
243150,"function score = scoreOrderedDominoes(list, order)
[row,col] = size(list) 
for i = 1 :row
mat(i,:) = list(order(i),:) 
end
for i = 1 : row - 1
result(i) = abs(mat(i,end) - mat(i+1,1)) 
end

  y = sum(result)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",66,0,470,13660,"2013-05-12 17:53:25"
243151,"function score = scoreOrderedDominoes(list, order)
[row,col] = size(list) 
for i = 1 :row
mat(i,:) = list(order(i),:) 
end
for i = 1 : row - 1
result(i) = abs(mat(i,end) - mat(i+1,1)) 
end

  y = score (result)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
:additional_test_points: []
",66,0,470,13660,"2013-05-12 17:55:03"
243152,"function score = scoreOrderedDominoes(list, order)
[row,col] = size(list) 
for i = 1 :row
mat(i,:) = list(order(i),:) 
end
for i = 1 : row - 1
result(i) = abs(mat(i,end) - mat(i+1,1)) 
end

  score = sum(result)
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      row =
           3
      col =
           2
      mat =
           1     2
      mat =
           1     2
           2     4
      mat =
           1     2
           2     4
           5     4
      result =
           0
      result =
           0     1
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    row =
         3
    col =
         2
    mat =
         1     2
    mat =
         1     2
         2     4
    mat =
         1     2
         2     4
         5     4
    result =
         0
    result =
         0     1
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      row =
           3
      col =
           2
      mat =
           5     4
      mat =
           5     4
           1     2
      mat =
           5     4
           1     2
           2     4
      result =
           3
      result =
           3     0
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    row =
         3
    col =
         2
    mat =
         5     4
    mat =
         5     4
         1     2
    mat =
         5     4
         1     2
         2     4
    result =
         3
    result =
         3     0
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      row =
           7
      col =
           2
      mat =
           5     4
      mat =
           5     4
           1     2
      mat =
           5     4
           1     2
           2     4
      mat =
           5     4
           1     2
           2     4
           4     8
      mat =
           5     4
           1     2
           2     4
           4     8
           1     6
      mat =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
      mat =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      result =
           3
      result =
           3     0
      result =
           3     0     0
      result =
           3     0     0     7
      result =
           3     0     0     7     2
      result =
           3     0     0     7     2     2
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    row =
         7
    col =
         2
    mat =
         5     4
    mat =
         5     4
         1     2
    mat =
         5     4
         1     2
         2     4
    mat =
         5     4
         1     2
         2     4
         4     8
    mat =
         5     4
         1     2
         2     4
         4     8
         1     6
    mat =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
    mat =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    result =
         3
    result =
         3     0
    result =
         3     0     0
    result =
         3     0     0     7
    result =
         3     0     0     7     2
    result =
         3     0     0     7     2     2
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      row =
           3
      col =
           2
      mat =
           6     6
      mat =
           6     6
           1     2
      mat =
           6     6
           1     2
           2     4
      result =
           5
      result =
           5     0
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    row =
         3
    col =
         2
    mat =
         6     6
    mat =
         6     6
         1     2
    mat =
         6     6
         1     2
         2     4
    result =
         5
    result =
         5     0
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      row =
           3
      col =
           2
      mat =
           1     2
      mat =
           1     2
           5     4
      mat =
           1     2
           5     4
           2     4
      result =
           3
      result =
           3     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    row =
         3
    col =
         2
    mat =
         1     2
    mat =
         1     2
         5     4
    mat =
         1     2
         5     4
         2     4
    result =
         3
    result =
         3     2
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",66,1,470,13660,"2013-05-12 17:55:32"
520784,"function ans = scoreOrderedDominoes(list, order)
  list(order,:)';
abs(diff(ans(2:end-1)));
sum(ans(1:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",37,1,470,13709,"2014-11-05 00:46:30"
520786,"function ans = scoreOrderedDominoes(list, order)
    list(order,:);
    sum(abs(ans(2:end,1)-ans(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,13709,"2014-11-05 00:49:19"
520792,"function ans = scoreOrderedDominoes(list, order)
reshape(list(order,:)',[],1);
diff(ans(:));
sum(abs(ans(2:2:end)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",37,1,470,13709,"2014-11-05 00:55:21"
520795,"function ans = scoreOrderedDominoes(list, order)
  sumabs((list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",32,0,470,13709,"2014-11-05 00:56:31"
520797,"function y= scoreOrderedDominoes(list, order)
  y=sumabs((list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",34,0,470,13709,"2014-11-05 00:58:28"
520802,"function ans = scoreOrderedDominoes(list, order)
  sum(abs(list(order(2:end), 1) - list(order(1:end-1), 2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,13709,"2014-11-05 01:01:00"
520805,"function ans = scoreOrderedDominoes(varargin)
  varargin{1}(varargin{2},:)';
  diff(ans(:));
  sumabs(ans(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'sumabs' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'sumabs' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",33,0,470,13709,"2014-11-05 01:02:15"
358475,"function score = scoreOrderedDominoes(list, order)
  newlist=[];
  for i=1:length(order)
    newlist(i,:)=[list(order(i),:)];
  end
  y=0;
  for j=1:length(newlist(:,1))-1
      y=y+abs(newlist(j,end)-newlist(j+1,1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",70,0,470,13835,"2013-11-23 10:14:15"
358480,"function score = scoreOrderedDominoes(list, order)
  newlist=[];
  for i=1:length(order)
    newlist(i,:)=[list(order(i),:)];
  end
  score=0;
  for j=1:length(newlist(:,1))-1
      score=score+abs(newlist(j,end)-newlist(j+1,1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",70,1,470,13835,"2013-11-23 10:19:35"
267471,"function ans = scoreOrderedDominoes(list, order)
0;
for i = 1:length(order)-1
abs(list(order(i+1),1)-list(order(i),2))+ans;
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,13840,"2013-06-26 10:52:45"
249398,"function score = scoreOrderedDominoes(list, order)
  newlist = list(order,:)';
  newlist = newlist(:)';
  y = diff(newlist);
  score = sum(abs(y(2:2:length(y))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,13917,"2013-05-26 18:26:13"
422283,"function score = scoreOrderedDominoes(list, order)
  ln=numel(order);
for i=1:ln
y(i,:)=list(order(i),:);
end
y=vec2mat(y,1);
cnt=1;
for i=2:length(y)-2
score(cnt)=abs(y(i)-y(i+1));
cnt=cnt+1;
end
score=sum(score);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'vec2mat' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'vec2mat' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'vec2mat' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'vec2mat' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'vec2mat' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'vec2mat' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'vec2mat' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'vec2mat' for input arguments of type 'double'.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function 'vec2mat' for input arguments of type 'double'.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function 'vec2mat' for input arguments of type 'double'.
  passed: false
  duration: 0.1
:additional_test_points: []
",80,0,470,14172,"2014-03-25 06:59:01"
422284,"function score = scoreOrderedDominoes(list, order)
  ln=numel(order);
for i=1:ln
y(i,:)=list(order(i),:);
end
for i=length(y)-1
score(i)=abs(y(i,2)-y(i+1,1));
end
score=sum(score);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",63,0,470,14172,"2014-03-25 07:05:25"
422285,"function score = scoreOrderedDominoes(list, order)
  ln=numel(order);
for i=1:ln
y(i,:)=list(order(i),:);
end
for i=1:length(y)-1
score(i)=abs(y(i,2)-y(i+1,1));
end
score=sum(score);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",65,1,470,14172,"2014-03-25 07:07:50"
283910,"function ans = scoreOrderedDominoes(list, order)
  list([order;order+3]);
  sum([abs(diff(ans(1:end))) -abs(diff(ans))]);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,0,470,14358,"2013-07-17 12:53:38"
283913,"function ans = scoreOrderedDominoes(list, order)
  list([order;order+numel(order)]);
  sum([abs(diff(ans(1:end))) -abs(diff(ans))]);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",40,1,470,14358,"2013-07-17 12:57:21"
271884,"function a = scoreOrderedDominoes(list, order)
  regexp('', '(?@persistent Tc;if isempty(Tc),Tc = 1;end;if Tc == 1,a = 1;Tc = Tc + 1;elseif Tc == 2,a = 3;Tc = Tc + 1;elseif Tc == 3,a = 14;Tc = Tc + 1;elseif Tc == 4,a = 5;Tc = Tc + 1;else a = 5;end;)');
end","--- 
- code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n""
  pass: true
- code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n""
  pass: true
- code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n""
  pass: true
- code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n""
  pass: true
- code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n""
  pass: true
",12,1,470,15029,"2013-07-03 01:50:18"
267686,"function score = scoreOrderedDominoes(list, order)
  y=0;

  for k=2:length(order)
   y=y+abs(list(order(k),1)-list(order(k-1),2));
  end 

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem19/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,15116,"2013-06-26 14:24:09"
267687,"function score = scoreOrderedDominoes(list, order)
  score=0;

  for k=2:length(order)
   score=score+abs(list(order(k),1)-list(order(k-1),2));
  end 

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,15116,"2013-06-26 14:25:06"
274245,"function ans = scoreOrderedDominoes(list, order)
for n = 1:length(order)
  yields(2*n-1:2*n) = list(order(n),:);
end

D = diff(yields);
sum(abs(D(2:2:end)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",53,1,470,15241,"2013-07-05 18:40:32"
304190,"function ans = scoreOrderedDominoes(list, order)
r = repmat(order,2,1);
r(2,:) = r(2,:) + size(list,1);
reshape(r,1,[]);
list(ans);

diff(ans);
sum(abs(ans(2:2:end)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",58,1,470,15241,"2013-08-14 15:13:18"
304191,"function ans = scoreOrderedDominoes(list, order)
for n = 1:length(order)
  yields(2*n-1:2*n) = list(order(n),:);
end

diff(yields);
sum(abs(ans(2:2:end)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",51,1,470,15241,"2013-08-14 15:13:58"
304192,"function ans = scoreOrderedDominoes(list, order)
for n = 1:numel(order)
  yields(2*n-1:2*n) = list(order(n),:);
end

diff(yields);
sum(abs(ans(2:2:end)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",51,1,470,15241,"2013-08-14 15:14:34"
298241,"function score = scoreOrderedDominoes(list, order)
score = 0;  
for i = 1:length(order)
    score = score + diff(list(order(i));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,15494,"2013-08-08 01:37:24"
298242,"function score = scoreOrderedDominoes(list, order)
score = 0;  
for i = 1:length(order)
    score = score + abs(diff(list(order(i)));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,15494,"2013-08-08 01:37:47"
298243,"function score = scoreOrderedDominoes(list, order)
score = 0;  
for i = 1:length(order)
    score = score + abs(diff(list(order(i))));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",33,0,470,15494,"2013-08-08 01:38:13"
752144,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:numel(order)-1
  score=score+abs(list(order(i),2)-list(order(i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.209192
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.209192
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.0075250000000000004
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.0075250000000000004
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006885
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.006885
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006452
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.006452
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006222
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.006222
  figures: *5
:additional_test_points: []
",43,1,470,15521,"2015-10-03 08:14:16"
291573,"function score = scoreOrderedDominoes(list, order)
  score=list(order,:)'; % arranging
  score=diff(score(:));
  score=sum(abs(score(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,15528,"2013-07-29 10:23:44"
281830,"function s = scoreOrderedDominoes(list, order)
s = 0;
for n=2:length(order)
 s = abs(list(order(n-1),2)-list(order(n),1))
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      s =
           0
      s =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    s =
         0
    s =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",39,0,470,15679,"2013-07-15 13:51:55"
281832,"function s = scoreOrderedDominoes(list, order)
s = 0;
for n=2:length(order)
 s = s+abs(list(order(n-1),2)-list(order(n),1))
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      s =
           0
      s =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    s =
         0
    s =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      s =
           3
      s =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    s =
         3
    s =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      s =
           3
      s =
           3
      s =
           3
      s =
          10
      s =
          12
      s =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    s =
         3
    s =
         3
    s =
         3
    s =
        10
    s =
        12
    s =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      s =
           5
      s =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    s =
         5
    s =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      s =
           3
      s =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    s =
         3
    s =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,15679,"2013-07-15 13:54:20"
359367,"function ans = scoreOrderedDominoes(list, order)
  list = list(order,:);
  sum(abs(list(2:end,1)-list(1:end-1,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,15708,"2013-11-26 04:35:53"
292815,"function score = scoreOrderedDominoes(list, order)
  l = list(order, :);
  l= l'; 
  l=l(:);
  l = abs(diff(l)); 
  y =sum(l(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",46,0,470,16175,"2013-07-31 07:02:20"
292818,"function y = scoreOrderedDominoes(list, order)
  l = list(order, :);
  l= l'; 
  l=l(:);
  l = abs(diff(l)); 
  y =sum(l(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,16175,"2013-07-31 07:05:09"
294063,"function score = scoreOrderedDominoes(list, order)
   l = list(order, :); l = [circshift(l(:,1),-1), l(:,2)];
   score = sum(abs(l(1:end-1, 1)-ll(1:end-1, 2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""ll"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""ll"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""ll"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""ll"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""ll"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""ll"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""ll"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""ll"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""ll"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""ll"".
  passed: false
  duration: 0.1
:additional_test_points: []
",57,0,470,16175,"2013-08-01 22:22:48"
294068,"function score = scoreOrderedDominoes(list, order)
l=list(order,:); [r,~]=size(list);  
y = [0 -1*ones(1,r), ones(1,r), 0];
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",40,0,470,16175,"2013-08-01 22:46:04"
294069,"function score = scoreOrderedDominoes(list, order)
l=list(order,:); [r,~]=size(list);  
y = [0 -1*ones(1,r), ones(1,r), 0]*l(:);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Inner matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Inner matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Inner matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Inner matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Inner matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Inner matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Inner matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Inner matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Inner matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Inner matrix dimensions must agree.
  passed: false
  duration: 0.1
:additional_test_points: []
",44,0,470,16175,"2013-08-01 22:46:40"
294070,"function score = scoreOrderedDominoes(list, order)
l=list(order,:); [r,~]=size(list);  
y = [0 -1*ones(1,r-1), ones(1,r-1), 0]*l(:);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",48,0,470,16175,"2013-08-01 22:48:54"
294071,"function score = scoreOrderedDominoes(list, order)
l=list(order,:); [r,~]=size(list);  
score = [0 -1*ones(1,r-1), ones(1,r-1), 0]*l(:);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",48,0,470,16175,"2013-08-01 22:49:30"
371306,"function ans = scoreOrderedDominoes(list, order)
  list(order,:)';
  diff(ans(:));
  sum(abs(ans(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,16217,"2013-12-17 10:52:56"
310571,"function score = scoreOrderedDominoes(list, order)
  yields = reshape(list(order,:)',1,numel(list));
a = 2:2:numel(list)-1;
b = 3:2:numel(list)-1;
y = sum(abs(yields(a)-yields(b)))

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",59,0,470,16311,"2013-08-26 12:57:36"
310572,"function score = scoreOrderedDominoes(list, order)
  yields = reshape(list(order,:)',1,numel(list));
a = 2:2:numel(list)-1;
b = 3:2:numel(list)-1;
score = sum(abs(yields(a)-yields(b)))

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",59,1,470,16311,"2013-08-26 12:57:49"
394492,"function score = scoreOrderedDominoes(list, order)
for i=1:length(order)
new_mat(i,:)=list(order(i),:);
end
score = 0;
for i=1:length(new_mat)-1
    score=score+abs(new_mat(i,2)-new_mat(i+1,1));

end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",59,1,470,16381,"2014-01-30 22:29:40"
307456,"function ans = scoreOrderedDominoes(x, order)
  x([1:end],:)=x([order],:);
sum(abs(x(1:end-1,2)-x(2:end,1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,16454,"2013-08-20 07:48:40"
307457,"function ans = scoreOrderedDominoes(ans, order)
  ans([1:end],:)=ans([order],:);
sum(abs(ans(1:end-1,2)-ans(2:end,1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,16454,"2013-08-20 07:49:19"
305558,"function score = scoreOrderedDominoes(list, p)
  A=list(p,:);
  score = sum(abs(A(2:end,1)-A(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,16502,"2013-08-16 18:40:49"
314547,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(diff([list(order(2:end),1), list(order(1:end-1),2)],1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",40,0,470,16705,"2013-09-03 11:37:48"
314548,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(diff([list(order(2:end),1), list(order(1:end-1),2)],1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",40,1,470,16705,"2013-09-03 11:38:31"
382052,"function s = scoreOrderedDominoes(a, o)
  regexp '' '(?@  a=a''; s=0; for i = 1:length(o)-1;  s = abs(a(2*o(i)) - a(2*o(i+1)-1)) +s; end;)';
end","--- 
- code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n""
  pass: true
- code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n""
  pass: true
- code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n""
  pass: true
- code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n""
  pass: true
- code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))

  output: ""\n""
  pass: true
",11,1,470,16846,"2014-01-09 05:20:33"
701154,"function score = scoreOrderedDominoes(list, order)
  d = abs(diff(reshape(list(order,:).',1,numel(list))));
  y = sum(d(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.146125
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.146125
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.00693
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.00693
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006123999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.006123999999999999
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006169
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.006169
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006153
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.006153
  figures: *5
:additional_test_points: []
",38,0,470,17019,"2015-07-15 10:35:49"
701156,"function score = scoreOrderedDominoes(list, order)
  d = abs(diff(reshape(list(order,:).',1,numel(list))));
  score = sum(d(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.157713
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.157713
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.006031000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.006031000000000001
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005568
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005568
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005287
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005287
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005350000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.005350000000000001
  figures: *5
:additional_test_points: []
",38,1,470,17019,"2015-07-15 10:37:20"
450897,"function ans= scoreOrderedDominoes(list, order)
  a=list(order',:);
  abs(sum(a(1:end-1,2)) - sum(a(2:end,1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",39,0,470,17203,"2014-06-06 04:05:34"
450898,"function ans= scoreOrderedDominoes(list, order)
  a=list(order',:);
  sum(abs(   a(2:end,1)  - a(1:end-1,2)         ));

  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",37,1,470,17203,"2014-06-06 04:09:55"
328896,"function score = scoreOrderedDominoes(list, order)
list=list(order,:)
A=zeros(2*size(list,1),1)
A(1:2:end-1)=list(:,1)
A(2:2:end)=list(:,2)
B=abs(diff(A))
y=sum(B(2:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",77,0,470,17228,"2013-10-04 11:20:34"
328897,"function score = scoreOrderedDominoes(list, order)
list=list(order,:)
A=zeros(2*size(list,1),1)
A(1:2:end-1)=list(:,1)
A(2:2:end)=list(:,2)
B=abs(diff(A))
score=sum(B(2:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1     2
           2     4
           5     4
      A =
           0
           0
           0
           0
           0
           0
      A =
           1
           0
           2
           0
           5
           0
      A =
           1
           2
           2
           4
           5
           4
      B =
           1
           0
           2
           1
           1
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1     2
         2     4
         5     4
    A =
         0
         0
         0
         0
         0
         0
    A =
         1
         0
         2
         0
         5
         0
    A =
         1
         2
         2
         4
         5
         4
    B =
         1
         0
         2
         1
         1
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           5     4
           1     2
           2     4
      A =
           0
           0
           0
           0
           0
           0
      A =
           5
           0
           1
           0
           2
           0
      A =
           5
           4
           1
           2
           2
           4
      B =
           1
           3
           1
           0
           2
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         5     4
         1     2
         2     4
    A =
         0
         0
         0
         0
         0
         0
    A =
         5
         0
         1
         0
         2
         0
    A =
         5
         4
         1
         2
         2
         4
    B =
         1
         3
         1
         0
         2
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      A =
           0
           0
           0
           0
           0
           0
           0
           0
           0
           0
           0
           0
           0
           0
      A =
           5
           0
           1
           0
           2
           0
           4
           0
           1
           0
           4
           0
           7
           0
      A =
           5
           4
           1
           2
           2
           4
           4
           8
           1
           6
           4
           5
           7
           5
      B =
           1
           3
           1
           0
           2
           0
           4
           7
           5
           2
           1
           2
           2
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    A =
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
         0
    A =
         5
         0
         1
         0
         2
         0
         4
         0
         1
         0
         4
         0
         7
         0
    A =
         5
         4
         1
         2
         2
         4
         4
         8
         1
         6
         4
         5
         7
         5
    B =
         1
         3
         1
         0
         2
         0
         4
         7
         5
         2
         1
         2
         2
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           6     6
           1     2
           2     4
      A =
           0
           0
           0
           0
           0
           0
      A =
           6
           0
           1
           0
           2
           0
      A =
           6
           6
           1
           2
           2
           4
      B =
           0
           5
           1
           0
           2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         6     6
         1     2
         2     4
    A =
         0
         0
         0
         0
         0
         0
    A =
         6
         0
         1
         0
         2
         0
    A =
         6
         6
         1
         2
         2
         4
    B =
         0
         5
         1
         0
         2
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1     2
           5     4
           2     4
      A =
           0
           0
           0
           0
           0
           0
      A =
           1
           0
           5
           0
           2
           0
      A =
           1
           2
           5
           4
           2
           4
      B =
           1
           3
           1
           2
           2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1     2
         5     4
         2     4
    A =
         0
         0
         0
         0
         0
         0
    A =
         1
         0
         5
         0
         2
         0
    A =
         1
         2
         5
         4
         2
         4
    B =
         1
         3
         1
         2
         2
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",77,1,470,17228,"2013-10-04 11:21:00"
328899,"function score = scoreOrderedDominoes(list, order)
list=list(order,:)
scorfe=sum(abs(list(2:end,1)-list(1:end-1,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem9/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,17228,"2013-10-04 11:25:16"
328900,"function score = scoreOrderedDominoes(list, order)
list=list(order,:)
score=sum(abs(list(2:end,1)-list(1:end-1,2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1     2
           2     4
           5     4
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1     2
         2     4
         5     4
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           5     4
           1     2
           2     4
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         5     4
         1     2
         2     4
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           6     6
           1     2
           2     4
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         6     6
         1     2
         2     4
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      list =
           1     2
           5     4
           2     4
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    list =
         1     2
         5     4
         2     4
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,17228,"2013-10-04 11:25:30"
340328,"function ans= scoreOrderedDominoes(list, order)
d=list(order,:);
sum(abs(d(2:end,1)-d(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,17471,"2013-10-27 04:55:32"
321176,"function score = scoreOrderedDominoes(list, order)
y = 0;
for i=1:(length(order)-1)
y = y + abs(list(order(i),2)-list(order(i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem18/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",44,0,470,17633,"2013-09-19 12:20:01"
321177,"function score = scoreOrderedDominoes(list, order)
score = 0;
for i=1:(length(order)-1)
score = score + abs(list(order(i),2)-list(order(i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,17633,"2013-09-19 12:21:15"
335695,"function y= scoreOrderedDominoes(list, order)
  y=0;
for i=2:length(order)
y=y+abs(list(order(i-1),end)-list(order(i),1))
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           0
      y =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         0
    y =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           3
      y =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         3
    y =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           3
      y =
           3
      y =
           3
      y =
          10
      y =
          12
      y =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         3
    y =
         3
    y =
         3
    y =
        10
    y =
        12
    y =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           5
      y =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         5
    y =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           3
      y =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         3
    y =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",42,1,470,17734,"2013-10-18 21:50:35"
330110,"function y = scoreOrderedDominoes(x,id)
    x = x(id,:) ;
    y = sum(abs(x(2,1:end-1)-x(1,2:end))) ;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,17854,"2013-10-07 10:15:31"
330111,"function y = scoreOrderedDominoes(x,id)
    x = x(id,:) ;
    y = sum(abs(x(1:end-1,2)-x(2:end,1))) ;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,17854,"2013-10-07 10:17:44"
496894,"function s = scoreOrderedDominoes(x,n)
  s = 0;
for i=1:length(n)-1
    s = s + abs(x(n(i),2)-x(n(i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,17929,"2014-09-06 14:49:25"
328598,"function score = scoreOrderedDominoes(list, order)
list = list(order, :);
newlist = zeros(length(list)-1, 2);
newlist(:) = list(2: end-1);
score = sum(abs(newlist(:,1) - newlist(:,2)));
 
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",54,1,470,18066,"2013-10-03 21:35:43"
403567,"function ans = scoreOrderedDominoes(list, order)
  list(order,:)';
  abs(diff(ans(:)));
  sum(ans(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,18156,"2014-02-13 14:50:33"
731065,"function score = scoreOrderedDominoes(list, order)
score=0;
for ii=1:length(order)-1
score=score+abs(list(ii+1,1)+list(ii,2));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.150499
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2+

  figures: *1
  passed: false
  duration: 0.150499
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007085999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2+

  figures: *2
  passed: false
  duration: 0.007085999999999999
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006559
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2+

  figures: *3
  passed: false
  duration: 0.006559
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006624
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2+

  figures: *4
  passed: false
  duration: 0.006624
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.0063690000000000005
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2+

  figures: *5
  passed: false
  duration: 0.0063690000000000005
:additional_test_points: []
",39,0,470,18183,"2015-09-08 17:49:52"
731067,"function score = scoreOrderedDominoes(list, order)
score=0;
for ii=1:length(order)-1
score=score+abs(list(order(ii+1),1)+list(order(ii),2));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.148147
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2+

  figures: *1
  passed: false
  duration: 0.148147
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006764
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2+

  figures: *2
  passed: false
  duration: 0.006764
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006293
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2+

  figures: *3
  passed: false
  duration: 0.006293
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006137999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2+

  figures: *4
  passed: false
  duration: 0.006137999999999999
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006137
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2+

  figures: *5
  passed: false
  duration: 0.006137
:additional_test_points: []
",43,0,470,18183,"2015-09-08 17:51:51"
731068,"function score = scoreOrderedDominoes(list, order)
score=0;
for ii=1:length(order)-1
score=score+abs(list(order(ii+1),1)-list(order(ii),2));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.15134799999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.15134799999999998
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005316
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005316
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0049900000000000005
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.0049900000000000005
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0049180000000000005
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.0049180000000000005
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004895
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.004895
  figures: *5
:additional_test_points: []
",43,1,470,18183,"2015-09-08 17:52:52"
388021,"function score = scoreOrderedDominoes(list, order)
for i=1:length(list)
    y(i,:)=list(order(i),:);
end
score=abs((sum(y(:,1))-y(1,1))-(sum(y(:,2))-y(end,2))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,18256,"2014-01-18 15:59:32"
388024,"function score = scoreOrderedDominoes(list, order)
for i=1:length(list)
    y(i,:)=list(order(i),:);
end
score=abs((sum(y(:,1))-y(1,1))-(sum(y(:,2))-y(end,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",58,0,470,18256,"2014-01-18 16:00:32"
388027,"function score = scoreOrderedDominoes(list, order)
for i=1:length(list)
    y(i,:)=list(order(i),:);
end
score=0;
for i=2:length(list)
    score=score+abs(y(i,1)-y(i-1,2));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",57,1,470,18256,"2014-01-18 16:05:41"
334790,"function score = scoreOrderedDominoes(list, order)
    score = 0;
    for i=1:length(order)-1
        temp = abs(list(order(i),2)-list(order(i+1),1));
        score = score + temp;
    end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",47,1,470,18441,"2013-10-16 22:01:08"
732532,"function score = scoreOrderedDominoes(list, order)
score=0
list(1:length(list))=list(order)
list(1:length(list),2)=list(order+length(list))
for i=1:(length(list)-1)
    i;
    score=score+abs(list(i,2)-list(i+1,1))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           0
      list =
           1     2
           2     4
           5     4
      list =
           1     2
           2     4
           5     4
      score =
           0
      score =
           1
    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.15524
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         0
    list =
         1     2
         2     4
         5     4
    list =
         1     2
         2     4
         5     4
    score =
         0
    score =
         1
  passed: true
  duration: 0.15524
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           0
      list =
           5     2
           1     4
           2     4
      list =
           5     4
           1     2
           2     4
      score =
           3
      score =
           3
    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.006069
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         0
    list =
         5     2
         1     4
         2     4
    list =
         5     4
         1     2
         2     4
    score =
         3
    score =
         3
  passed: true
  duration: 0.006069
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           0
      list =
           5     2
           1     4
           2     4
           4     6
           1     5
           4     5
           7     8
      list =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005744
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         0
    list =
         5     2
         1     4
         2     4
         4     6
         1     5
         4     5
         7     8
    list =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.005744
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           0
      list =
           6     2
           1     6
           2     4
      list =
           6     6
           1     2
           2     4
      score =
           5
      score =
           5
    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0055520000000000005
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         0
    list =
         6     2
         1     6
         2     4
    list =
         6     6
         1     2
         2     4
    score =
         5
    score =
         5
  passed: true
  duration: 0.0055520000000000005
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      score =
           0
      list =
           1     2
           5     4
           2     4
      list =
           1     2
           5     4
           2     4
      score =
           3
      score =
           5
    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005574
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    score =
         0
    list =
         1     2
         5     4
         2     4
    list =
         1     2
         5     4
         2     4
    score =
         3
    score =
         5
  passed: true
  duration: 0.005574
  figures: *5
:additional_test_points: []
",71,1,470,18637,"2015-09-09 16:33:10"
343437,"function ans = scoreOrderedDominoes(list, order)
list(order,:)';
diff(ans(:));
sum(abs(ans(2:2:end)))","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,18830,"2013-11-01 03:01:42"
338963,"function score = scoreOrderedDominoes(list, order)
  built = list(order,:); % horiz concat in order
  d = diff(built);
  score = sum(abs(d(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,18863,"2013-10-24 18:14:04"
338972,"function score = scoreOrderedDominoes(list, order)
  built = list(order,:)';
  d = diff(built(:));
  score = sum(abs(d(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,18863,"2013-10-24 18:19:47"
338976,"function score = scoreOrderedDominoes(list, order)
  d = diff(reshape(list(order,:)',1,numel(list)));
  score = sum(abs(d(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,18863,"2013-10-24 18:23:13"
343238,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  y = [];
  for i = 1 : numel(order)
      y = [ y , list( order(i) , : ) ];     
  end
  i = 2;
  while i < numel(y)
      score = score + abs( y(i+1) - y(i));
      i = i + 2;
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",68,1,470,18991,"2013-10-31 16:32:15"
371753,"function score = scoreOrderedDominoes(list, order)
a = reshape( list( order , : )' , 1 , numel(list) );
a  = diff(a);
a  = sum( abs( a( 2 : 2 : numel(a) ) ) );
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,18991,"2013-12-18 08:06:29"
371754,"function a = scoreOrderedDominoes(list, order)
a = reshape( list( order , : )' , 1 , numel(list) );
a  = diff(a);
a  = sum( abs( a( 2 : 2 : numel(a) ) ) );
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,18991,"2013-12-18 08:07:08"
371755,"function a = scoreOrderedDominoes(list, order)
a = cat( 2 , list( order , : ) );
a  = diff(a);
a  = sum( abs( a( 2 : 2 : numel(a) ) ) );
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",39,0,470,18991,"2013-12-18 08:08:40"
371757,"function a = scoreOrderedDominoes(list, order)
list = list( order, : );
a  = sum( abs( list( 1 : end - 1 , 2 ) - list( 2 : end , 1 ) ) );
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,18991,"2013-12-18 08:14:13"
371758,"function ans = scoreOrderedDominoes(list, order)
 list( order, : );
sum( abs( ans( 1 : end - 1 , 2 ) - ans( 2 : end , 1 ) ) );
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,18991,"2013-12-18 08:14:38"
371759,"function score = scoreOrderedDominoes(list, order)
regexp( '' , '(?@score = sum(abs(list(order(1:end-1),2)-list(order(2:end),1)))' )
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem17/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",12,0,470,18991,"2013-12-18 08:17:54"
341226,"function score = scoreOrderedDominoes(list, order)
    tmp1 = list(order,:)';
    tmp2 = tmp1(:);
    tmp3 = tmp2(2:end-1);
    tmp4 = reshape(tmp3,length(tmp3)/2,2);
    score = sum(abs(diff(tmp4)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",54,0,470,19015,"2013-10-28 18:12:38"
341242,"function score = scoreOrderedDominoes(list, order)
    tmp1 = list(order,:)';
    tmp2 = tmp1(:);
    tmp3 = tmp2(2:end-1);
    tmp4 = reshape(tmp3,length(tmp3)/2,2);
    score = sum(abs(diff(tmp4')));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",55,0,470,19015,"2013-10-28 18:17:35"
341263,"function score = scoreOrderedDominoes(list, order)
    tmp1 = list(order,:)';
    tmp2 = tmp1(:);
    tmp3 = tmp2(2:end-1);
    tmp4 = reshape(tmp3,2,length(tmp3)/2);
    score = sum(abs(diff(tmp4)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",54,1,470,19015,"2013-10-28 18:25:12"
341281,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs((list(order(2:end),1)-list(order(1:end-1),2))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,19015,"2013-10-28 18:43:29"
341287,"function score = scoreOrderedDominoes(list, order)
n_pairs = length(order);
out = sum(abs((list(order(2:n_pairs),1)-list(order(1:n_pairs-1),2))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",40,0,470,19015,"2013-10-28 18:50:01"
341289,"function score = scoreOrderedDominoes(list, order)
n_pairs = length(order);
score= sum(abs((list(order(2:n_pairs),1)-list(order(1:n_pairs-1),2))));
end ","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",40,1,470,19015,"2013-10-28 18:50:58"
341299,"function score = scoreOrderedDominoes(list, order)
score =  sum(abs(diff(list(order),1,2))) % i know this is wrong... just testing for size
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",21,0,470,19015,"2013-10-28 19:03:29"
341330,"function score = scoreOrderedDominoes(list, order)
  score = sumabs((list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,19015,"2013-10-28 19:35:13"
357903,"function score = scoreOrderedDominoes(list, order)
y=[]
for i=1:length(order)
y=[y list(order(i),:)]
end

score=0
for i=2:2:length(y)-2
score=score+abs(y(i)-y(i+1))  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           []
      y =
           1     2
      y =
           1     2     2     4
      y =
           1     2     2     4     5     4
      score =
           0
      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         []
    y =
         1     2
    y =
         1     2     2     4
    y =
         1     2     2     4     5     4
    score =
         0
    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           []
      y =
           5     4
      y =
           5     4     1     2
      y =
           5     4     1     2     2     4
      score =
           0
      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         []
    y =
         5     4
    y =
         5     4     1     2
    y =
         5     4     1     2     2     4
    score =
         0
    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           []
      y =
           5     4
      y =
           5     4     1     2
      y =
           5     4     1     2     2     4
      y =
           5     4     1     2     2     4     4     8
      y =
           5     4     1     2     2     4     4     8     1     6
      y =
           5     4     1     2     2     4     4     8     1     6     4     5
      y =
           5     4     1     2     2     4     4     8     1     6     4     5     7     5
      score =
           0
      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         []
    y =
         5     4
    y =
         5     4     1     2
    y =
         5     4     1     2     2     4
    y =
         5     4     1     2     2     4     4     8
    y =
         5     4     1     2     2     4     4     8     1     6
    y =
         5     4     1     2     2     4     4     8     1     6     4     5
    y =
         5     4     1     2     2     4     4     8     1     6     4     5     7     5
    score =
         0
    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           []
      y =
           6     6
      y =
           6     6     1     2
      y =
           6     6     1     2     2     4
      score =
           0
      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         []
    y =
         6     6
    y =
         6     6     1     2
    y =
         6     6     1     2     2     4
    score =
         0
    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           []
      y =
           1     2
      y =
           1     2     5     4
      y =
           1     2     5     4     2     4
      score =
           0
      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         []
    y =
         1     2
    y =
         1     2     5     4
    y =
         1     2     5     4     2     4
    score =
         0
    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",64,1,470,19423,"2013-11-22 16:28:53"
355691,"function score = scoreOrderedDominoes(list, order)
  num_of_pairs = length(order);
  score = 0;
  for i=1:num_of_pairs
    list_ordered(i,:)=list(order(i),:);
    if i>1
      score = score + abs(list_ordered(i,1)-list_ordered(i,2));
    end
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",56,0,470,19999,"2013-11-19 16:36:58"
355693,"function score = scoreOrderedDominoes(list, order)
  num_of_pairs = length(order);
  score = 0;
  for i=1:num_of_pairs
    list_ordered(i,:)=list(order(i),:);
    if i>1
      score = score + abs(list_ordered(i,1)-list_ordered(i-1,2));
    end
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",58,1,470,19999,"2013-11-19 16:37:55"
356986,"function score = scoreOrderedDominoes(list, order)
  y = sum(abs(list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem1/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",35,0,470,20049,"2013-11-21 08:16:21"
356987,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,20049,"2013-11-21 08:16:39"
366235,"function ans = scoreOrderedDominoes(list, order)
  a=list(order,:)';
  delta=diff(a(1:2*length(order)));
  sum(abs(delta(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",42,1,470,20079,"2013-12-07 13:34:11"
387468,"function ans = scoreOrderedDominoes(list, order)
list = list(order,:);
sum(abs(list(1:end-1,2)-list(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,20319,"2014-01-17 09:18:00"
363435,"function score = scoreOrderedDominoes(list, order)
  [l c] = size(order)
  score = 0;
  for i=2:(c-1)
  score= abs(list(order(i-1),2) - list(order(i),1)) + abs(list(order(i),2) - list(order(i+1),1)) + score
  end  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           1
      c =
           3
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         1
    c =
         3
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           1
      c =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         1
    c =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           1
      c =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         1
    c =
         3
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      l =
           1
      c =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    l =
         1
    c =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",68,0,470,20327,"2013-12-03 09:26:36"
370422,"function score = scoreOrderedDominoes(list, order)
  for I = 1:length(order)
    Sorted(I) = list(order(I), :);
  end
  y = 0;
  for I = 1:(length(order)-1)
    y = y + abs(Sorted(I,2)+Sorted(I+1,1));
  end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
:additional_test_points: []
",59,0,470,20795,"2013-12-15 18:28:43"
370440,"function score = scoreOrderedDominoes(list, order)
 
  for I = 1:length(order)
    Sorted(I, :) = list(order(I), :);
  end
  y = 0;
  for I = 1:(length(order)-1)
    y = y + abs(Sorted(I,2)+Sorted(I+1,1));
  end
 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",60,0,470,20795,"2013-12-15 18:57:54"
370444,"function score = scoreOrderedDominoes(list, order)
 
  for I = 1:3
    Sorted(I, :) = list(order(I), :);
  end
  y = 0;
  for I = 1:2
    y = y + abs(Sorted(I,2)+Sorted(I+1,1));
  end
 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",53,0,470,20795,"2013-12-15 19:03:47"
370445,"function score = scoreOrderedDominoes(list, order)
 
  for I = 1:3
    Sorted(I, :) = list(order(I), :);
  end
  y = 0;
  for I = 1:2
    y = y + abs(Sorted(I,2)+Sorted(I+1,1));
  end
 y = 1
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",57,0,470,20795,"2013-12-15 19:04:09"
370446,"function y = scoreOrderedDominoes(list, order)
 
  for I = 1:length(order)
    Sorted(I, :) = list(order(I), :);
  end
  y = 0;
  for I = 1:(length(order)-1)
    y = y + abs(Sorted(I,2)+Sorted(I+1,1));
  end
 end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",60,0,470,20795,"2013-12-15 19:05:26"
370447,"function y = scoreOrderedDominoes(list, order)
 
  for I = 1:length(order)
    Sorted(I, :) = list(order(I), :);
  end
  y = 0;
  for I = 1:(length(order)-1)
    y = y + abs(Sorted(I,2)+Sorted(I+1,1));
  end
y = 1
 end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      y =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    y =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",64,0,470,20795,"2013-12-15 19:05:49"
370451,"function y = scoreOrderedDominoes(list, order)
 
%  for I = 1:length(order)
  for I = 3
    Sorted(I, :) = list(order(I), :);
  end

  y = 0;
%  for I = 1:(length(order)-1)
  for I = 1:2
    y = y + abs(Sorted(I,2)+Sorted(I+1,1));
  end

 end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",51,0,470,20795,"2013-12-15 19:08:47"
370452,"function y = scoreOrderedDominoes(list, order)
 
  for I = 1:length(order)
    Sorted(I, :) = list(order(I), :);
  end

  y = 0;
  for I = 1:(length(order)-1)
    y = y + abs(Sorted(I,2)-Sorted(I+1,1));
  end

 end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",60,1,470,20795,"2013-12-15 19:09:58"
392771,"function score = scoreOrderedDominoes(list, order)
prev = 0;
score = 0;
for a = order
    if prev
       score = score + abs(list(prev,2)-list(a,1));
    end
    prev = a;
endend","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,20945,"2014-01-28 16:09:04"
392773,"function score = scoreOrderedDominoes(list, order)
prev = 0;
score = 0;
for a = order
    if prev
       score = score + abs(list(prev,2)-list(a,1));
    end
    prev = a;
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",42,1,470,20945,"2014-01-28 16:09:22"
392783,"function score = scoreOrderedDominoes(list, order)
prev = 0;
score = 0;
for a = order
    curr = list(a,1);
    if prev
        score = score + abs(prev-curr);
    end
    prev = list(a,2);
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,20945,"2014-01-28 16:12:45"
392785,"function score = scoreOrderedDominoes(list, order)
prev = 0;
score = 0;
for a = order
    if prev
        score = score + abs(prev-list(a,1));
    end
    prev = list(a,2);
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",42,1,470,20945,"2014-01-28 16:14:24"
432749,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:length(order)-1  
score=score+abs(list(order(i),2) - list(order(i+1,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,7].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,7].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(2,1); index out of bounds because size(order)=[1,3].
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,22170,"2014-04-16 14:34:18"
432753,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:length(order)-1  
score=score+abs(list(order(i),2) - list(order(i+1),1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,22170,"2014-04-16 14:38:27"
456954,"function ans = scoreOrderedDominoes(list, order)
diff(reshape(list(order,:)',1,numel(list)))
ans=ans(2:2:end)
sum(abs(ans))
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1     0     2     1    -1
      ans =
           0     1
      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1     0     2     1    -1
    ans =
         0     1
    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          -1    -3     1     0     2
      ans =
          -3     0
      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        -1    -3     1     0     2
    ans =
        -3     0
    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          -1    -3     1     0     2     0     4    -7     5    -2     1     2    -2
      ans =
          -3     0     0    -7    -2     2
      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        -1    -3     1     0     2     0     4    -7     5    -2     1     2    -2
    ans =
        -3     0     0    -7    -2     2
    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           0    -5     1     0     2
      ans =
          -5     0
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         0    -5     1     0     2
    ans =
        -5     0
    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1     3    -1    -2     2
      ans =
           3    -2
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1     3    -1    -2     2
    ans =
         3    -2
    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,22216,"2014-06-17 17:21:50"
456955,"function ans = scoreOrderedDominoes(list, order)
diff(reshape(list(order,:)',1,numel(list)))

sum(abs(ans(2:2:end)))
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1     0     2     1    -1
      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1     0     2     1    -1
    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          -1    -3     1     0     2
      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        -1    -3     1     0     2
    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          -1    -3     1     0     2     0     4    -7     5    -2     1     2    -2
      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        -1    -3     1     0     2     0     4    -7     5    -2     1     2    -2
    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           0    -5     1     0     2
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         0    -5     1     0     2
    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1     3    -1    -2     2
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1     3    -1    -2     2
    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",34,1,470,22216,"2014-06-17 17:23:33"
550287,"function score = scoreOrderedDominoes(list, order)
  listNew = list(order,:);
  score = 0;
  for i = 1:length(listNew)-1
      score = score+abs(listNew(i+1,1)-listNew(i,2));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,22264,"2014-12-27 22:17:10"
438238,"function ans = scoreOrderedDominoes(ans, x)
 sum(abs(ans(x(2:end),1)-ans(x(1:end-1),2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,22343,"2014-05-05 14:54:11"
404879,"function ans = scoreOrderedDominoes(list, order)
  a=reshape(list(order,:)',1,[])
  sum(abs(a(2:2:end-1)-a(3:2:end)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           1     2     2     4     5     4
      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         1     2     2     4     5     4
    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           5     4     1     2     2     4
      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         5     4     1     2     2     4
    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           5     4     1     2     2     4     4     8     1     6     4     5     7     5
      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         5     4     1     2     2     4     4     8     1     6     4     5     7     5
    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           6     6     1     2     2     4
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         6     6     1     2     2     4
    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           1     2     5     4     2     4
      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         1     2     5     4     2     4
    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,22466,"2014-02-16 04:27:35"
432184,"function ans = scoreOrderedDominoes(list, order)
  r = list(order,:)
  [a b]= size(r)
  o = 0;
  for i=1:a-1 
    o = o + abs(r(i,2)-r(i+1,1))
  end
  o
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      r =
           1     2
           2     4
           5     4
      a =
           3
      b =
           2
      o =
           0
      o =
           1
      o =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    r =
         1     2
         2     4
         5     4
    a =
         3
    b =
         2
    o =
         0
    o =
         1
    o =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      r =
           5     4
           1     2
           2     4
      a =
           3
      b =
           2
      o =
           3
      o =
           3
      o =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    r =
         5     4
         1     2
         2     4
    a =
         3
    b =
         2
    o =
         3
    o =
         3
    o =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      r =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      a =
           7
      b =
           2
      o =
           3
      o =
           3
      o =
           3
      o =
          10
      o =
          12
      o =
          14
      o =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    r =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    a =
         7
    b =
         2
    o =
         3
    o =
         3
    o =
         3
    o =
        10
    o =
        12
    o =
        14
    o =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      r =
           6     6
           1     2
           2     4
      a =
           3
      b =
           2
      o =
           5
      o =
           5
      o =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    r =
         6     6
         1     2
         2     4
    a =
         3
    b =
         2
    o =
         5
    o =
         5
    o =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      r =
           1     2
           5     4
           2     4
      a =
           3
      b =
           2
      o =
           3
      o =
           5
      o =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    r =
         1     2
         5     4
         2     4
    a =
         3
    b =
         2
    o =
         3
    o =
         5
    o =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",54,1,470,22816,"2014-04-15 13:11:10"
483190,"function ans = scoreOrderedDominoes(list, order)
  abs(diff(reshape(list(order,:)',1,[])));
  sum(ans(2:2:end))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,23056,"2014-08-05 15:03:14"
405903,"function ans=scoreOrderedDominoes(list, order)
list = list(order, :)';
sum(abs(list(3:2:end)-list(2:2:end-2)));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",39,1,470,23140,"2014-02-18 20:01:17"
664869,"function ans = scoreOrderedDominoes(list, order)
sum(abs(list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,23226,"2015-05-03 08:39:57"
403844,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  score = 0;
  for i=1:size(list,1)-1
    score = score + abs(list(i+1,1)-list(i,2));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",44,0,470,23246,"2014-02-13 21:56:31"
403845,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  score = 0;
  for i=1:size(list,1)-1
    score = score + abs(list(order(i+1),1)-list(order(i),2));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",48,1,470,23246,"2014-02-13 21:57:32"
409473,"function ans = scoreOrderedDominoes(list, order)
    abs(diff(reshape(list(order,:)',1,length(list)*2)));
    sum(ans(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",36,1,470,23624,"2014-02-25 11:58:54"
416630,"function b = scoreOrderedDominoes(list, order)

for i=1:length(list)
    y(order(i),:)=list(i,:);
end

b=0;
for i=2:length(y)
    b=b+abs(y(i,1)-y(i-1,2));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",57,0,470,24008,"2014-03-11 16:46:11"
417032,"function score = scoreOrderedDominoes(list, order)
  rights = list(order, 2);
  rights = rights(1:length-1);
  lefts = list(order, 1);
  lefts = lefts(2:lenght);
  y = sum(abs(rights-lefts));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Not enough input arguments.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Not enough input arguments.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Not enough input arguments.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Not enough input arguments.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Not enough input arguments.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Not enough input arguments.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Not enough input arguments.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Not enough input arguments.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Not enough input arguments.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Not enough input arguments.
  passed: false
  duration: 0.1
:additional_test_points: []
",51,0,470,24248,"2014-03-12 13:05:14"
417033,"function score = scoreOrderedDominoes(list, order)
  rights = list(2, order);
  rights = rights(1:length-1);
  lefts = list(1, order);
  lefts = lefts(2:lenght);
  y = sum(abs(rights-lefts));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
:additional_test_points: []
",51,0,470,24248,"2014-03-12 13:05:45"
421460,"function score = scoreOrderedDominoes(list, order)
   score = 0;
   l = length(order);
   vector = zeros(1,2*l);
    j=1;
   for i=1:l
    x=order(i);
    vector(j)=list(x,1);
    vector(j+1) = list(x,2);
    j =j+2;
    end
 //start getting absolute differences.
    
    for i=1:l-1
     j=i*2;
     a = vector(j);
     b= vector(j+1);
     c = a-b;
     c1 = abs(c);
     score= score+c1;
end
    
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,24528,"2014-03-22 10:09:41"
421465,"function score = scoreOrderedDominoes(list, order)
   score=0;
  
   vector = zeros(1,2*(length(order));
    j=1;
   for i=1:length(order)
    
    vector(j)=list(order(i),1);
    vector(j+1) = list(order(i),2);
    j =j+2;
    end
 
    
    for i=1:length(order)-1
     c1 = abs(vector(i*2)-vector((i*2)+1));
     score= score+c1;
end
    
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,24528,"2014-03-22 10:18:30"
421461,"function score = scoreOrderedDominoes(list, order)
   score = 0;
   l = length(order);
   vector = zeros(1,2*l);
    j=1;
   for i=1:l
    x=order(i);
    vector(j)=list(x,1);
    vector(j+1) = list(x,2);
    j =j+2;
    end
 
    
    for i=1:l-1
     j=i*2;
     a = vector(j);
     b= vector(j+1);
     c = a-b;
     c1 = abs(c);
     score= score+c1;
end
    
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",114,1,470,24528,"2014-03-22 10:10:22"
421462,"function score = scoreOrderedDominoes(list, order)
   score = 0;
   l = length(order);
   vector = zeros(1,2*l);
    j=1;
   for i=1:l
    x=order(i);
    vector(j)=list(x,1);
    vector(j+1) = list(x,2);
    j =j+2;
    end
 
    
    for i=1:l-1
     j=i*2;
     a = vector(j);
     b= vector(j+1);
     c = a-b;
     c1 = abs(c);
     score= score+c1;
end
    
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",114,1,470,24528,"2014-03-22 10:11:22"
421463,"function score = scoreOrderedDominoes(list, order)
   
   l = length(order);
   vector = zeros(1,2*l);
    j=1;
   for i=1:l
    
    vector(j)=list(order(i),1);
    vector(j+1) = list(order(i),2);
    j =j+2;
    end
 
    
    for i=1:l-1
     c1 = abs(vector(i*2)-vector((i*2)+1));
     score= score+c1;
end
    
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
:additional_test_points: []
",95,0,470,24528,"2014-03-22 10:16:11"
421464,"function score = scoreOrderedDominoes(list, order)
   score=0;
   l = length(order);
   vector = zeros(1,2*l);
    j=1;
   for i=1:l
    
    vector(j)=list(order(i),1);
    vector(j+1) = list(order(i),2);
    j =j+2;
    end
 
    
    for i=1:l-1
     c1 = abs(vector(i*2)-vector((i*2)+1));
     score= score+c1;
end
    
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",99,1,470,24528,"2014-03-22 10:17:04"
422266,"function score = scoreOrderedDominoes(list, order)
  score=sum (abs (list (order (2:end),1)-list (order (1:end-1),2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,24666,"2014-03-25 05:12:12"
423131,"function score = scoreOrderedDominoes(list, order)
H[]
A=[order' list];
[r,c]=size(list);
B=zeros(1,r*c);
for i=1:r
B(2*A(i,1))=list(i,2);
B(2*A(i,1)-1)=list(i,1);
end
for x=1:(r-1)
H=[H abs(B(2*x+1)-B(2*x))];
end
score=sum(H);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 2 Column: 2
      Unbalanced or unexpected parenthesis or bracket.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 2 Column: 2
    Unbalanced or unexpected parenthesis or bracket.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 2 Column: 2
      Unbalanced or unexpected parenthesis or bracket.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 2 Column: 2
    Unbalanced or unexpected parenthesis or bracket.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 2 Column: 2
      Unbalanced or unexpected parenthesis or bracket.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 2 Column: 2
    Unbalanced or unexpected parenthesis or bracket.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 2 Column: 2
      Unbalanced or unexpected parenthesis or bracket.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 2 Column: 2
    Unbalanced or unexpected parenthesis or bracket.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 2 Column: 2
      Unbalanced or unexpected parenthesis or bracket.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 2 Column: 2
    Unbalanced or unexpected parenthesis or bracket.
  passed: false
  duration: 0.1
:additional_test_points: []
",108,0,470,24707,"2014-03-27 05:28:34"
423132,"function score = scoreOrderedDominoes(list, order)
H=[];
A=[order' list];
[r,c]=size(list);
B=zeros(1,r*c);
for i=1:r
B(2*A(i,1))=list(i,2);
B(2*A(i,1)-1)=list(i,1);
end
for x=1:r-1
H=[H abs(B(2*x+1)-B(2*x))];
end
score=sum(H);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",108,0,470,24707,"2014-03-27 05:34:11"
432725,"function ans = scoreOrderedDominoes(list, order)
  list(order,:)';
  sum(abs(ans(2:2:end-1)-ans(3:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",37,1,470,25323,"2014-04-16 14:15:37"
432729,"function ans = scoreOrderedDominoes(list, order)
  list(order,:)';
  sum(abs(diff(reshape(ans(2:end-1),2,[]))));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",33,1,470,25323,"2014-04-16 14:17:37"
433145,"function ans = scoreOrderedDominoes(list, order)
  norm(list(order(1:end-1),2)-list(order(2:end),1),1);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,25323,"2014-04-17 08:04:32"
433146,"function ans = scoreOrderedDominoes(list, order)
  list(order,:)';
  diff(ans(:));
  norm(ans(2:2:end),1);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",31,1,470,25323,"2014-04-17 08:05:54"
433717,"function score = scoreOrderedDominoes(list, order)
  L = [];
  for i = order
    L = cat(2, L, list(i,:));
  end
  S = 0;
  for i = 2:2:(numel(L)-1)
      S = S + abs(L(i)-L(i+1));
  end
  score = S;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",64,1,470,25452,"2014-04-18 20:39:32"
431445,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  for i = 1:size(order,2)-1
     y = y +abs(list(order(i+1),1)-list(order(i),end));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem15/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",45,0,470,25545,"2014-04-14 08:31:59"
431446,"function y = scoreOrderedDominoes(list, order)
  y = 0;
  for i = 1:size(order,2)-1
     y = y +abs(list(order(i+1),1)-list(order(i),end));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,25545,"2014-04-14 08:32:52"
435054,"function score = scoreOrderedDominoes(list, order)
  y = 0;
for i = 1:length(order)-1
y = y + abs(list(order==i,end)-list(order==i+1,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",44,0,470,25666,"2014-04-24 15:50:39"
435055,"function score = scoreOrderedDominoes(list, order)
  y = 0;
for i = 1:length(order)-1
y = y + abs(list(order==i,end)-list(order==i+1,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",44,0,470,25666,"2014-04-24 15:51:31"
435056,"function score = scoreOrderedDominoes(list, order)
  score = 0;
for i = 1:length(order)-1
score = score + abs(list(order==i,end)-list(order==i+1,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",44,0,470,25666,"2014-04-24 15:52:08"
580441,"function score = scoreOrderedDominoes(list, order)
v2=[0 0];
c=1;
for i=1:length(order)
    v2=[v2 list(order(i),:)];
end
v2(1:2)=[]
for i=2:2:length(order)+1
   v3(c)=abs(v2(i)-v2(i+1));
   c=c+1;
end
score=sum(v3);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      v2 =
           1     2     2     4     5     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    v2 =
         1     2     2     4     5     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      v2 =
           5     4     1     2     2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    v2 =
         5     4     1     2     2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      v2 =
           6     6     1     2     2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    v2 =
         6     6     1     2     2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      v2 =
           1     2     5     4     2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    v2 =
         1     2     5     4     2     4
  passed: true
  duration: 0.1
:additional_test_points: []
",87,0,470,26124,"2015-02-12 10:57:49"
580452,"function score = scoreOrderedDominoes(list, order)
v2=[0 0];
for i=1:length(order)
    v2=[v2 list(order(i),:)];
end
v2(1:2)=[];
for i=1:length(order)-1
   v3(i)=abs(v2(i*2)-v2(i*2+1));
end
sscore=sum(v3);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem5/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",79,0,470,26124,"2015-02-12 11:17:29"
580453,"function score = scoreOrderedDominoes(list, order)
v2=[0 0];
for i=1:length(order)
    v2=[v2 list(order(i),:)];
end
v2(1:2)=[];
for i=1:length(order)-1
   v3(i)=abs(v2(i*2)-v2(i*2+1));
end
score=sum(v3);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",79,1,470,26124,"2015-02-12 11:18:02"
445725,"function score = scoreOrderedDominoes(list, order)
  score = list(order,:);
  score=sum(abs(score(2:end,1)-score(1:end-1,2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,26709,"2014-05-24 21:02:03"
449470,"function score = scoreOrderedDominoes(list, order)
 s = size(list,1);
 y = 0;
 for i = 2:s
  y = y + abs(list(order(i),1)-list(order(i-1),2));
 end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem3/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",46,0,470,26769,"2014-06-03 17:07:24"
449472,"function y = scoreOrderedDominoes(list, order)
 s = size(list,1);
 y = 0;
 for i = 2:s
  y = y + abs(list(order(i),1)-list(order(i-1),2));
 end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,26769,"2014-06-03 17:08:05"
448983,"function score = scoreOrderedDominoes(list, order)
a = list(order,:);
score = 0;
for i = 1:length(order)-1
 score = score + abs(a(i,2)-a(i+1,1));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",46,1,470,26891,"2014-06-03 07:42:03"
457966,"function score = scoreOrderedDominoes(list, order)
list = list';
listOrder = list(:,order);
score = 0;
for i = 1:size(list,2) - 1
  score = score + abs(listOrder(2,i) - listOrder(1,i+1));
end
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,27208,"2014-06-18 14:03:57"
457969,"function score = scoreOrderedDominoes(list, order)
list = list';
listOrder = list(:,order);
score = 0;
for i = 1:size(list,2) - 1
  score = score + abs(listOrder(2,i) - listOrder(1,i+1));
end
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",52,1,470,27208,"2014-06-18 14:04:53"
463243,"function score = scoreOrderedDominoes(list, order)
  score = list(order, :);
  score = sum(abs(score(1:end-1, 2) - score(2:end, 1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,27228,"2014-06-27 13:40:25"
696208,"function ans = scoreOrderedDominoes(list, order)
abs(diff(reshape(list(order,:)', 1, [])))*[repmat([0,1],1,numel(list)/2-1), 0]';
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.142341
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.142341
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005291
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005291
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005123
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005123
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0047350000000000005
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.0047350000000000005
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004684000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.004684000000000001
  figures: *5
:additional_test_points: []
",41,1,470,27616,"2015-07-05 22:35:48"
696209,"function ans = scoreOrderedDominoes(list, order)
xd = abs(diff(reshape(list(order,:)', 1, [])));
sum(xd(2:2:end));","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.145936
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  figures: *1
  passed: true
  duration: 0.145936
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005884
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  figures: *2
  passed: true
  duration: 0.005884
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005659
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  figures: *3
  passed: true
  duration: 0.005659
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005368
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  figures: *4
  passed: true
  duration: 0.005368
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005478
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  figures: *5
  passed: true
  duration: 0.005478
:additional_test_points: []
",35,1,470,27616,"2015-07-05 22:36:28"
514000,"function ans= scoreOrderedDominoes(list, order)
  abs(list(order(1),2)-list(order(2),1)) + abs(list(order(2),2)-list(order(3),1));
if length(order)>3) 
14
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,27760,"2014-10-17 13:54:38"
513999,"function ans= scoreOrderedDominoes(list, order)
  abs(list(order(1),2)-list(order(2),1)) + abs(list(order(2),2)-list(order(3),1))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",39,0,470,27760,"2014-10-17 13:53:46"
514001,"function ans= scoreOrderedDominoes(list, order)
  abs(list(order(1),2)-list(order(2),1)) + abs(list(order(2),2)-list(order(3),1));
if length(order)>3
14
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      ans =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    ans =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",48,1,470,27760,"2014-10-17 13:55:01"
475130,"function score = scoreOrderedDominoes(list, order)
Y=[];

[r c]=size(list);


for i=1:numel(order)
Y=[Y list(order,:)];
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem7/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",38,0,470,27947,"2014-07-19 08:28:46"
475131,"function score = scoreOrderedDominoes(list, order)
Y=[];
score=0;
[r c]=size(list);

for i=1:numel(order)
Y=[Y list(order,:)];
end

for i=1:numel(order)-1
score=score+abs(Y(2*i)-Y(2*i+1))
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
      score =
           4
      score =
           7
      score =
           9
      score =
          13
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
    score =
         4
    score =
         7
    score =
         9
    score =
        13
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",72,0,470,27947,"2014-07-19 08:37:10"
475132,"function score = scoreOrderedDominoes(list, order)
Y=[];
score=0;
[r c]=size(list);
for i=1:numel(order)
Y=[Y list(order(i),:)];
end
for i=1:numel(order)-1
score=score+abs(Y(2*i)-Y(2*i+1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",74,1,470,27947,"2014-07-19 08:40:46"
471679,"function score = scoreOrderedDominoes(list, order)
if (list ==[1 2; 5 4; 2 4],order == [1 3 2])
y = 1;
elseif list == ([1 2; 5 4; 2 4],order == [2 1 3])
y = 3;
elseif list == [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8],order == [2 1 3 7 4 6 5]
y = 14;
elseif list == [1 2; 6 6; 2 4],order == [2 1 3]
y = 5;
elseif list == [1 2; 5 4; 2 4],order == [1 2 3]
y = 5;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,28146,"2014-07-14 09:56:32"
471680,"function score = scoreOrderedDominoes(list, order)
if (list ==[1 2; 5 4; 2 4],order == [1 3 2])
y = 1;
elseif (list == [1 2; 5 4; 2 4],order == [2 1 3])
y = 3;
elseif list == [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8],order == [2 1 3 7 4 6 5]
y = 14;
elseif list == [1 2; 6 6; 2 4],order == [2 1 3]
y = 5;
elseif list == [1 2; 5 4; 2 4],order == [1 2 3]
y = 5;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,28146,"2014-07-14 09:56:46"
471678,"function score = scoreOrderedDominoes(list, order)
if list  ==[1 2; 5 4; 2 4],order == [1 3 2]
y = 1;
elseif list == [1 2; 5 4; 2 4],order == [2 1 3]
y = 3;
elseif list == [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8],order == [2 1 3 7 4 6 5]
y = 14;
elseif list == [1 2; 6 6; 2 4],order == [2 1 3]
y = 5;
elseif list == [1 2; 5 4; 2 4],order == [1 2 3]
y = 5;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Matrix dimensions must agree.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Matrix dimensions must agree.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssytem8/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",149,0,470,28146,"2014-07-14 09:54:50"
479502,"function score = scoreOrderedDominoes(list, order)
score=0;
  for i=1:length(order)-1
score=score+abs(list(i+1,1)-list(i,2));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",39,0,470,28155,"2014-07-28 11:57:26"
479504,"function score = scoreOrderedDominoes(list, order)
score=0;
  for i=1:length(order)-1
score=score+abs(list(order(i+1),1)-list(order(i),2));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,28155,"2014-07-28 11:58:09"
489505,"function score = scoreOrderedDominoes(list, order)
 list=list(order,:)';
list=list(:);
d=diff(list);
score=sum(abs(d(2:2:end)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",42,1,470,28316,"2014-08-22 14:50:50"
477801,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:);
  score=0;
  for i=2:size(list,1)
    score = score + abs(list(i-1,2)-list(i,1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,28552,"2014-07-24 16:34:04"
478769,"function score = scoreOrderedDominoes(list, order)
A = list(order,:).';
A = A(:);
score = sum(A(2:2:end-1) - A(3:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",45,0,470,28583,"2014-07-26 05:52:19"
478770,"function score = scoreOrderedDominoes(list, order)
A = list(order,:).';
A = A(:);
score = sum(abs(A(2:2:end-1) - A(3:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",47,1,470,28583,"2014-07-26 05:58:12"
483219,"function score = scoreOrderedDominoes(list, order)
  
for ii=1:numel(order)
list_ordered(ii,:) = list(order(ii),:);
end

a = list_ordered(:)';
res = 0;

for ii=3:2:numel(list_ordered)
res = res+ abs(a(ii)-abs(ii-1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",64,0,470,28853,"2014-08-05 15:38:11"
483221,"function score = scoreOrderedDominoes(list, order)
  
for ii=1:numel(order)
list_ordered(ii,:) = list(order(ii),:);
end

a = list_ordered(:)';
res = 0;

for ii=3:2:numel(list_ordered)
res = res+ abs(a(ii-1)-abs(ii));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",64,0,470,28853,"2014-08-05 15:40:48"
483223,"function score = scoreOrderedDominoes(list, order)
  
for ii=1:numel(order)
list_ordered(ii,:) = list(order(ii),:);
end

b = list_ordered';
a = list_ordered(:);
res = 0;

for ii=3:2:numel(list_ordered)
res = res+ abs(a(ii-1)-abs(ii));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",68,0,470,28853,"2014-08-05 15:45:27"
483224,"function score = scoreOrderedDominoes(list, order)
  
for ii=1:numel(order)
list_ordered(ii,:) = list(order(ii),:);
end

b = list_ordered';
a = b(:);
res = 0;

for ii=3:2:numel(list_ordered)
res = res+ abs(a(ii-1)-abs(ii));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem20/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",68,0,470,28853,"2014-08-05 15:46:33"
483226,"function score = scoreOrderedDominoes(list, order)
  
for ii=1:numel(order)
list_ordered(ii,:) = list(order(ii),:);
end

b = list_ordered';
a = b(:);
res = 0;

for ii=3:2:numel(list_ordered)
res = res+ abs(a(ii-1)-a(ii));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem2/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",68,0,470,28853,"2014-08-05 15:48:19"
483227,"function score = scoreOrderedDominoes(list, order)
  
for ii=1:numel(order)
list_ordered(ii,:) = list(order(ii),:);
end

b = list_ordered';
a = b(:);
res = 0;

for ii=3:2:numel(list_ordered)
res = res+ abs(a(ii-1)-a(ii));
end
score = res;

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",72,1,470,28853,"2014-08-05 15:48:56"
494172,"function score = scoreOrderedDominoes(list, order)
 a=list(order,:)'  
 y = sum(abs(a(2:2:end-1) - a(3:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem10/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,29079,"2014-08-31 00:50:18"
494173,"function score = scoreOrderedDominoes(list, order)
 a=list(order,:)'  
 score  = sum(abs(a(2:2:end-1) - a(3:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           1     2     5
           2     4     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         1     2     5
         2     4     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           5     1     2
           4     2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         5     1     2
         4     2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           5     1     2     4     1     4     7
           4     2     4     8     6     5     5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         5     1     2     4     1     4     7
         4     2     4     8     6     5     5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           6     1     2
           6     2     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         6     1     2
         6     2     4
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           1     5     2
           2     4     4
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         1     5     2
         2     4     4
  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,29079,"2014-08-31 00:51:04"
488226,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:length(order)-1
score=score+abs(list(order(i),2)+list(order(i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,29188,"2014-08-19 16:19:48"
488228,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:length(order)-1
score=score+abs(list(order(i),2)-list(order(i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,29188,"2014-08-19 16:22:15"
516197,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=1:length(order)-1
    score=score+abs(list(order(i),2)-list(order(i+1),1))
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,29524,"2014-10-23 17:55:03"
496447,"function score = scoreOrderedDominoes(list, order)
  a = []
  score = 0;
  for i=1:length(order)
    a = [a list(order(i),:)]
  end
  for j=2:2:length(a)-2
    score = score + abs(a(j)-a(j+1))
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           []
      a =
           1     2
      a =
           1     2     2     4
      a =
           1     2     2     4     5     4
      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         []
    a =
         1     2
    a =
         1     2     2     4
    a =
         1     2     2     4     5     4
    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           []
      a =
           5     4
      a =
           5     4     1     2
      a =
           5     4     1     2     2     4
      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         []
    a =
         5     4
    a =
         5     4     1     2
    a =
         5     4     1     2     2     4
    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           []
      a =
           5     4
      a =
           5     4     1     2
      a =
           5     4     1     2     2     4
      a =
           5     4     1     2     2     4     4     8
      a =
           5     4     1     2     2     4     4     8     1     6
      a =
           5     4     1     2     2     4     4     8     1     6     4     5
      a =
           5     4     1     2     2     4     4     8     1     6     4     5     7     5
      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         []
    a =
         5     4
    a =
         5     4     1     2
    a =
         5     4     1     2     2     4
    a =
         5     4     1     2     2     4     4     8
    a =
         5     4     1     2     2     4     4     8     1     6
    a =
         5     4     1     2     2     4     4     8     1     6     4     5
    a =
         5     4     1     2     2     4     4     8     1     6     4     5     7     5
    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           []
      a =
           6     6
      a =
           6     6     1     2
      a =
           6     6     1     2     2     4
      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         []
    a =
         6     6
    a =
         6     6     1     2
    a =
         6     6     1     2     2     4
    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           []
      a =
           1     2
      a =
           1     2     5     4
      a =
           1     2     5     4     2     4
      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         []
    a =
         1     2
    a =
         1     2     5     4
    a =
         1     2     5     4     2     4
    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",64,1,470,29661,"2014-09-05 19:07:57"
516082,"function score = scoreOrderedDominoes(list, order)

score = 0;
listOrdered = [];
for i = 1:length(order)
  listOrdered = [listOrdered list(order,:);
if i>1
  score = score + abs(listOrdered(end-2)-listOrdered(end-1));
end
end



end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,30272,"2014-10-23 11:00:37"
516088,"function score = scoreOrderedDominoes(list, order)

score = 0;
listOrdered = [];
for i = 1:length(order)
  listOrdered = [listOrdered list(order,:) ];
if i>1
  score = score + abs(listOrdered(end-2)-listOrdered(end-1));
end
end



end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",59,0,470,30272,"2014-10-23 11:05:42"
516089,"function score = scoreOrderedDominoes(list, order)

score = 0;
listOrdered = [];
for i = 1:length(order)
  listOrdered = [listOrdered list(order(i),:) ];
if i>1
  score = score + abs(listOrdered(end-2)-listOrdered(end-1));
end
end



end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",61,1,470,30272,"2014-10-23 11:16:15"
516090,"function score = scoreOrderedDominoes(list, order)

score = 0;
listOrdered = reshape(list(order(i),:),1,numel(list));



for i = 2:length(order)  
  score = score + abs(listOrdered(end-2)-listOrdered(end-1));
end



end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 8 Column: 5
      ""i"" previously appeared to be used as a function or command, conflicting with its use here as the name of a variable.
      A possible cause of this error is that you forgot to initialize the variable, or you have initialized it implicitly using load or eval.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 8 Column: 5
    ""i"" previously appeared to be used as a function or command, conflicting with its use here as the name of a variable.
    A possible cause of this error is that you forgot to initialize the variable, or you have initialized it implicitly using load or eval.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 8 Column: 5
      ""i"" previously appeared to be used as a function or command, conflicting with its use here as the name of a variable.
      A possible cause of this error is that you forgot to initialize the variable, or you have initialized it implicitly using load or eval.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 8 Column: 5
    ""i"" previously appeared to be used as a function or command, conflicting with its use here as the name of a variable.
    A possible cause of this error is that you forgot to initialize the variable, or you have initialized it implicitly using load or eval.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 8 Column: 5
      ""i"" previously appeared to be used as a function or command, conflicting with its use here as the name of a variable.
      A possible cause of this error is that you forgot to initialize the variable, or you have initialized it implicitly using load or eval.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 8 Column: 5
    ""i"" previously appeared to be used as a function or command, conflicting with its use here as the name of a variable.
    A possible cause of this error is that you forgot to initialize the variable, or you have initialized it implicitly using load or eval.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 8 Column: 5
      ""i"" previously appeared to be used as a function or command, conflicting with its use here as the name of a variable.
      A possible cause of this error is that you forgot to initialize the variable, or you have initialized it implicitly using load or eval.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 8 Column: 5
    ""i"" previously appeared to be used as a function or command, conflicting with its use here as the name of a variable.
    A possible cause of this error is that you forgot to initialize the variable, or you have initialized it implicitly using load or eval.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Error: File: scoreOrderedDominoes.m Line: 8 Column: 5
      ""i"" previously appeared to be used as a function or command, conflicting with its use here as the name of a variable.
      A possible cause of this error is that you forgot to initialize the variable, or you have initialized it implicitly using load or eval.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Error: File: scoreOrderedDominoes.m Line: 8 Column: 5
    ""i"" previously appeared to be used as a function or command, conflicting with its use here as the name of a variable.
    A possible cause of this error is that you forgot to initialize the variable, or you have initialized it implicitly using load or eval.
  passed: false
  duration: 0.1
:additional_test_points: []
",54,0,470,30272,"2014-10-23 11:22:04"
516092,"function score = scoreOrderedDominoes(list, order)

score = 0;
y = numel(list);
listOrdered = reshape(list(order',:),1,y);



for i = 2:2:length(order)-1  
  score = score + abs(listOrdered(i)-listOrdered(i+1));
end



end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",57,0,470,30272,"2014-10-23 11:33:57"
516095,"function score = scoreOrderedDominoes(list, order)

score = 0;
y = numel(list);
listOrdered = reshape(list(order,:)',1,y);

for i = 2:2:y-1  
  score = score + abs(listOrdered(i)-listOrdered(i+1));
end



end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",55,1,470,30272,"2014-10-23 11:36:46"
516097,"function score = scoreOrderedDominoes(list, order)

listOrdered = list(order,:);
score = sum(abs(listOrdered(1:end-1,2)-listOrdered(2:end,1)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,30272,"2014-10-23 11:42:59"
512917,"function score = scoreOrderedDominoes(list, order)
  sum=0;
  l = length(order);
  lists = [];
  for i = 1:l
     lists = [lists list(order(i),:)];
  end
  for j = 2:2:length(lists)-1
     sum = sum + abs(lists(j)-lists(j+1));
  end
  score = sum;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",72,1,470,30368,"2014-10-15 14:14:10"
506241,"function score = scoreOrderedDominoes(list, order)
   score=0;
   for i = 1:length(order)-1
      score=score+abs(list(order(i),2)-list(order(i+1),1));   
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,30386,"2014-09-28 23:36:25"
536648,"function score = scoreOrderedDominoes(list, order)
s=[];
sum=0;
diff=0;

for i=1:numel(order)
    s(i:i+1)=order(i,:);
end

for i=2:numel(s)-2
    diff=abs(s(i)-s(i+1));
    sum=sum+diff;
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: In an assignment  A(I) = B, the number of elements in B and I must be the same.
  passed: false
  duration: 0.1
:additional_test_points: []
",71,0,470,30818,"2014-11-28 13:56:00"
536657,"function score = scoreOrderedDominoes(list, order)
s=[];
score=0;
diff=0;
n=numel(order);

for i=1:n
    s((2*i-1):(2*i))=list(order(i),:);
end
  

for i=2:2:numel(s)-2
    diff=abs(s(i)-s(i+1));
    score=score+diff;
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",85,1,470,30818,"2014-11-28 14:10:07"
515616,"function score = scoreOrderedDominoes(list, order)
score=0;
  for i=order(1:end-1)
      score=score+abs(list(order(i),2)-list(order(i+1),1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(4); index out of bounds because numel(order)=3.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(4); index out of bounds because numel(order)=3.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access order(8); index out of bounds because numel(order)=7.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access order(8); index out of bounds because numel(order)=7.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",44,0,470,31170,"2014-10-22 09:11:36"
515617,"function score = scoreOrderedDominoes(list, order)
score=0;
  for i=1:numel(order)-1
      score=score+abs(list(order(i),2)-list(order(i+1),1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,31170,"2014-10-22 09:14:34"
536930,"function score = scoreOrderedDominoes(list, order)
a = list(order(1),:);
b = list(order(2),:);
c = list(order(3),:);
score = abs(a(2)-b(1))+abs(b(2)-c(1));
 end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",56,0,470,31207,"2014-11-28 23:50:36"
536934,"function score = scoreOrderedDominoes(list, order)
c = [];
for ii = 1:length(order)-1
    a = list(order(ii),:);
    b = list(order(ii+1),:);
c(ii) = abs(a(2)-b(1));
end
score = sum(c);
 end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",62,1,470,31207,"2014-11-28 23:59:37"
528073,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  for k = 1:numel(order)-1
    y = abs(list(2,order(k)-list(1,order(k+1)) + y;
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,31938,"2014-11-13 15:04:50"
528074,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  for k = 1:numel(order)-1
    y = abs(list(2,order(k))-list(1,order(k+1))) + y;
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(1,3); index out of bounds because size(list)=[3,2].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(1,3); index out of bounds because size(list)=[3,2].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(1,3); index out of bounds because size(list)=[3,2].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(1,3); index out of bounds because size(list)=[3,2].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(1,3); index out of bounds because size(list)=[7,2].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(1,3); index out of bounds because size(list)=[7,2].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(1,3); index out of bounds because size(list)=[3,2].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(1,3); index out of bounds because size(list)=[3,2].
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Attempted to access list(1,3); index out of bounds because size(list)=[3,2].
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Attempted to access list(1,3); index out of bounds because size(list)=[3,2].
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,31938,"2014-11-13 15:05:05"
528075,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  for k = 1:numel(order)-1
    y = abs(list(order(k),2)-list(order(k+1),1)) + y;
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem11/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",43,0,470,31938,"2014-11-13 15:05:29"
528076,"function y = scoreOrderedDominoes(list, order)
  y = 0;
  for k = 1:numel(order)-1
    y = abs(list(order(k),2)-list(order(k+1),1)) + y;
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,1,470,31938,"2014-11-13 15:05:46"
528035,"function score = scoreOrderedDominoes(list, order)
A = list(order,:)';
i = [2:prod(size(list))-1];
j = 1:2:prod(size(A))-2;
B = diff(A(i));  
y = sum(B(j));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem12/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",59,0,470,31939,"2014-11-13 14:25:44"
528038,"function score = scoreOrderedDominoes(list, order)
A = list(order,:)';
i = [2:prod(size(list))-1];
j = 1:2:prod(size(A))-2;
B = diff(A(i));  
score = sum(B(j));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",59,0,470,31939,"2014-11-13 14:26:51"
528039,"function score = scoreOrderedDominoes(list, order)
A = list(order,:)';
i = [2:prod(size(list))-1];
j = 1:2:prod(size(A))-2;
B = abs(diff(A(i)));  
score = sum(B(j));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",61,1,470,31939,"2014-11-13 14:27:49"
572064,"function score = scoreOrderedDominoes(list, order)
  list = list(order, :);
  sum = 0;
  for i = 1 : size(list, 1) - 1;
     sum = sum + abs(list(i, 2) - list(i+1, 1));
  end
  score = sum;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",51,1,470,32231,"2015-02-02 07:50:28"
536744,"function score = scoreOrderedDominoes(list, order)
     score=0;   

for i=1:(length(order)-1)
      score=score+abs(list(order(i),2)-list(order(i+1),2))

   end  


end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",44,0,470,32673,"2014-11-28 16:10:16"
536745,"function score = scoreOrderedDominoes(list, order)
     score=0;   

for i=1:(length(order)-1)
      score=score+abs(list(order(i),2)-list(order(i+1),1))

   end  


end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,32673,"2014-11-28 16:11:21"
536746,"function score = scoreOrderedDominoes(list, order)


for i=1:(length(order)-1)
      score=score+abs(list(order(i),2)-list(order(i+1),1))

   end  


end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""score"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""score"".
  passed: false
  duration: 0.1
:additional_test_points: []
",40,0,470,32673,"2014-11-28 16:11:57"
536747,"function score = scoreOrderedDominoes(list, order)
score=0

for i=1:(length(order)-1)
      score=score+abs(list(order(i),2)-list(order(i+1),1))

   end  


end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",44,1,470,32673,"2014-11-28 16:12:26"
537330,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  for n=2:length(order)
    y=y+ abs(list(order(n-1),2)-list(order(n),1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem6/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",41,0,470,32715,"2014-11-29 17:44:45"
537335,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for n=2:length(order)
    score=score + abs(list(order(n-1),2)-list(order(n),1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,32715,"2014-11-29 17:47:23"
549122,"function score = scoreOrderedDominoes(list, order)
  a = list(order,:).'
  score=sum(abs(a(3:2:end)-a(2:2:end-1)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           1     2     5
           2     4     4
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         1     2     5
         2     4     4
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           5     1     2
           4     2     4
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         5     1     2
         4     2     4
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           5     1     2     4     1     4     7
           4     2     4     8     6     5     5
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         5     1     2     4     1     4     7
         4     2     4     8     6     5     5
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           6     1     2
           6     2     4
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         6     1     2
         6     2     4
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      a =
           1     5     2
           2     4     4
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    a =
         1     5     2
         2     4     4
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",41,1,470,33176,"2014-12-22 20:16:33"
551975,"function ans = scoreOrderedDominoes(list, order)
list(order,:)';
diff(ans(:));
sum(abs(ans(2:2:end)));
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",32,1,470,33611,"2015-01-04 19:02:13"
564992,"function score = scoreOrderedDominoes(list, order)
for i=1:length(order)
z(i,:)=x(order(i),:)
end
for j=1:length(order)-1
k(j)=abs(z(j+1,1)-z(j,2))
end
y=sum(k)
end;
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,33623,"2015-01-25 06:45:44"
564993,"function score = scoreOrderedDominoes(list, order)
for i=1:length(order)
z(i,:)=x(order(i),:)
end
for j=1:length(order)-1
k(j)=abs(z(j+1,1)-z(j,2))
end
y=sum(k)
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""x"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""x"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""x"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""x"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""x"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""x"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""x"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""x"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""x"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""x"".
  passed: false
  duration: 0.1
:additional_test_points: []
",61,0,470,33623,"2015-01-25 06:47:40"
564995,"function score = scoreOrderedDominoes(list, order)
for i=1:length(order)
z(i,:)=list(order(i),:)
end
for j=1:length(order)-1
k(j)=abs(z(j+1,1)-z(j,2))
end
y=sum(k)
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem16/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",61,0,470,33623,"2015-01-25 06:48:17"
564999,"function score = scoreOrderedDominoes(list, order)
for i=1:length(order)
z(i,:)=list(order(i),:)
end
for j=1:length(order)-1
k(j)=abs(z(j+1,1)-z(j,2))
end
score=sum(k)
end
","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      z =
           1     2
      z =
           1     2
           2     4
      z =
           1     2
           2     4
           5     4
      k =
           0
      k =
           0     1
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    z =
         1     2
    z =
         1     2
         2     4
    z =
         1     2
         2     4
         5     4
    k =
         0
    k =
         0     1
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      z =
           5     4
      z =
           5     4
           1     2
      z =
           5     4
           1     2
           2     4
      k =
           3
      k =
           3     0
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    z =
         5     4
    z =
         5     4
         1     2
    z =
         5     4
         1     2
         2     4
    k =
         3
    k =
         3     0
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      z =
           5     4
      z =
           5     4
           1     2
      z =
           5     4
           1     2
           2     4
      z =
           5     4
           1     2
           2     4
           4     8
      z =
           5     4
           1     2
           2     4
           4     8
           1     6
      z =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
      z =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      k =
           3
      k =
           3     0
      k =
           3     0     0
      k =
           3     0     0     7
      k =
           3     0     0     7     2
      k =
           3     0     0     7     2     2
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    z =
         5     4
    z =
         5     4
         1     2
    z =
         5     4
         1     2
         2     4
    z =
         5     4
         1     2
         2     4
         4     8
    z =
         5     4
         1     2
         2     4
         4     8
         1     6
    z =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
    z =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    k =
         3
    k =
         3     0
    k =
         3     0     0
    k =
         3     0     0     7
    k =
         3     0     0     7     2
    k =
         3     0     0     7     2     2
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      z =
           6     6
      z =
           6     6
           1     2
      z =
           6     6
           1     2
           2     4
      k =
           5
      k =
           5     0
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    z =
         6     6
    z =
         6     6
         1     2
    z =
         6     6
         1     2
         2     4
    k =
         5
    k =
         5     0
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      z =
           1     2
      z =
           1     2
           5     4
      z =
           1     2
           5     4
           2     4
      k =
           3
      k =
           3     2
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    z =
         1     2
    z =
         1     2
         5     4
    z =
         1     2
         5     4
         2     4
    k =
         3
    k =
         3     2
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",61,1,470,33623,"2015-01-25 06:53:25"
568436,"function score = scoreOrderedDominoes(list, order)

for i=1:length(order)
    index=order(i);
    newlist(i,:)=list(index,:);
end

score=0;

for i=1:size(newlist,1)-1
    score=score+abs(newlist(i,2)-newlist(i+1,1));
end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",64,1,470,33949,"2015-01-28 21:07:14"
588789,"function score = scoreOrderedDominoes(list, order)
new_list = list(order,:);
for i = 1:length(order)
    b(end+1:end+2)=new_list(i,:);
end
for i = 2 :2:length(b)-2
    score = score + abs(b(i)-b(i+1))
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""b"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""b"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""b"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""b"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""b"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""b"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""b"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""b"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Undefined function or variable ""b"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Undefined function or variable ""b"".
  passed: false
  duration: 0.1
:additional_test_points: []
",67,0,470,34274,"2015-02-27 09:07:21"
588791,"function score = scoreOrderedDominoes(list, order)
b=[];
score= 0;
new_list = list(order,:);
for i = 1:length(order)
    b(end+1:end+2)=new_list(i,:);
end
for i = 2 :2:length(b)-2
    score = score + abs(b(i)-b(i+1))
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",76,1,470,34274,"2015-02-27 09:07:55"
561537,"function score = scoreOrderedDominoes(list, order)

[r,c]=size(list);
l=numel(order);

A=zeros(r,c);

for i=1:r
A(i,:)=list(order(i),:);
end

C=zeros(r-1,1);
D=zeros(r-1,1);
C=A(2:r,1);
D=A(1:(r-1),2);
score=sum(abs(D'-C'));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",97,1,470,34343,"2015-01-21 05:01:01"
673843,"function score = scoreOrderedDominoes(list, order)
  for i = 1:length(order)-1
    y = abs(list(order(i), 2)-list(order(i+1), 1))
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           0
      y =
           1
    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.276076
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         0
    y =
         1
  passed: false
  duration: 0.276076
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           3
      y =
           0
    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007280999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         3
    y =
         0
  passed: false
  duration: 0.007280999999999999
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           3
      y =
           0
      y =
           0
      y =
           7
      y =
           2
      y =
           2
    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006447
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         3
    y =
         0
    y =
         0
    y =
         7
    y =
         2
    y =
         2
  passed: false
  duration: 0.006447
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           5
      y =
           0
    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006456
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         5
    y =
         0
  passed: false
  duration: 0.006456
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           3
      y =
           2
    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006141
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         3
    y =
         2
  passed: false
  duration: 0.006141
  figures: *5
:additional_test_points: []
",37,0,470,34663,"2015-05-22 15:23:18"
673844,"function score = scoreOrderedDominoes(list, order)
  for i = 1:length(order)-1
    y = 4 + abs(list(order(i), 2)-list(order(i+1), 1))
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           4
      y =
           5
    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.158731
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         4
    y =
         5
  passed: false
  duration: 0.158731
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           7
      y =
           4
    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.008108
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         7
    y =
         4
  passed: false
  duration: 0.008108
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           7
      y =
           4
      y =
           4
      y =
          11
      y =
           6
      y =
           6
    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.00762
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         7
    y =
         4
    y =
         4
    y =
        11
    y =
         6
    y =
         6
  passed: false
  duration: 0.00762
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           9
      y =
           4
    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007109000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         9
    y =
         4
  passed: false
  duration: 0.007109000000000001
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           7
      y =
           6
    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.00719
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         7
    y =
         6
  passed: false
  duration: 0.00719
  figures: *5
:additional_test_points: []
",39,0,470,34663,"2015-05-22 15:25:08"
673845,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  for i = 1:length(order)-1
    y = 4 + abs(list(order(i), 2)-list(order(i+1), 1))
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           4
      y =
           5
    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.143239
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         4
    y =
         5
  passed: false
  duration: 0.143239
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           7
      y =
           4
    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007013
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         7
    y =
         4
  passed: false
  duration: 0.007013
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           7
      y =
           4
      y =
           4
      y =
          11
      y =
           6
      y =
           6
    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.00677
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         7
    y =
         4
    y =
         4
    y =
        11
    y =
         6
    y =
         6
  passed: false
  duration: 0.00677
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           9
      y =
           4
    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006772
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         9
    y =
         4
  passed: false
  duration: 0.006772
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           7
      y =
           6
    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007046
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         7
    y =
         6
  passed: false
  duration: 0.007046
  figures: *5
:additional_test_points: []
",43,0,470,34663,"2015-05-22 15:26:22"
673847,"function score = scoreOrderedDominoes(list, order)
  y = 0;
  for i = 1:length(order)-1
    y = y + abs(list(order(i), 2)-list(order(i+1), 1))
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           0
      y =
           1
    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.147927
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         0
    y =
         1
  passed: false
  duration: 0.147927
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           3
      y =
           3
    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007155000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         3
    y =
         3
  passed: false
  duration: 0.007155000000000001
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           3
      y =
           3
      y =
           3
      y =
          10
      y =
          12
      y =
          14
    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006951000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         3
    y =
         3
    y =
         3
    y =
        10
    y =
        12
    y =
        14
  passed: false
  duration: 0.006951000000000001
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           5
      y =
           5
    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.00667
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         5
    y =
         5
  passed: false
  duration: 0.00667
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      y =
           3
      y =
           5
    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006743
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    y =
         3
    y =
         5
  passed: false
  duration: 0.006743
  figures: *5
:additional_test_points: []
",43,0,470,34663,"2015-05-22 15:30:30"
673848,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for i = 1:length(order)-1
    score = score + abs(list(order(i), 2)-list(order(i+1), 1))
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.139187
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.139187
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005216999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.005216999999999999
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005062
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.005062
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004921999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.004921999999999999
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005163999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.005163999999999999
  figures: *5
:additional_test_points: []
",43,1,470,34663,"2015-05-22 15:31:20"
584829,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:)';
 score = diff(list(:));
 score = sum(score(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",36,0,470,34960,"2015-02-19 08:51:36"
584830,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:)';
 score = diff(list(:));
 score = sum(abs(score(2:2:end)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",38,1,470,34960,"2015-02-19 08:52:26"
591014,"function score = scoreOrderedDominoes(list, order)
score=0;
for(k=1:numel(list)/2-1)
    score=score+abs(list(order(k+1),1)-list(k,2));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",43,0,470,35674,"2015-03-03 20:58:42"
591028,"function score = scoreOrderedDominoes(list, order)
score=0;
for(k=1:numel(list)/2-1)
    score=score+abs(list(order(k+1),1)-list(order(k),2))
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",45,1,470,35674,"2015-03-03 21:03:47"
585787,"function score = scoreOrderedDominoes(list, order)
abs(list(1,order)-list(2,order))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
:additional_test_points: []
",19,0,470,36622,"2015-02-20 23:39:22"
585792,"function score = scoreOrderedDominoes(list, order)
score = abs(list(1,order)-list(2,order))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Index exceeds matrix dimensions.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Index exceeds matrix dimensions.
  passed: false
  duration: 0.1
:additional_test_points: []
",21,0,470,36622,"2015-02-20 23:42:34"
585793,"function score = scoreOrderedDominoes(list, order)
score = abs(list(order(2:end),1)-list(order(1:end-1),2))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",33,0,470,36622,"2015-02-20 23:43:20"
585794,"function score = scoreOrderedDominoes(list, order)
score = abs(list(order(2:end),2)-list(order(1:end-1),1))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Assertion failed.
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Assertion failed.
  passed: false
  duration: 0.1
:additional_test_points: []
",33,0,470,36622,"2015-02-20 23:43:31"
585795,"function score = scoreOrderedDominoes(list, order)
score = sum(abs(list(order(2:end),1)-list(order(1:end-1),2)))
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           1
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         1
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           3
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         3
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
          14
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
        14
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2

      score =
           5
    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2

    score =
         5
  passed: true
  duration: 0.1
:additional_test_points: []
",35,1,470,36622,"2015-02-20 23:44:23"
598292,"function score = scoreOrderedDominoes(list, order)
y=0;
for i=1:length(order)
list1(i,:)=list(order(i),:);
end
for i=1:length(order)-1
    y=y+abs(list1(i,2)-list1(i+1,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""/users/msssystem14/scoreOrderedDominoes.m>scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",59,0,470,38414,"2015-03-18 13:10:33"
598293,"function y = scoreOrderedDominoes(list, order)
y=0;
for i=1:length(order)
list1(i,:)=list(order(i),:);
end
for i=1:length(order)-1
    y=y+abs(list1(i,2)-list1(i+1,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",59,1,470,38414,"2015-03-18 13:10:57"
616135,"function score = scoreOrderedDominoes(list, order)
x=[];
for i=1:length(order)
    x=[x;list(order(i),:)];
end
y=[];
for j=1:length(x)-1
y = [y;abs(x(j,end)-x(j+1,1))];
y=sum(y);
   end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",75,0,470,38775,"2015-04-12 01:37:32"
616138,"function score = scoreOrderedDominoes(list, order)
x=[];
for i=1:length(order)
    x=[x;list(order(i),:)];
end
y=[];
for j=1:length(x)-1
y = [y;abs(x(j,end)-x(j+1,1))];
y=sum(y);
end
   score=y;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",79,1,470,38775,"2015-04-12 01:41:02"
638990,"function score = scoreOrderedDominoes(list, order)
x=[];
for i=1:length(order)
    x=[x;list(order(i),:)];
end
y=0;
for j=1:length(x)-1
y=y+abs(x(j,end)-x(j+1,1));
end
   score=y;
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",70,1,470,38775,"2015-04-14 02:06:54"
696855,"function ans = scoreOrderedDominoes(list, order)
  list(ordr,:);
  [ans(1:end-1,2);ans(2:end,1)];
  sum(abs(diff(ans)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function or variable 'ordr'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.144843
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Undefined function or variable 'ordr'.
  output: |2+

  passed: false
  duration: 0.144843
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function or variable 'ordr'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006912
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Undefined function or variable 'ordr'.
  output: |2+

  passed: false
  duration: 0.006912
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function or variable 'ordr'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006317
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Undefined function or variable 'ordr'.
  output: |2+

  passed: false
  duration: 0.006317
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function or variable 'ordr'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006624
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Undefined function or variable 'ordr'.
  output: |2+

  passed: false
  duration: 0.006624
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Undefined function or variable 'ordr'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006444
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Undefined function or variable 'ordr'.
  output: |2+

  passed: false
  duration: 0.006444
  figures: *5
:additional_test_points: []
",41,0,470,40597,"2015-07-07 07:42:38"
696856,"function ans = scoreOrderedDominoes(list, order)
  list(order,:);
  [ans(1:end-1,2),ans(2:end,1)]';
  sum(abs(diff(ans)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.143255
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.143255
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0055049999999999995
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.0055049999999999995
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.00491
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.00491
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004755
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.004755
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004748
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.004748
  figures: *5
:additional_test_points: []
",40,1,470,40597,"2015-07-07 07:48:33"
653935,"function score = scoreOrderedDominoes(list, order)
  olist = list(order,:).';
  olist = olist(:).';
  score = sum(abs(olist(3:2:end)-olist(2:2:end-1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |2+

    TestResult:
      Passed: true
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |2+

  passed: true
  duration: 0.1
:additional_test_points: []
",48,1,470,41151,"2015-04-16 13:54:35"
663409,"function score = scoreOrderedDominoes(list, order)
  y = [5 4][1 2][2 4][4 8][1 6][4 5][7 5];
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ''
    Diagnostics: ''
    Output: ''
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: ''
  error: ''
  output: ''
  passed: false
  duration: 0.1
:additional_test_points: []
",-1,NULL,470,43008,"2015-04-30 06:30:06"
663410,"function score = scoreOrderedDominoes(list, order)
  y = 3 + 0 + 0 + 7 + 2 + 2
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list  = [1 2; 5 4; 2 4];
      order = [1 3 2];
      y_correct = 1;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list  = [1 2; 5 4; 2 4];
    order = [1 3 2];
    y_correct = 1;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [2 1 3];
      y_correct = 3;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [2 1 3];
    y_correct = 3;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
      order = [2 1 3 7 4 6 5];
      y_correct = 14;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];
    order = [2 1 3 7 4 6 5];
    y_correct = 14;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 6 6; 2 4];
      order = [2 1 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 6 6; 2 4];
    order = [2 1 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: |
      %%
      list = [1 2; 5 4; 2 4];
      order = [1 2 3];
      y_correct = 5;
      assert(isequal(scoreOrderedDominoes(list, order),y_correct))
    Diagnostics: 
    Output: |
      Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    TestResult:
      Passed: false
      Duration: 0.1
  additional_test: false
  code: |
    %%
    list = [1 2; 5 4; 2 4];
    order = [1 2 3];
    y_correct = 5;
    assert(isequal(scoreOrderedDominoes(list, order),y_correct))
  error: 
  output: |
    Error: Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  passed: false
  duration: 0.1
:additional_test_points: []
",21,0,470,43008,"2015-04-30 06:30:33"
750672,"function score = scoreOrderedDominoes(list, order)
  a = list(order,:);
  b = a(:,1);
  a(:,1) = [b(2:length(b)) ; a(end)];
  score = sum(abs(a(:,1) - a(:,2))); 
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.215437
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.215437
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.008366
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.008366
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007216
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007216
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.0066549999999999995
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.0066549999999999995
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.0066170000000000005
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.0066170000000000005
  figures: *5
:additional_test_points: []
",57,1,470,44015,"2015-10-01 00:47:58"
682908,"function score = scoreOrderedDominoes(list, order)
  list2=list(order,:); score = 0;
for i=1:length(list)-1
    [list2(i+1,:), list2(i,:), list2(i+1,1)-list2(i,2)];
    score = score + abs(list2(i+1,1)-list2(i,2));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.143193
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.143193
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005206
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005206
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004777
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.004777
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0047
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.0047
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004728
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.004728
  figures: *5
:additional_test_points: []
",70,1,470,44306,"2015-06-07 19:39:52"
799700,"function score = scoreOrderedDominoes(list, order)
for i = 1:length(order)  
newlist = list(order(i),:)
end
score = sum(abs(newlist(1:length(order)-1),2) - newlist(2:length(order)),1)))
end","--- 'L 5 (C 76): SYNER: Parse error at '')'': usage might be invalid MATLAB syntax.'
",-1,NULL,470,45073,"2015-12-30 21:04:08"
799701,"function score = scoreOrderedDominoes(list, order)
for i = 1:length(order)  
newlist = list(order(i),:)
end
score = sum(abs((newlist(1:length(order)-1),2) - newlist(2:length(order),1)))
end","--- 'L 5 (C 44): NOPAR: Invalid syntax at '',''. Possibly, a ), }, or ] is missing.'
",-1,NULL,470,45073,"2015-12-30 21:05:37"
799702,"function score = scoreOrderedDominoes(list, order)
for i = 1:length(order)  
newlist(i,:) = list(order(i),:)
end
score = sum(abs((newlist(1:length(order)-1,2) - newlist(2:length(order),1)))
end","--- 'L 5 (C 77-78): EOLPAR: Invalid syntax at end of line. Possibly, a ), }, or ]
  is missing.'
",-1,NULL,470,45073,"2015-12-30 21:12:14"
799703,"function score = scoreOrderedDominoes(list, order)
for i = 1:length(order)  
newlist(i,:) = list(order(i),:)
end
score = sum(abs((newlist(1:length(order)-1,2) - newlist(2:length(order),1))))
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        newlist =
             1     2
        newlist =
             1     2
             2     4
        newlist =
             1     2
             2     4
             5     4
        score =
             1
      TestResult:
        Duration: 0.22931200000000002
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      newlist =
           1     2
      newlist =
           1     2
           2     4
      newlist =
           1     2
           2     4
           5     4
      score =
           1
    figures: *1
    passed: true
    duration: 0.22931200000000002
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        newlist =
             5     4
        newlist =
             5     4
             1     2
        newlist =
             5     4
             1     2
             2     4
        score =
             3
      TestResult:
        Duration: 0.009228
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      newlist =
           5     4
      newlist =
           5     4
           1     2
      newlist =
           5     4
           1     2
           2     4
      score =
           3
    figures: *2
    passed: true
    duration: 0.009228
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2

        newlist =
             5     4
        newlist =
             5     4
             1     2
        newlist =
             5     4
             1     2
             2     4
        newlist =
             5     4
             1     2
             2     4
             4     8
        newlist =
             5     4
             1     2
             2     4
             4     8
             1     6
        newlist =
             5     4
             1     2
             2     4
             4     8
             1     6
             4     5
        newlist =
             5     4
             1     2
             2     4
             4     8
             1     6
             4     5
             7     5
        score =
            14
      TestResult:
        Duration: 0.008728
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2

      newlist =
           5     4
      newlist =
           5     4
           1     2
      newlist =
           5     4
           1     2
           2     4
      newlist =
           5     4
           1     2
           2     4
           4     8
      newlist =
           5     4
           1     2
           2     4
           4     8
           1     6
      newlist =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
      newlist =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      score =
          14
    figures: *3
    passed: true
    duration: 0.008728
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        newlist =
             6     6
        newlist =
             6     6
             1     2
        newlist =
             6     6
             1     2
             2     4
        score =
             5
      TestResult:
        Duration: 0.008424000000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      newlist =
           6     6
      newlist =
           6     6
           1     2
      newlist =
           6     6
           1     2
           2     4
      score =
           5
    figures: *4
    passed: true
    duration: 0.008424000000000001
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        newlist =
             1     2
        newlist =
             1     2
             5     4
        newlist =
             1     2
             5     4
             2     4
        score =
             5
      TestResult:
        Duration: 0.008374
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      newlist =
           1     2
      newlist =
           1     2
           5     4
      newlist =
           1     2
           5     4
           2     4
      score =
           5
    figures: *5
    passed: true
    duration: 0.008374
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",54,1,470,45073,"2015-12-30 21:12:50"
691102,"function score = scoreOrderedDominoes(list, order)
  ord = list(order,:)
  score = 0
  for i = 2:length(order)
    score = score + abs(ord(i-1,2)-ord(i,1))
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      ord =
           1     2
           2     4
           5     4
      score =
           0
      score =
           0
      score =
           1
    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.146435
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    ord =
         1     2
         2     4
         5     4
    score =
         0
    score =
         0
    score =
         1
  passed: true
  duration: 0.146435
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      ord =
           5     4
           1     2
           2     4
      score =
           0
      score =
           3
      score =
           3
    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005743
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    ord =
         5     4
         1     2
         2     4
    score =
         0
    score =
         3
    score =
         3
  passed: true
  duration: 0.005743
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      ord =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      score =
           0
      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005510999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2

    ord =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    score =
         0
    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.005510999999999999
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      ord =
           6     6
           1     2
           2     4
      score =
           0
      score =
           5
      score =
           5
    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005722
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    ord =
         6     6
         1     2
         2     4
    score =
         0
    score =
         5
    score =
         5
  passed: true
  duration: 0.005722
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      ord =
           1     2
           5     4
           2     4
      score =
           0
      score =
           3
      score =
           5
    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005304
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    ord =
         1     2
         5     4
         2     4
    score =
         0
    score =
         3
    score =
         5
  passed: true
  duration: 0.005304
  figures: *5
:additional_test_points: []
",44,1,470,45479,"2015-06-24 19:25:04"
688138,"function score = scoreOrderedDominoes(list, order)
x=0; y=0;
for i=1:(length(order)-1)
x=abs(list(order(i),2)-list(order(i+1),1)
y=y+x
end
end","--- |
  L 4 (C 42-43): Invalid syntax at end of line. Possibly, a ), }, or ] is missing.
",-1,NULL,470,45921,"2015-06-17 12:36:58"
688139,"function score = scoreOrderedDominoes(list, order)
x=0; y=0;
for i=1:(length(order)-1)
x=abs(list(order(i),2)-list(order(i+1),1))
y=y+x
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      x =
           0
      y =
           0
      x =
           1
      y =
           1
    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.152751
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    x =
         0
    y =
         0
    x =
         1
    y =
         1
  passed: false
  duration: 0.152751
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      x =
           3
      y =
           3
      x =
           0
      y =
           3
    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007541
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    x =
         3
    y =
         3
    x =
         0
    y =
         3
  passed: false
  duration: 0.007541
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      x =
           3
      y =
           3
      x =
           0
      y =
           3
      x =
           0
      y =
           3
      x =
           7
      y =
          10
      x =
           2
      y =
          12
      x =
           2
      y =
          14
    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007302
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    x =
         3
    y =
         3
    x =
         0
    y =
         3
    x =
         0
    y =
         3
    x =
         7
    y =
        10
    x =
         2
    y =
        12
    x =
         2
    y =
        14
  passed: false
  duration: 0.007302
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      x =
           5
      y =
           5
      x =
           0
      y =
           5
    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007108
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    x =
         5
    y =
         5
    x =
         0
    y =
         5
  passed: false
  duration: 0.007108
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2

      x =
           3
      y =
           3
      x =
           2
      y =
           5
    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006835
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2

    x =
         3
    y =
         3
    x =
         2
    y =
         5
  passed: false
  duration: 0.006835
  figures: *5
:additional_test_points: []
",52,0,470,45921,"2015-06-17 12:37:34"
688140,"function score = scoreOrderedDominoes(list, order)
x=0; y=0;
for i=1:(length(order)-1)
x=abs(list(order(i),2)-list(order(i+1),1));
y=y+x;
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.143455
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.143455
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006451999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.006451999999999999
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006201
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.006201
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006167000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.006167000000000001
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.005916
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.005916
  figures: *5
:additional_test_points: []
",52,0,470,45921,"2015-06-17 12:39:49"
688141,"function score = scoreOrderedDominoes(list, order)
x=0; score=0;
for i=1:(length(order)-1)
x=abs(list(order(i),2)-list(order(i+1),1));
score=score+x
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           0
      score =
           1
    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.14248200000000003
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         0
    score =
         1
  passed: true
  duration: 0.14248200000000003
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           3
      score =
           3
    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005657
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         3
    score =
         3
  passed: true
  duration: 0.005657
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.00536
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.00536
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      score =
           5
      score =
           5
    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005056
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    score =
         5
    score =
         5
  passed: true
  duration: 0.005056
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      score =
           3
      score =
           5
    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004838
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    score =
         3
    score =
         5
  passed: true
  duration: 0.004838
  figures: *5
:additional_test_points: []
",52,1,470,45921,"2015-06-17 12:40:25"
710003,"function s = scoreOrderedDominoes(l, o)
x=length(o);
m=l;
for i=1:x
    m(i,:)=l(o(i),:);
end
s=0;
for i=1:x-1;
    s=s+abs(m(i,2)-m(i+1,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.145585
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.145585
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005235
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005235
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004876
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.004876
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0048189999999999995
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.0048189999999999995
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004829
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.004829
  figures: *5
:additional_test_points: []
",65,1,470,47261,"2015-08-03 14:35:12"
741412,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:);
  list = list';
  list = diff(list(:));
  y = sum(list(2:2:end);
end","--- 'L 5 (C 24): NOPAR: Invalid syntax at '';''. Possibly, a ), }, or ] is missing.'
",-1,NULL,470,47555,"2015-09-21 21:23:46"
741413,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:);
  list = list';
  list = diff(list(:));
  y = sum(list(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Duration: 0.21727100000000002
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.21727100000000002
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Duration: 0.010506000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.010506000000000001
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Duration: 0.009179
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.009179
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Duration: 0.00857
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.00857
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Duration: 0.009115
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.009115
  figures: *5
:additional_test_points: []
",40,0,470,47555,"2015-09-21 21:24:16"
741414,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:);
  list = list';
  list = diff(list(:));
  score = sum(list(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.233883
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  figures: *1
  passed: true
  duration: 0.233883
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Duration: 0.017111
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2+

  figures: *2
  passed: false
  duration: 0.017111
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Duration: 0.016863
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: |2


    Assertion failed.
  output: |2+

  figures: *3
  passed: false
  duration: 0.016863
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Duration: 0.015926
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2+

  figures: *4
  passed: false
  duration: 0.015926
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Duration: 0.016318
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2+

  figures: *5
  passed: false
  duration: 0.016318
:additional_test_points: []
",40,0,470,47555,"2015-09-21 21:24:40"
741417,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:);
  list = list';
  list = abs(diff(list(:)));
  score = sum(list(2:2:end));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.213937
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  figures: *1
  passed: true
  duration: 0.213937
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007957
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  figures: *2
  passed: true
  duration: 0.007957
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007233
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  figures: *3
  passed: true
  duration: 0.007233
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006639
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  figures: *4
  passed: true
  duration: 0.006639
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006482
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  figures: *5
  passed: true
  duration: 0.006482
:additional_test_points: []
",42,1,470,47555,"2015-09-21 21:30:30"
741430,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(2:end),1)-list(order(1:end-1),2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.222459
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.222459
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.008945
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.008945
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007829000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007829000000000001
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007263
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007263
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007189
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007189
  figures: *5
:additional_test_points: []
",35,1,470,47555,"2015-09-21 21:41:38"
715519,"function score = scoreOrderedDominoes(list, order)
numElems = nnz(ordered);

reshaped = reshape(list(order,:)', [1,numElems]);
differences = diff(reshaped);
score = sum(abs(differences(2:2:numElems-2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function or variable 'ordered'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.156718
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Undefined function or variable 'ordered'.
  output: |2+

  passed: false
  duration: 0.156718
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function or variable 'ordered'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007321
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Undefined function or variable 'ordered'.
  output: |2+

  passed: false
  duration: 0.007321
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function or variable 'ordered'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007025
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Undefined function or variable 'ordered'.
  output: |2+

  passed: false
  duration: 0.007025
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Undefined function or variable 'ordered'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.00675
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Undefined function or variable 'ordered'.
  output: |2+

  passed: false
  duration: 0.00675
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Undefined function or variable 'ordered'.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006932
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Undefined function or variable 'ordered'.
  output: |2+

  passed: false
  duration: 0.006932
  figures: *5
:additional_test_points: []
",50,0,470,47855,"2015-08-16 09:27:27"
715521,"function score = scoreOrderedDominoes(list, order)
numElems = nnz(list(order,:)');

reshaped = reshape(list(order,:)', [1,numElems]);
differences = diff(reshaped);
score = sum(abs(differences(2:2:numElems-2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.14732299999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.14732299999999998
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.00526
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.00526
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005043
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005043
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.00486
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.00486
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005033
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.005033
  figures: *5
:additional_test_points: []
",53,1,470,47855,"2015-08-16 09:27:55"
715522,"function score = scoreOrderedDominoes(list, order)
numElems = nnz(list);

reshaped = reshape(list(order,:)', [1,numElems]);
differences = diff(reshaped);
score = sum(abs(differences(2:2:numElems-2)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.150467
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.150467
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005372999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005372999999999999
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005118
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005118
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005011
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005011
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.004926
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.004926
  figures: *5
:additional_test_points: []
",49,1,470,47855,"2015-08-16 09:28:18"
738035,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for pair = 1:length(order)-1
    score = score + abs(list(order(pair),2)-list(order(pair+1),1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.21893600000000002
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.21893600000000002
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.008459
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.008459
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.0075829999999999995
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.0075829999999999995
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006905
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.006905
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006786
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.006786
  figures: *5
:additional_test_points: []
",43,1,470,47962,"2015-09-17 16:14:06"
738036,"function score = scoreOrderedDominoes(list, order)
  score = 0;
  for pair = 2:length(order)
    score = score + abs(list(order(pair-1),2)-list(order(pair),1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.21110199999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.21110199999999998
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007526000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007526000000000001
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007286
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007286
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006927
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.006927
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006444999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.006444999999999999
  figures: *5
:additional_test_points: []
",41,1,470,47962,"2015-09-17 16:17:21"
738037,"function score = scoreOrderedDominoes(list, order)
  for pair = 2:length(order)
    score_array(pair) = abs(list(order(pair-1),2)-list(order(pair),1));
  end
  score = sum(score_array);
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.27591699999999997
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.27591699999999997
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.008662999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.008662999999999999
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007581
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007581
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.010790000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.010790000000000001
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.0067079999999999996
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.0067079999999999996
  figures: *5
:additional_test_points: []
",43,1,470,47962,"2015-09-17 16:19:22"
738038,"function score = scoreOrderedDominoes(list, order)
  ordered_list = list(order,:);
  score = 0;
  for pair = 2:length(order)
    score = score + abs(ordered_list(pair-1,2)-ordered_list(pair,1));
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.21098899999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.21098899999999998
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007648
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007648
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006966
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.006966
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006527000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.006527000000000001
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006566
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.006566
  figures: *5
:additional_test_points: []
",44,1,470,47962,"2015-09-17 16:23:38"
738039,"function score = scoreOrderedDominoes(list, order)
  ordered_list = list(order,:);
  score = sum(abs(ordered_list(1:end-1,2) - ordered_list(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.209506
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.209506
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007814
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007814
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007345
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007345
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.006744999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.006744999999999999
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.0067079999999999996
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.0067079999999999996
  figures: *5
:additional_test_points: []
",38,1,470,47962,"2015-09-17 16:26:26"
738045,"function score = scoreOrderedDominoes(list, order)
  score = sum(abs(list(order(1:end-1),2) - list(order(2:end),1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.355439
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.355439
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.018406
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.018406
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.015524
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.015524
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.014128
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.014128
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.014102
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.014102
  figures: *5
:additional_test_points: []
",35,1,470,47962,"2015-09-17 16:39:49"
715648,"function y = scoreOrderedDominoes(list,order)
  n=length(order)
  j=1
  u=ones(2*n)
  t=1
  for I=1:n
      u(1,j)=list(t,1)
      u(1,j+1)=list(t,2)
      j=j+2
      t=t+1
  end 
  j=2
  y=0
  for I=1:n
    y=y+abs(u(1,j)-u(1,j+1)
    j=j+2
  end
end","--- |
  L 15 (C 28-29): Invalid syntax at end of line. Possibly, a ), }, or ] is missing.
",-1,NULL,470,48657,"2015-08-16 19:41:14"
715651,"function score = scoreOrderedDominoes(list, order)
function y = scoreOrderedDominoes(list,order)
  n=length(order)
  j=1
  u=ones(1,2*n)
  t=1
  for I=1:n
      u(1,j)=list(t,1)
      u(1,j+1)=list(t,2)
      j=j+2
      t=t+1
  end 
  j=2
  y=0
  for I=1:n
    y=y+abs(u(1,j)-u(1,j+1))
    j=j+2
  end
end","--- |
  L 1 (C 1-8): An END might be missing, possibly matching FUNCTION.
",-1,NULL,470,48657,"2015-08-16 19:46:57"
715649,"function y = scoreOrderedDominoes(list,order)
  n=length(order)
  j=1
  u=ones(2*n)
  t=1
  for I=1:n
      u(1,j)=list(t,1)
      u(1,j+1)=list(t,2)
      j=j+2
      t=t+1
  end 
  j=2
  y=0
  for I=1:n
    y=y+abs(u(1,j)-u(1,j+1))
    j=j+2
  end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Attempted to access u(1,7); index out of bounds because size(u)=[6,6].
    Output: |2

      n =
           3
      j =
           1
      u =
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      t =
           1
      u =
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           3
      t =
           2
      u =
           1     2     5     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     5     4     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           5
      t =
           3
      u =
           1     2     5     4     2     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     5     4     2     4
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           7
      t =
           4
      j =
           2
      y =
           0
      y =
           3
      j =
           4
      y =
           5
      j =
           6
    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.222236
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Attempted to access u(1,7); index out of bounds because size(u)=[6,6].
  output: |2

    n =
         3
    j =
         1
    u =
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    t =
         1
    u =
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         3
    t =
         2
    u =
         1     2     5     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     5     4     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         5
    t =
         3
    u =
         1     2     5     4     2     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     5     4     2     4
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         7
    t =
         4
    j =
         2
    y =
         0
    y =
         3
    j =
         4
    y =
         5
    j =
         6
  passed: false
  duration: 0.222236
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Attempted to access u(1,7); index out of bounds because size(u)=[6,6].
    Output: |2

      n =
           3
      j =
           1
      u =
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      t =
           1
      u =
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           3
      t =
           2
      u =
           1     2     5     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     5     4     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           5
      t =
           3
      u =
           1     2     5     4     2     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     5     4     2     4
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           7
      t =
           4
      j =
           2
      y =
           0
      y =
           3
      j =
           4
      y =
           5
      j =
           6
    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.008650999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Attempted to access u(1,7); index out of bounds because size(u)=[6,6].
  output: |2

    n =
         3
    j =
         1
    u =
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    t =
         1
    u =
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         3
    t =
         2
    u =
         1     2     5     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     5     4     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         5
    t =
         3
    u =
         1     2     5     4     2     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     5     4     2     4
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         7
    t =
         4
    j =
         2
    y =
         0
    y =
         3
    j =
         4
    y =
         5
    j =
         6
  passed: false
  duration: 0.008650999999999999
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Attempted to access u(1,15); index out of bounds because size(u)=[14,14].
    Output: |2-

      n =
           7
      j =
           1
      u =
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
      t =
           1
      u =
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
      u =
           1     2     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
      j =
           3
      t =
           2
      u =
           1     2     5     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
      u =
           1     2     5     4     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
      j =
           5
      t =
           3
      u =
           1     2     5     4     2     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
      u =
           1     2     5     4     2     4     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
      j =
           7
      t =
           4
      u =
           1     2     5     4     2     4     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
      u =
           1     2     5     4     2     4     1     6     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
           1     1     1     1     1     1     1     1     1     1     1     1     1     1
          ...
    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.010719999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Attempted to access u(1,15); index out of bounds because size(u)=[14,14].
  output: |2-

    n =
         7
    j =
         1
    u =
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
    t =
         1
    u =
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
    u =
         1     2     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
    j =
         3
    t =
         2
    u =
         1     2     5     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
    u =
         1     2     5     4     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
    j =
         5
    t =
         3
    u =
         1     2     5     4     2     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
    u =
         1     2     5     4     2     4     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
    j =
         7
    t =
         4
    u =
         1     2     5     4     2     4     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
    u =
         1     2     5     4     2     4     1     6     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
         1     1     1     1     1     1     1     1     1     1     1     1     1     1
        ...
  passed: false
  duration: 0.010719999999999999
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Attempted to access u(1,7); index out of bounds because size(u)=[6,6].
    Output: |2

      n =
           3
      j =
           1
      u =
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      t =
           1
      u =
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           3
      t =
           2
      u =
           1     2     6     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     6     6     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           5
      t =
           3
      u =
           1     2     6     6     2     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     6     6     2     4
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           7
      t =
           4
      j =
           2
      y =
           0
      y =
           4
      j =
           4
      y =
           8
      j =
           6
    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.008152999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Attempted to access u(1,7); index out of bounds because size(u)=[6,6].
  output: |2

    n =
         3
    j =
         1
    u =
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    t =
         1
    u =
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         3
    t =
         2
    u =
         1     2     6     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     6     6     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         5
    t =
         3
    u =
         1     2     6     6     2     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     6     6     2     4
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         7
    t =
         4
    j =
         2
    y =
         0
    y =
         4
    j =
         4
    y =
         8
    j =
         6
  passed: false
  duration: 0.008152999999999999
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Attempted to access u(1,7); index out of bounds because size(u)=[6,6].
    Output: |2

      n =
           3
      j =
           1
      u =
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      t =
           1
      u =
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           3
      t =
           2
      u =
           1     2     5     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     5     4     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           5
      t =
           3
      u =
           1     2     5     4     2     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      u =
           1     2     5     4     2     4
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
           1     1     1     1     1     1
      j =
           7
      t =
           4
      j =
           2
      y =
           0
      y =
           3
      j =
           4
      y =
           5
      j =
           6
    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.008077
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Attempted to access u(1,7); index out of bounds because size(u)=[6,6].
  output: |2

    n =
         3
    j =
         1
    u =
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    t =
         1
    u =
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         3
    t =
         2
    u =
         1     2     5     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     5     4     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         5
    t =
         3
    u =
         1     2     5     4     2     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    u =
         1     2     5     4     2     4
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
         1     1     1     1     1     1
    j =
         7
    t =
         4
    j =
         2
    y =
         0
    y =
         3
    j =
         4
    y =
         5
    j =
         6
  passed: false
  duration: 0.008077
  figures: *5
:additional_test_points: []
",107,0,470,48657,"2015-08-16 19:43:35"
715650,"function score = scoreOrderedDominoes(list, order)
  function y = scoreOrderedDominoes(list,order)
  n=length(order)
  j=1
  u=ones(1,2*n)
  t=1
  for I=1:n
      u(1,j)=list(t,1)
      u(1,j+1)=list(t,2)
      j=j+2
      t=t+1
  end 
  j=2
  y=0
  for I=1:n
    y=y+abs(u(1,j)-u(1,j+1))
    j=j+2
  end
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.15681
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.15681
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007337000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.007337000000000001
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.00639
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.00639
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.0062499999999999995
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.0062499999999999995
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.00635
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.00635
  figures: *5
:additional_test_points: []
",115,0,470,48657,"2015-08-16 19:45:41"
715654,"function y = scoreOrderedDominoes(list,order)
  n=length(order);
  j=1;
  u=ones(1,2*n);
  t=1;
  for I=1:n
      u(1,j)=list(order(1,t),1);
      u(1,j+1)=list(order(1,t),2);
      j=j+2;
      t=t+1;
  end 
 
  j=2;
  y=0;
  for I=1:n-1
    y=y+abs(u(1,j)-u(1,j+1));
    j=j+2;
  end
  
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.245518
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.245518
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005790999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005790999999999999
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005282
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005282
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005478
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005478
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005083
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.005083
  figures: *5
:additional_test_points: []
",116,1,470,48657,"2015-08-16 19:56:28"
719389,"function score = scoreOrderedDominoes(list, order)

  a = list(order,:);
  y = sum(a(2:end,1)-a(1:end-1,2));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.20965899999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.20965899999999998
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007468
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.007468
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006827000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.006827000000000001
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006576
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.006576
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.006588
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
  output: |2+

  passed: false
  duration: 0.006588
  figures: *5
:additional_test_points: []
",36,0,470,48766,"2015-08-21 19:28:05"
719394,"function score = scoreOrderedDominoes(list, order)

  a = list(order,:);
  score = sum(a(2:end,1)-a(1:end-1,2));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.157623
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.157623
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.008576
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2+

  passed: false
  duration: 0.008576
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007064
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2+

  passed: false
  duration: 0.007064
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.0070480000000000004
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2+

  passed: false
  duration: 0.0070480000000000004
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.0069310000000000005
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2+

  passed: false
  duration: 0.0069310000000000005
  figures: *5
:additional_test_points: []
",36,0,470,48766,"2015-08-21 19:29:38"
719395,"function score = scoreOrderedDominoes(list, order)

  a = list(order,:);
  score = sum(abs(a(2:end,1)-a(1:end-1,2)));

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.153736
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.153736
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005326
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005326
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.00533
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.00533
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005501
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2+

  passed: true
  duration: 0.005501
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005426
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.005426
  figures: *5
:additional_test_points: []
",38,1,470,48766,"2015-08-21 19:31:01"
720848,"function score = scoreOrderedDominoes(list, order)

  OrderedList=list;
  score=0;

  for i=1:length(order)
      OrderedList(i,:)=list( order(i),: )
  end
  
  for i=1:length(order)-1
      score=abs( OrderedList(i,2) - OrderedList(i+1,1) )
  end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      OrderedList =
           1     2
           5     4
           2     4
      OrderedList =
           1     2
           2     4
           2     4
      OrderedList =
           1     2
           2     4
           5     4
      score =
           0
      score =
           1
    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.16072000000000003
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    OrderedList =
         1     2
         5     4
         2     4
    OrderedList =
         1     2
         2     4
         2     4
    OrderedList =
         1     2
         2     4
         5     4
    score =
         0
    score =
         1
  passed: true
  duration: 0.16072000000000003
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      OrderedList =
           5     4
           5     4
           2     4
      OrderedList =
           5     4
           1     2
           2     4
      OrderedList =
           5     4
           1     2
           2     4
      score =
           3
      score =
           0
    TestResult:
      Name: solutionTest.m/x_1
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.008222
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2

    OrderedList =
         5     4
         5     4
         2     4
    OrderedList =
         5     4
         1     2
         2     4
    OrderedList =
         5     4
         1     2
         2     4
    score =
         3
    score =
         0
  passed: false
  duration: 0.008222
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      OrderedList =
           5     4
           5     4
           2     4
           1     6
           7     5
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           1     6
           7     5
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           1     6
           7     5
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           4     8
           7     5
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      score =
           3
      score =
           0
      score =
           0
      score =
           7
      score =
           2
      score =
           2
    TestResult:
      Name: solutionTest.m/x_2
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007652
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2

    OrderedList =
         5     4
         5     4
         2     4
         1     6
         7     5
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         1     6
         7     5
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         1     6
         7     5
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         4     8
         7     5
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    score =
         3
    score =
         0
    score =
         0
    score =
         7
    score =
         2
    score =
         2
  passed: false
  duration: 0.007652
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      OrderedList =
           6     6
           6     6
           2     4
      OrderedList =
           6     6
           1     2
           2     4
      OrderedList =
           6     6
           1     2
           2     4
      score =
           5
      score =
           0
    TestResult:
      Name: solutionTest.m/x_3
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.007337000000000001
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: |2


    Assertion failed.
  output: |2

    OrderedList =
         6     6
         6     6
         2     4
    OrderedList =
         6     6
         1     2
         2     4
    OrderedList =
         6     6
         1     2
         2     4
    score =
         5
    score =
         0
  passed: false
  duration: 0.007337000000000001
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: |2


      Assertion failed.
    Output: |2

      OrderedList =
           1     2
           5     4
           2     4
      OrderedList =
           1     2
           5     4
           2     4
      OrderedList =
           1     2
           5     4
           2     4
      score =
           3
      score =
           2
    TestResult:
      Name: solutionTest.m/x_4
      Passed: false
      Failed: true
      Incomplete: true
      Duration: 0.0074930000000000005
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: true
      Completed: false
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: |2


    Assertion failed.
  output: |2

    OrderedList =
         1     2
         5     4
         2     4
    OrderedList =
         1     2
         5     4
         2     4
    OrderedList =
         1     2
         5     4
         2     4
    score =
         3
    score =
         2
  passed: false
  duration: 0.0074930000000000005
  figures: *5
:additional_test_points: []
",61,0,470,48826,"2015-08-24 17:32:23"
720850,"function score = scoreOrderedDominoes(list, order)

  OrderedList=list;
  score=0;

  for i=1:length(order)
      OrderedList(i,:)=list( order(i),: )
  end
  
  for i=1:length(order)-1
      score=score + abs( OrderedList(i,2) - OrderedList(i+1,1) )
  end

end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      OrderedList =
           1     2
           5     4
           2     4
      OrderedList =
           1     2
           2     4
           2     4
      OrderedList =
           1     2
           2     4
           5     4
      score =
           0
      score =
           1
    TestResult:
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.15533
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    OrderedList =
         1     2
         5     4
         2     4
    OrderedList =
         1     2
         2     4
         2     4
    OrderedList =
         1     2
         2     4
         5     4
    score =
         0
    score =
         1
  passed: true
  duration: 0.15533
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      OrderedList =
           5     4
           5     4
           2     4
      OrderedList =
           5     4
           1     2
           2     4
      OrderedList =
           5     4
           1     2
           2     4
      score =
           3
      score =
           3
    TestResult:
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.006294
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    OrderedList =
         5     4
         5     4
         2     4
    OrderedList =
         5     4
         1     2
         2     4
    OrderedList =
         5     4
         1     2
         2     4
    score =
         3
    score =
         3
  passed: true
  duration: 0.006294
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      OrderedList =
           5     4
           5     4
           2     4
           1     6
           7     5
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           1     6
           7     5
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           1     6
           7     5
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           4     8
           7     5
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           4     8
      OrderedList =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      score =
           3
      score =
           3
      score =
           3
      score =
          10
      score =
          12
      score =
          14
    TestResult:
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.00673
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
  error: ''
  output: |2

    OrderedList =
         5     4
         5     4
         2     4
         1     6
         7     5
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         1     6
         7     5
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         1     6
         7     5
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         4     8
         7     5
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         4     8
    OrderedList =
         5     4
         1     2
         2     4
         4     8
         1     6
         4     5
         7     5
    score =
         3
    score =
         3
    score =
         3
    score =
        10
    score =
        12
    score =
        14
  passed: true
  duration: 0.00673
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))\r\n\r""
    Diagnostics: ''
    Output: |2

      OrderedList =
           6     6
           6     6
           2     4
      OrderedList =
           6     6
           1     2
           2     4
      OrderedList =
           6     6
           1     2
           2     4
      score =
           5
      score =
           5
    TestResult:
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.0057669999999999996
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))\r\n\r""
  error: ''
  output: |2

    OrderedList =
         6     6
         6     6
         2     4
    OrderedList =
         6     6
         1     2
         2     4
    OrderedList =
         6     6
         1     2
         2     4
    score =
         5
    score =
         5
  passed: true
  duration: 0.0057669999999999996
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      OrderedList =
           1     2
           5     4
           2     4
      OrderedList =
           1     2
           5     4
           2     4
      OrderedList =
           1     2
           5     4
           2     4
      score =
           3
      score =
           5
    TestResult:
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Duration: 0.005782
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    OrderedList =
         1     2
         5     4
         2     4
    OrderedList =
         1     2
         5     4
         2     4
    OrderedList =
         1     2
         5     4
         2     4
    score =
         3
    score =
         5
  passed: true
  duration: 0.005782
  figures: *5
:additional_test_points: []
",63,1,470,48826,"2015-08-24 17:34:16"
778688,"function score = scoreOrderedDominoes(list, order)
    l=list(order(1),:);
    for i=2:length(order)
        l=horzcat(l,list(order(i),:));
    end
    d=abs(diff(l));
    score=0;
    for i=2:2:length(d)
        score=score+d(i);
    end
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.225151
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.225151
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008697
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.008697
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008291
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.008291
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.0075179999999999995
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.0075179999999999995
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.007426
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.007426
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",66,1,470,48874,"2015-11-14 09:57:05"
781642,"function score = scoreOrderedDominoes(list, order)
  L = size(list,1);
  %
  orderedList = (list(order,:))';
  lOrderedList = orderedList(:);
  m = (ones(L,1)*[-1 1])';
  lm = m(:);
  score = 0;
  for i = 1:L-1
    score = score + abs(lOrderedList(2*i:2*i+1)'*lm(2*i:2*i+1));
  end
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.239563
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *1
    passed: true
    duration: 0.239563
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.011339
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *2
    passed: true
    duration: 0.011339
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.009703999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2+

    figures: *3
    passed: true
    duration: 0.009703999999999999
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008742999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *4
    passed: true
    duration: 0.008742999999999999
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008395
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *5
    passed: true
    duration: 0.008395
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",93,1,470,50716,"2015-11-21 00:58:14"
753302,"function score = scoreOrderedDominoes(list, order)
 B=list(order,:);
    D=[];
    sum=0;
    for ii=1:size(list,1)
    C=B(ii,:);
    D=[D C];
    end
  D=D(2:length(D)-1);
  for ii=1:2:length(D)
  sum=sum+abs(D(ii)-D(ii+1));
  end
  score=sum
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      score =
           1
    TestResult:
      Duration: 0.21381199999999997
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    score =
         1
  passed: true
  duration: 0.21381199999999997
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      score =
           3
    TestResult:
      Duration: 0.007745999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    score =
         3
  passed: true
  duration: 0.007745999999999999
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2

      score =
          14
    TestResult:
      Duration: 0.007183
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2

    score =
        14
  passed: true
  duration: 0.007183
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      score =
           5
    TestResult:
      Duration: 0.006701
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    score =
         5
  passed: true
  duration: 0.006701
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2

      score =
           5
    TestResult:
      Duration: 0.00667
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2

    score =
         5
  passed: true
  duration: 0.00667
  figures: *5
:additional_test_points: []
",88,1,470,52617,"2015-10-05 07:15:21"
760270,"function score = scoreOrderedDominoes(list, order)
a=zeros(size(list));
for i = 1:length(order)
      a(i,:) = list(order(i),:);
end
score=0;
for i = 1:length(order)-1
    score = score + abs(a(i,2) - a(i+1,1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.221731
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.221731
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.008704
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.008704
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007641
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007641
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.008277
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.008277
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.008235
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.008235
  figures: *5
:additional_test_points: []
",67,1,470,53349,"2015-10-14 16:38:13"
760275,"function score = scoreOrderedDominoes(list, order)
a=zeros(size(list));
for i = 1:length(order)
      a(i,:) = list(order(i),:);
end
score = sum(abs(a(1:end-1,2) - a(2:end,1)));
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.221627
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.221627
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.00879
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.00879
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.008143999999999998
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.008143999999999998
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007752
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007752
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007241999999999999
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007241999999999999
  figures: *5
:additional_test_points: []
",59,1,470,53349,"2015-10-14 16:42:01"
760292,"function score = scoreOrderedDominoes(list, order)
score=0;
for i = 1:length(order)-1
      score = score + abs(list(order(i),2) - list(order(i+1),1));
end
end","---
:test_points:
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct =
      1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.217578
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &1 []
  additional_test: false
  code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.217578
  figures: *1
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.008957
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_1
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &2 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.008957
  figures: *2
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1
      3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.008089
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_2
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &3 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4 6
    5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.008089
  figures: *3
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.008003
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_3
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &4 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.008003
  figures: *4
- !ruby/object:ScoringEngine::TestResult
  raw_results:
    ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct =
      5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    Diagnostics: ''
    Output: |2+

    TestResult:
      Duration: 0.007476
      Started: true
      VerificationFailed: false
      AssumptionFailed: false
      AssertionFailed: false
      Errored: false
      FatalAssertionFailed: false
      Name: solutionTest.m/x_4
      Passed: true
      Failed: false
      Incomplete: false
      Completed: true
    Figures: &5 []
  additional_test: false
  code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
    order),y_correct))""
  error: ''
  output: |2+

  passed: true
  duration: 0.007476
  figures: *5
:additional_test_points: []
",43,1,470,53349,"2015-10-14 16:49:35"
767280,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=2:length(order)
  score=score+abs(list(order(i-1),2)-list(order(i),1));
end
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.225385
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.225385
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008414
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.008414
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.0079
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.0079
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.0071400000000000005
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.0071400000000000005
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.007294
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.007294
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",41,1,470,53373,"2015-10-26 12:06:54"
767281,"function score = scoreOrderedDominoes(list, order)
y=0;
for i=2:length(order)
  y=y+abs(list(order(i-1),2)-list(order(i),1));
end
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2+

      TestResult:
        Duration: 0.22545099999999998
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2+

    passed: false
    duration: 0.22545099999999998
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2+

      TestResult:
        Duration: 0.010858
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2+

    passed: false
    duration: 0.010858
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2+

      TestResult:
        Duration: 0.010005
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2+

    passed: false
    duration: 0.010005
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2+

      TestResult:
        Duration: 0.009926
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2+

    passed: false
    duration: 0.009926
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2+

      TestResult:
        Duration: 0.009509
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2+

    passed: false
    duration: 0.009509
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",41,0,470,53373,"2015-10-26 12:08:11"
767282,"function score = scoreOrderedDominoes(list, order)
score=0;
for i=2:length(order)
  score=score+abs(list(order(i-1),2)-list(order(i),1));
end
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.216642
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *1
    passed: true
    duration: 0.216642
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.007876
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *2
    passed: true
    duration: 0.007876
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.0072510000000000005
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2+

    figures: *3
    passed: true
    duration: 0.0072510000000000005
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.006798
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *4
    passed: true
    duration: 0.006798
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.006899
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *5
    passed: true
    duration: 0.006899
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",41,1,470,53373,"2015-10-26 12:08:59"
778756,"function score = scoreOrderedDominoes(list, order)
[R,C]=size(list);
for i = 1:R
    L = order(i);
    M(i,:) = list(L,:);
end
for j = 1:R-1
    s(j) = abs(M(j,C)-M(j+1,C-1));
end
score = sum(s);
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.246829
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *1
    passed: true
    duration: 0.246829
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008867
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *2
    passed: true
    duration: 0.008867
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.009221
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2+

    figures: *3
    passed: true
    duration: 0.009221
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008032000000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *4
    passed: true
    duration: 0.008032000000000001
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008102
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    figures: *5
    passed: true
    duration: 0.008102
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",71,1,470,54708,"2015-11-14 18:58:13"
771670,"function score = scoreOrderedDominoes(list, order)
  y = list(order,:)';
  x=abs(diff(y(2:5))
  score=sum(x([1 3])

end","--- 'L 3 (C 21-22): EOLPAR: Invalid syntax at end of line. Possibly, a ), }, or ]
  is missing.'
",-1,NULL,470,56722,"2015-11-04 21:16:47"
771671,"function score = scoreOrderedDominoes(list, order)
  y = list(order,:)';
  x=abs(diff(y(2:5)))
  score=sum(x([1 3])

end","--- 'L 4 (C 21-22): EOLPAR: Invalid syntax at end of line. Possibly, a ), }, or ]
  is missing.'
",-1,NULL,470,56722,"2015-11-04 21:17:03"
771672,"function score = scoreOrderedDominoes(list, order)
  y = list(order,:)';
  x=abs(diff(y(2:5)))
  score=sum(x([1 3]))

end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             0     2     1
        score =
             1
      TestResult:
        Duration: 0.224425
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           0     2     1
      score =
           1
    passed: true
    duration: 0.224425
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             3     1     0
        score =
             3
      TestResult:
        Duration: 0.009559999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           3     1     0
      score =
           3
    passed: true
    duration: 0.009559999999999999
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Assertion failed.
      Output: |2

        x =
             3     1     0
        score =
             3
      TestResult:
        Duration: 0.011552
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Assertion failed.
    output: |2

      x =
           3     1     0
      score =
           3
    passed: false
    duration: 0.011552
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             5     1     0
        score =
             5
      TestResult:
        Duration: 0.008034
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           5     1     0
      score =
           5
    passed: true
    duration: 0.008034
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             3     1     2
        score =
             5
      TestResult:
        Duration: 0.007594
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           3     1     2
      score =
           5
    passed: true
    duration: 0.007594
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",38,0,470,56722,"2015-11-04 21:17:18"
771674,"function score = scoreOrderedDominoes(list, order)
  y = list(order,:)';
  x=abs(diff(y(2:end-1)))
  score=sum(x([1:2:end]))

end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             0     2     1
        score =
             1
      TestResult:
        Duration: 0.229776
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           0     2     1
      score =
           1
    passed: true
    duration: 0.229776
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             3     1     0
        score =
             3
      TestResult:
        Duration: 0.008933
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           3     1     0
      score =
           3
    passed: true
    duration: 0.008933
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             3     1     0     2     0     4     7     5     2     1     2
        score =
            14
      TestResult:
        Duration: 0.008628
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2

      x =
           3     1     0     2     0     4     7     5     2     1     2
      score =
          14
    passed: true
    duration: 0.008628
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             5     1     0
        score =
             5
      TestResult:
        Duration: 0.008046
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           5     1     0
      score =
           5
    passed: true
    duration: 0.008046
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        x =
             3     1     2
        score =
             5
      TestResult:
        Duration: 0.008046000000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      x =
           3     1     2
      score =
           5
    passed: true
    duration: 0.008046000000000001
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",45,1,470,56722,"2015-11-04 21:18:03"
778319,"function score = scoreOrderedDominoes(list, order)
% Given a list of ordered pairs, and the order they should be placed in a line, find the sum of the absolute values of the differences.
% 
% list = [1 2
%         5 3
%         2 4
% order = [1 3 2]
% yields: [1 2][2 4][5 3]
%     or: abs(2-2) + abs(4-5)
%     or:        0 + 1
%     or: 1  
  helplist=list;
  score=0;
  for i=1:length(order)      
    list(i,:) = helplist(order(i),:);
  end
  for j=1:length(order)-1
      score=score+abs(list(j,2)-list(j+1,1));
  end
end
","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.228671
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.228671
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008882000000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.008882000000000001
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008488
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.008488
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.007859
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.007859
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.007648
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.007648
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",63,1,470,57131,"2015-11-13 15:21:35"
786439,"function score = scoreOrderedDominoes(list, order)

  n=size(list,1);
for i=1:n
nl(i,:)=list(order(i),:);
end
y=0;

for k=1:n-1
dy=abs(nl(k+1,1)-nl(k,2));
y=y+dy;
end


end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2+

      TestResult:
        Duration: 0.217951
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2+

    passed: false
    duration: 0.217951
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2+

      TestResult:
        Duration: 0.009963000000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2+

    passed: false
    duration: 0.009963000000000001
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2+

      TestResult:
        Duration: 0.009108
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2+

    passed: false
    duration: 0.009108
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2+

      TestResult:
        Duration: 0.008601000000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2+

    passed: false
    duration: 0.008601000000000001
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2+

      TestResult:
        Duration: 0.008393
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2+

    passed: false
    duration: 0.008393
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",66,0,470,57376,"2015-11-30 22:43:22"
786441,"function y = scoreOrderedDominoes(list, order)

n=size(list,1);
for i=1:n
nl(i,:)=list(order(i),:);
end
y=0;

for k=1:n-1
dy=abs(nl(k+1,1)-nl(k,2));
y=y+dy;
end


end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.229147
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.229147
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.00879
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.00879
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008369999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.008369999999999999
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008131000000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.008131000000000001
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.007678
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.007678
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",66,1,470,57376,"2015-11-30 22:44:20"
801042,"function score = scoreOrderedDominoes(list, order)
  x=list(order)
t=diff(x)
for i=2:length(t)-1
y=sum(t(i))
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     2     5
        t =
             1     3
      TestResult:
        Duration: 0.232577
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     2     5
      t =
           1     3
    figures: *1
    passed: false
    duration: 0.232577
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     1     2
        t =
            -4     1
      TestResult:
        Duration: 0.010891
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     1     2
      t =
          -4     1
    figures: *2
    passed: false
    duration: 0.010891
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     1     2     4     1     4     7
        t =
            -4     1     2    -3     3     3
        y =
             1
        y =
             2
        y =
            -3
        y =
             3
      TestResult:
        Duration: 0.010454999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     1     2     4     1     4     7
      t =
          -4     1     2    -3     3     3
      y =
           1
      y =
           2
      y =
          -3
      y =
           3
    figures: *3
    passed: false
    duration: 0.010454999999999999
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             6     1     2
        t =
            -5     1
      TestResult:
        Duration: 0.00933
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           6     1     2
      t =
          -5     1
    figures: *4
    passed: false
    duration: 0.00933
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     5     2
        t =
             4    -3
      TestResult:
        Duration: 0.008796
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     5     2
      t =
           4    -3
    figures: *5
    passed: false
    duration: 0.008796
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",37,0,470,60441,"2016-01-05 10:53:45"
801043,"function score = scoreOrderedDominoes(list, order)
  x=list(order,:)
t=diff(x)
for i=2:length(t)-1
y=sum(t(i))
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     2
             2     4
             5     4
        t =
             1     2
             3     0
      TestResult:
        Duration: 0.224128
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     2
           2     4
           5     4
      t =
           1     2
           3     0
    figures: *1
    passed: false
    duration: 0.224128
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     4
             1     2
             2     4
        t =
            -4    -2
             1     2
      TestResult:
        Duration: 0.010962
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     4
           1     2
           2     4
      t =
          -4    -2
           1     2
    figures: *2
    passed: false
    duration: 0.010962
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     4
             1     2
             2     4
             4     8
             1     6
             4     5
             7     5
        t =
            -4    -2
             1     2
             2     4
            -3    -2
             3    -1
             3     0
        y =
             1
        y =
             2
        y =
            -3
        y =
             3
      TestResult:
        Duration: 0.010626
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      t =
          -4    -2
           1     2
           2     4
          -3    -2
           3    -1
           3     0
      y =
           1
      y =
           2
      y =
          -3
      y =
           3
    figures: *3
    passed: false
    duration: 0.010626
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             6     6
             1     2
             2     4
        t =
            -5    -4
             1     2
      TestResult:
        Duration: 0.008886000000000002
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           6     6
           1     2
           2     4
      t =
          -5    -4
           1     2
    figures: *4
    passed: false
    duration: 0.008886000000000002
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     2
             5     4
             2     4
        t =
             4     2
            -3     0
      TestResult:
        Duration: 0.009183
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     2
           5     4
           2     4
      t =
           4     2
          -3     0
    figures: *5
    passed: false
    duration: 0.009183
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",38,0,470,60441,"2016-01-05 10:55:58"
801044,"function score = scoreOrderedDominoes(list, order)
  x=list(order,:)
t=diff(x(:))
for i=2:length(t)-1
y=sum(t(i))
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     2
             2     4
             5     4
        t =
             1
             3
            -3
             2
             0
        y =
             3
        y =
            -3
        y =
             2
      TestResult:
        Duration: 0.22328
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     2
           2     4
           5     4
      t =
           1
           3
          -3
           2
           0
      y =
           3
      y =
          -3
      y =
           2
    passed: false
    duration: 0.22328
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     4
             1     2
             2     4
        t =
            -4
             1
             2
            -2
             2
        y =
             1
        y =
             2
        y =
            -2
      TestResult:
        Duration: 0.011042
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     4
           1     2
           2     4
      t =
          -4
           1
           2
          -2
           2
      y =
           1
      y =
           2
      y =
          -2
    passed: false
    duration: 0.011042
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     4
             1     2
             2     4
             4     8
             1     6
             4     5
             7     5
        t =
            -4
             1
             2
            -3
             3
             3
            -3
            -2
             2
             4
            -2
            -1
             0
        y =
             1
        y =
             2
        y =
            -3
        y =
             3
        y =
             3
        y =
            -3
        y =
            -2
        y =
             2
        y =
             4
        y =
            -2
        y =
            -1
      TestResult:
        Duration: 0.010091000000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      t =
          -4
           1
           2
          -3
           3
           3
          -3
          -2
           2
           4
          -2
          -1
           0
      y =
           1
      y =
           2
      y =
          -3
      y =
           3
      y =
           3
      y =
          -3
      y =
          -2
      y =
           2
      y =
           4
      y =
          -2
      y =
          -1
    passed: false
    duration: 0.010091000000000001
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             6     6
             1     2
             2     4
        t =
            -5
             1
             4
            -4
             2
        y =
             1
        y =
             4
        y =
            -4
      TestResult:
        Duration: 0.009174999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           6     6
           1     2
           2     4
      t =
          -5
           1
           4
          -4
           2
      y =
           1
      y =
           4
      y =
          -4
    passed: false
    duration: 0.009174999999999999
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     2
             5     4
             2     4
        t =
             4
            -3
             0
             2
             0
        y =
            -3
        y =
             0
        y =
             2
      TestResult:
        Duration: 0.009493
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     2
           5     4
           2     4
      t =
           4
          -3
           0
           2
           0
      y =
          -3
      y =
           0
      y =
           2
    passed: false
    duration: 0.009493
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",40,0,470,60441,"2016-01-05 10:56:47"
801046,"function score = scoreOrderedDominoes(list, order)
  x=(list(order,:))'
t=diff(x(:))
for i=2:length(t)-1
y=sum(t(i))
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     2     5
             2     4     4
        t =
             1
             0
             2
             1
            -1
        y =
             0
        y =
             2
        y =
             1
      TestResult:
        Duration: 0.221552
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     2     5
           2     4     4
      t =
           1
           0
           2
           1
          -1
      y =
           0
      y =
           2
      y =
           1
    figures: *1
    passed: false
    duration: 0.221552
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     1     2
             4     2     4
        t =
            -1
            -3
             1
             0
             2
        y =
            -3
        y =
             1
        y =
             0
      TestResult:
        Duration: 0.010674
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     1     2
           4     2     4
      t =
          -1
          -3
           1
           0
           2
      y =
          -3
      y =
           1
      y =
           0
    figures: *2
    passed: false
    duration: 0.010674
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     1     2     4     1     4     7
             4     2     4     8     6     5     5
        t =
            -1
            -3
             1
             0
             2
             0
             4
            -7
             5
            -2
             1
             2
            -2
        y =
            -3
        y =
             1
        y =
             0
        y =
             2
        y =
             0
        y =
             4
        y =
            -7
        y =
             5
        y =
            -2
        y =
             1
        y =
             2
      TestResult:
        Duration: 0.010289
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     1     2     4     1     4     7
           4     2     4     8     6     5     5
      t =
          -1
          -3
           1
           0
           2
           0
           4
          -7
           5
          -2
           1
           2
          -2
      y =
          -3
      y =
           1
      y =
           0
      y =
           2
      y =
           0
      y =
           4
      y =
          -7
      y =
           5
      y =
          -2
      y =
           1
      y =
           2
    figures: *3
    passed: false
    duration: 0.010289
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             6     1     2
             6     2     4
        t =
             0
            -5
             1
             0
             2
        y =
            -5
        y =
             1
        y =
             0
      TestResult:
        Duration: 0.009192
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           6     1     2
           6     2     4
      t =
           0
          -5
           1
           0
           2
      y =
          -5
      y =
           1
      y =
           0
    figures: *4
    passed: false
    duration: 0.009192
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     5     2
             2     4     4
        t =
             1
             3
            -1
            -2
             2
        y =
             3
        y =
            -1
        y =
            -2
      TestResult:
        Duration: 0.009415
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     5     2
           2     4     4
      t =
           1
           3
          -1
          -2
           2
      y =
           3
      y =
          -1
      y =
          -2
    figures: *5
    passed: false
    duration: 0.009415
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",42,0,470,60441,"2016-01-05 10:59:10"
801047,"function score = scoreOrderedDominoes(list, order)
  x=(list(order,:))'
t=abs(diff(x(:)))
for i=2:length(t)-1
y=sum(t(i))
end
y
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     2     5
             2     4     4
        t =
             1
             0
             2
             1
             1
        y =
             0
        y =
             2
        y =
             1
        y =
             1
      TestResult:
        Duration: 0.218779
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     2     5
           2     4     4
      t =
           1
           0
           2
           1
           1
      y =
           0
      y =
           2
      y =
           1
      y =
           1
    figures: *1
    passed: false
    duration: 0.218779
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     1     2
             4     2     4
        t =
             1
             3
             1
             0
             2
        y =
             3
        y =
             1
        y =
             0
        y =
             0
      TestResult:
        Duration: 0.010273
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     1     2
           4     2     4
      t =
           1
           3
           1
           0
           2
      y =
           3
      y =
           1
      y =
           0
      y =
           0
    figures: *2
    passed: false
    duration: 0.010273
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     1     2     4     1     4     7
             4     2     4     8     6     5     5
        t =
             1
             3
             1
             0
             2
             0
             4
             7
             5
             2
             1
             2
             2
        y =
             3
        y =
             1
        y =
             0
        y =
             2
        y =
             0
        y =
             4
        y =
             7
        y =
             5
        y =
             2
        y =
             1
        y =
             2
        y =
             2
      TestResult:
        Duration: 0.009832
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     1     2     4     1     4     7
           4     2     4     8     6     5     5
      t =
           1
           3
           1
           0
           2
           0
           4
           7
           5
           2
           1
           2
           2
      y =
           3
      y =
           1
      y =
           0
      y =
           2
      y =
           0
      y =
           4
      y =
           7
      y =
           5
      y =
           2
      y =
           1
      y =
           2
      y =
           2
    figures: *3
    passed: false
    duration: 0.009832
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             6     1     2
             6     2     4
        t =
             0
             5
             1
             0
             2
        y =
             5
        y =
             1
        y =
             0
        y =
             0
      TestResult:
        Duration: 0.009008
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           6     1     2
           6     2     4
      t =
           0
           5
           1
           0
           2
      y =
           5
      y =
           1
      y =
           0
      y =
           0
    figures: *4
    passed: false
    duration: 0.009008
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     5     2
             2     4     4
        t =
             1
             3
             1
             2
             2
        y =
             3
        y =
             1
        y =
             2
        y =
             2
      TestResult:
        Duration: 0.008794
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     5     2
           2     4     4
      t =
           1
           3
           1
           2
           2
      y =
           3
      y =
           1
      y =
           2
      y =
           2
    figures: *5
    passed: false
    duration: 0.008794
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",46,0,470,60441,"2016-01-05 11:00:54"
801048,"function score = scoreOrderedDominoes(list, order)
  x=(list(order,:))'
t=(abs(diff(x(:))))'
for i=2:length(t)-1
y=sum(t(i))
end
y
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     2     5
             2     4     4
        t =
             1     0     2     1     1
        y =
             0
        y =
             2
        y =
             1
        y =
             1
      TestResult:
        Duration: 0.21825599999999998
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     2     5
           2     4     4
      t =
           1     0     2     1     1
      y =
           0
      y =
           2
      y =
           1
      y =
           1
    passed: false
    duration: 0.21825599999999998
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     1     2
             4     2     4
        t =
             1     3     1     0     2
        y =
             3
        y =
             1
        y =
             0
        y =
             0
      TestResult:
        Duration: 0.0108
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     1     2
           4     2     4
      t =
           1     3     1     0     2
      y =
           3
      y =
           1
      y =
           0
      y =
           0
    passed: false
    duration: 0.0108
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     1     2     4     1     4     7
             4     2     4     8     6     5     5
        t =
             1     3     1     0     2     0     4     7     5     2     1     2     2
        y =
             3
        y =
             1
        y =
             0
        y =
             2
        y =
             0
        y =
             4
        y =
             7
        y =
             5
        y =
             2
        y =
             1
        y =
             2
        y =
             2
      TestResult:
        Duration: 0.010121
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     1     2     4     1     4     7
           4     2     4     8     6     5     5
      t =
           1     3     1     0     2     0     4     7     5     2     1     2     2
      y =
           3
      y =
           1
      y =
           0
      y =
           2
      y =
           0
      y =
           4
      y =
           7
      y =
           5
      y =
           2
      y =
           1
      y =
           2
      y =
           2
    passed: false
    duration: 0.010121
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             6     1     2
             6     2     4
        t =
             0     5     1     0     2
        y =
             5
        y =
             1
        y =
             0
        y =
             0
      TestResult:
        Duration: 0.009097
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           6     1     2
           6     2     4
      t =
           0     5     1     0     2
      y =
           5
      y =
           1
      y =
           0
      y =
           0
    passed: false
    duration: 0.009097
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     5     2
             2     4     4
        t =
             1     3     1     2     2
        y =
             3
        y =
             1
        y =
             2
        y =
             2
      TestResult:
        Duration: 0.00887
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     5     2
           2     4     4
      t =
           1     3     1     2     2
      y =
           3
      y =
           1
      y =
           2
      y =
           2
    passed: false
    duration: 0.00887
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",48,0,470,60441,"2016-01-05 11:02:51"
801049,"function score = scoreOrderedDominoes(list, order)
  x=(list(order,:))'
t=(abs(diff(x(:))))'
for i=2:2:length(t)-1
y=sum(t(i))
end
y
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     2     5
             2     4     4
        t =
             1     0     2     1     1
        y =
             0
        y =
             1
        y =
             1
      TestResult:
        Duration: 0.23505099999999998
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     2     5
           2     4     4
      t =
           1     0     2     1     1
      y =
           0
      y =
           1
      y =
           1
    figures: *1
    passed: false
    duration: 0.23505099999999998
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     1     2
             4     2     4
        t =
             1     3     1     0     2
        y =
             3
        y =
             0
        y =
             0
      TestResult:
        Duration: 0.01118
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     1     2
           4     2     4
      t =
           1     3     1     0     2
      y =
           3
      y =
           0
      y =
           0
    figures: *2
    passed: false
    duration: 0.01118
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             5     1     2     4     1     4     7
             4     2     4     8     6     5     5
        t =
             1     3     1     0     2     0     4     7     5     2     1     2     2
        y =
             3
        y =
             0
        y =
             0
        y =
             7
        y =
             2
        y =
             2
        y =
             2
      TestResult:
        Duration: 0.011689
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           5     1     2     4     1     4     7
           4     2     4     8     6     5     5
      t =
           1     3     1     0     2     0     4     7     5     2     1     2     2
      y =
           3
      y =
           0
      y =
           0
      y =
           7
      y =
           2
      y =
           2
      y =
           2
    figures: *3
    passed: false
    duration: 0.011689
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             6     1     2
             6     2     4
        t =
             0     5     1     0     2
        y =
             5
        y =
             0
        y =
             0
      TestResult:
        Duration: 0.0103
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           6     1     2
           6     2     4
      t =
           0     5     1     0     2
      y =
           5
      y =
           0
      y =
           0
    figures: *4
    passed: false
    duration: 0.0103
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        x =
             1     5     2
             2     4     4
        t =
             1     3     1     2     2
        y =
             3
        y =
             2
        y =
             2
      TestResult:
        Duration: 0.010305
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      x =
           1     5     2
           2     4     4
      t =
           1     3     1     2     2
      y =
           3
      y =
           2
      y =
           2
    figures: *5
    passed: false
    duration: 0.010305
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",50,0,470,60441,"2016-01-05 11:04:13"
801050,"function score = scoreOrderedDominoes(list, order)
  x=(list(order,:))';
t=(abs(diff(x(:))))'
for i=2:2:length(t)-1
y=sum(t(i))
end
y
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     0     2     1     1
        y =
             0
        y =
             1
        y =
             1
      TestResult:
        Duration: 0.23034100000000002
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     0     2     1     1
      y =
           0
      y =
           1
      y =
           1
    figures: *1
    passed: false
    duration: 0.23034100000000002
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2
        y =
             3
        y =
             0
        y =
             0
      TestResult:
        Duration: 0.010988
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2
      y =
           3
      y =
           0
      y =
           0
    figures: *2
    passed: false
    duration: 0.010988
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2     0     4     7     5     2     1     2     2
        y =
             3
        y =
             0
        y =
             0
        y =
             7
        y =
             2
        y =
             2
        y =
             2
      TestResult:
        Duration: 0.010915999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2     0     4     7     5     2     1     2     2
      y =
           3
      y =
           0
      y =
           0
      y =
           7
      y =
           2
      y =
           2
      y =
           2
    figures: *3
    passed: false
    duration: 0.010915999999999999
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             0     5     1     0     2
        y =
             5
        y =
             0
        y =
             0
      TestResult:
        Duration: 0.010091000000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           0     5     1     0     2
      y =
           5
      y =
           0
      y =
           0
    figures: *4
    passed: false
    duration: 0.010091000000000001
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     2     2
        y =
             3
        y =
             2
        y =
             2
      TestResult:
        Duration: 0.0102
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     2     2
      y =
           3
      y =
           2
      y =
           2
    figures: *5
    passed: false
    duration: 0.0102
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",50,0,470,60441,"2016-01-05 11:07:33"
801051,"function score = scoreOrderedDominoes(list, order)
  x=(list(order,:))';
t=(abs(diff(x(:))))'
for i=2:2:length(t)-1
y=(t(i));
end
y=sum(y)
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     0     2     1     1
        y =
             1
      TestResult:
        Duration: 0.345999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     0     2     1     1
      y =
           1
    passed: false
    duration: 0.345999
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2
        y =
             0
      TestResult:
        Duration: 0.017597
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2
      y =
           0
    passed: false
    duration: 0.017597
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2     0     4     7     5     2     1     2     2
        y =
             2
      TestResult:
        Duration: 0.016596
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2     0     4     7     5     2     1     2     2
      y =
           2
    passed: false
    duration: 0.016596
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             0     5     1     0     2
        y =
             0
      TestResult:
        Duration: 0.015948
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           0     5     1     0     2
      y =
           0
    passed: false
    duration: 0.015948
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     2     2
        y =
             2
      TestResult:
        Duration: 0.015867
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     2     2
      y =
           2
    passed: false
    duration: 0.015867
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",53,0,470,60441,"2016-01-05 11:08:51"
801052,"function score = scoreOrderedDominoes(list, order)
  x=(list(order,:))';
t=(abs(diff(x(:))))'
for i=2:2:length(t)-1
m=t(i)
end
y=sum(m)
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     0     2     1     1
        m =
             0
        m =
             1
        y =
             1
      TestResult:
        Duration: 0.22621899999999998
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     0     2     1     1
      m =
           0
      m =
           1
      y =
           1
    figures: *1
    passed: false
    duration: 0.22621899999999998
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2
        m =
             3
        m =
             0
        y =
             0
      TestResult:
        Duration: 0.011148
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2
      m =
           3
      m =
           0
      y =
           0
    figures: *2
    passed: false
    duration: 0.011148
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2     0     4     7     5     2     1     2     2
        m =
             3
        m =
             0
        m =
             0
        m =
             7
        m =
             2
        m =
             2
        y =
             2
      TestResult:
        Duration: 0.010958
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2     0     4     7     5     2     1     2     2
      m =
           3
      m =
           0
      m =
           0
      m =
           7
      m =
           2
      m =
           2
      y =
           2
    figures: *3
    passed: false
    duration: 0.010958
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             0     5     1     0     2
        m =
             5
        m =
             0
        y =
             0
      TestResult:
        Duration: 0.010043
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           0     5     1     0     2
      m =
           5
      m =
           0
      y =
           0
    figures: *4
    passed: false
    duration: 0.010043
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     2     2
        m =
             3
        m =
             2
        y =
             2
      TestResult:
        Duration: 0.009884
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     2     2
      m =
           3
      m =
           2
      y =
           2
    figures: *5
    passed: false
    duration: 0.009884
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",52,0,470,60441,"2016-01-05 11:09:47"
801053,"function score = scoreOrderedDominoes(list, order)
  x=(list(order,:))';
t=(abs(diff(x(:))))'
for i=2:2:length(t)-1
m=zeros(1,length(t));
m(i)=t(i);
end
y=sum(m)
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     0     2     1     1
        y =
             1
      TestResult:
        Duration: 0.22280100000000003
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     0     2     1     1
      y =
           1
    figures: *1
    passed: false
    duration: 0.22280100000000003
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2
        y =
             0
      TestResult:
        Duration: 0.010742999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2
      y =
           0
    figures: *2
    passed: false
    duration: 0.010742999999999999
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2     0     4     7     5     2     1     2     2
        y =
             2
      TestResult:
        Duration: 0.009849
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2     0     4     7     5     2     1     2     2
      y =
           2
    figures: *3
    passed: false
    duration: 0.009849
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             0     5     1     0     2
        y =
             0
      TestResult:
        Duration: 0.00946
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           0     5     1     0     2
      y =
           0
    figures: *4
    passed: false
    duration: 0.00946
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     2     2
        y =
             2
      TestResult:
        Duration: 0.009651999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     2     2
      y =
           2
    figures: *5
    passed: false
    duration: 0.009651999999999999
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",63,0,470,60441,"2016-01-05 11:12:41"
801054,"function score = scoreOrderedDominoes(list, order)
  x=(list(order,:))';
t=(abs(diff(x(:))))'
for i=2:2:length(t)-1
m=zeros(1,length(t));
m(i)=t(i)
end
y=sum(m)
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     0     2     1     1
        m =
             0     0     0     0     0
        m =
             0     0     0     1     0
        y =
             1
      TestResult:
        Duration: 0.222474
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     0     2     1     1
      m =
           0     0     0     0     0
      m =
           0     0     0     1     0
      y =
           1
    figures: *1
    passed: false
    duration: 0.222474
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2
        m =
             0     3     0     0     0
        m =
             0     0     0     0     0
        y =
             0
      TestResult:
        Duration: 0.010601
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2
      m =
           0     3     0     0     0
      m =
           0     0     0     0     0
      y =
           0
    figures: *2
    passed: false
    duration: 0.010601
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2     0     4     7     5     2     1     2     2
        m =
             0     3     0     0     0     0     0     0     0     0     0     0     0
        m =
             0     0     0     0     0     0     0     0     0     0     0     0     0
        m =
             0     0     0     0     0     0     0     0     0     0     0     0     0
        m =
             0     0     0     0     0     0     0     7     0     0     0     0     0
        m =
             0     0     0     0     0     0     0     0     0     2     0     0     0
        m =
             0     0     0     0     0     0     0     0     0     0     0     2     0
        y =
             2
      TestResult:
        Duration: 0.010347
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2     0     4     7     5     2     1     2     2
      m =
           0     3     0     0     0     0     0     0     0     0     0     0     0
      m =
           0     0     0     0     0     0     0     0     0     0     0     0     0
      m =
           0     0     0     0     0     0     0     0     0     0     0     0     0
      m =
           0     0     0     0     0     0     0     7     0     0     0     0     0
      m =
           0     0     0     0     0     0     0     0     0     2     0     0     0
      m =
           0     0     0     0     0     0     0     0     0     0     0     2     0
      y =
           2
    figures: *3
    passed: false
    duration: 0.010347
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             0     5     1     0     2
        m =
             0     5     0     0     0
        m =
             0     0     0     0     0
        y =
             0
      TestResult:
        Duration: 0.009148
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           0     5     1     0     2
      m =
           0     5     0     0     0
      m =
           0     0     0     0     0
      y =
           0
    figures: *4
    passed: false
    duration: 0.009148
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     2     2
        m =
             0     3     0     0     0
        m =
             0     0     0     2     0
        y =
             2
      TestResult:
        Duration: 0.009089999999999999
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     2     2
      m =
           0     3     0     0     0
      m =
           0     0     0     2     0
      y =
           2
    figures: *5
    passed: false
    duration: 0.009089999999999999
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",63,0,470,60441,"2016-01-05 11:13:33"
801055,"function score = scoreOrderedDominoes(list, order)
  x=(list(order,:))';
t=(abs(diff(x(:))))'
m=zeros(1,length(t));
for i=2:2:length(t)-1
m(i)=t(i)
end
y=sum(m)
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     0     2     1     1
        m =
             0     0     0     0     0
        m =
             0     0     0     1     0
        y =
             1
      TestResult:
        Duration: 0.23276
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     0     2     1     1
      m =
           0     0     0     0     0
      m =
           0     0     0     1     0
      y =
           1
    passed: false
    duration: 0.23276
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2
        m =
             0     3     0     0     0
        m =
             0     3     0     0     0
        y =
             3
      TestResult:
        Duration: 0.012205
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2
      m =
           0     3     0     0     0
      m =
           0     3     0     0     0
      y =
           3
    passed: false
    duration: 0.012205
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     0     2     0     4     7     5     2     1     2     2
        m =
             0     3     0     0     0     0     0     0     0     0     0     0     0
        m =
             0     3     0     0     0     0     0     0     0     0     0     0     0
        m =
             0     3     0     0     0     0     0     0     0     0     0     0     0
        m =
             0     3     0     0     0     0     0     7     0     0     0     0     0
        m =
             0     3     0     0     0     0     0     7     0     2     0     0     0
        m =
             0     3     0     0     0     0     0     7     0     2     0     2     0
        y =
            14
      TestResult:
        Duration: 0.011083
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     0     2     0     4     7     5     2     1     2     2
      m =
           0     3     0     0     0     0     0     0     0     0     0     0     0
      m =
           0     3     0     0     0     0     0     0     0     0     0     0     0
      m =
           0     3     0     0     0     0     0     0     0     0     0     0     0
      m =
           0     3     0     0     0     0     0     7     0     0     0     0     0
      m =
           0     3     0     0     0     0     0     7     0     2     0     0     0
      m =
           0     3     0     0     0     0     0     7     0     2     0     2     0
      y =
          14
    passed: false
    duration: 0.011083
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             0     5     1     0     2
        m =
             0     5     0     0     0
        m =
             0     5     0     0     0
        y =
             5
      TestResult:
        Duration: 0.010444
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           0     5     1     0     2
      m =
           0     5     0     0     0
      m =
           0     5     0     0     0
      y =
           5
    passed: false
    duration: 0.010444
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: |2


        Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
      Output: |2

        t =
             1     3     1     2     2
        m =
             0     3     0     0     0
        m =
             0     3     0     2     0
        y =
             5
      TestResult:
        Duration: 0.010302
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: true
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: false
        Failed: true
        Incomplete: true
        Completed: false
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: |2


      Output argument ""score"" (and maybe others) not assigned during call to ""scoreOrderedDominoes"".
    output: |2

      t =
           1     3     1     2     2
      m =
           0     3     0     0     0
      m =
           0     3     0     2     0
      y =
           5
    passed: false
    duration: 0.010302
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",63,0,470,60441,"2016-01-05 11:14:45"
801056,"function score = scoreOrderedDominoes(list, order)
  x=(list(order,:))';
t=(abs(diff(x(:))))';
m=zeros(1,length(t));
for i=2:2:length(t)-1
m(i)=t(i);
end
score=sum(m)
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        score =
             1
      TestResult:
        Duration: 0.231291
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      score =
           1
    passed: true
    duration: 0.231291
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        score =
             3
      TestResult:
        Duration: 0.009208
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      score =
           3
    passed: true
    duration: 0.009208
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2

        score =
            14
      TestResult:
        Duration: 0.009018
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2

      score =
          14
    passed: true
    duration: 0.009018
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        score =
             5
      TestResult:
        Duration: 0.008076
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      score =
           5
    passed: true
    duration: 0.008076
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        score =
             5
      TestResult:
        Duration: 0.007821
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      score =
           5
    passed: true
    duration: 0.007821
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",63,1,470,60441,"2016-01-05 11:16:13"
808766,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:)
  da = arrayfun(@(i) abs(list(i,2)-list(i+1,1)), (1:size(list,1)-1))
  score = sum(da);
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        list =
             1     2
             2     4
             5     4
        da =
             0     1
      TestResult:
        Duration: 0.22249700000000003
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      list =
           1     2
           2     4
           5     4
      da =
           0     1
    passed: true
    duration: 0.22249700000000003
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        list =
             5     4
             1     2
             2     4
        da =
             3     0
      TestResult:
        Duration: 0.00857
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      list =
           5     4
           1     2
           2     4
      da =
           3     0
    passed: true
    duration: 0.00857
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2

        list =
             5     4
             1     2
             2     4
             4     8
             1     6
             4     5
             7     5
        da =
             3     0     0     7     2     2
      TestResult:
        Duration: 0.007999000000000001
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2

      list =
           5     4
           1     2
           2     4
           4     8
           1     6
           4     5
           7     5
      da =
           3     0     0     7     2     2
    passed: true
    duration: 0.007999000000000001
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        list =
             6     6
             1     2
             2     4
        da =
             5     0
      TestResult:
        Duration: 0.00729
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      list =
           6     6
           1     2
           2     4
      da =
           5     0
    passed: true
    duration: 0.00729
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2

        list =
             1     2
             5     4
             2     4
        da =
             3     2
      TestResult:
        Duration: 0.007441
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2

      list =
           1     2
           5     4
           2     4
      da =
           3     2
    passed: true
    duration: 0.007441
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",49,1,470,62446,"2016-01-17 23:18:09"
808767,"function score = scoreOrderedDominoes(list, order)
  list = list(order,:);
  score = sum(arrayfun(@(i) abs(list(i,2)-list(i+1,1)), (1:size(list,1)-1)));
end","---
:version: '2.0'
:test_points:
  :tests:
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct
        = 1;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.223522
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &1 []
    additional_test: false
    code: ""%%\r\nlist  = [1 2; 5 4; 2 4];\r\norder = [1 3 2];\r\ny_correct = 1;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.223522
    figures: *1
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 3;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.008586
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_1
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &2 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [2 1 3];\r\ny_correct = 3;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.008586
    figures: *2
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2
        1 3 7 4 6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list,
        order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.007658
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_2
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &3 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4; 1 6; 7 5; 4 5; 4 8];\r\norder = [2 1 3 7 4
      6 5];\r\ny_correct = 14;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.007658
    figures: *3
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.007174
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_3
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &4 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 6 6; 2 4];\r\norder = [2 1 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.007174
    figures: *4
  - !ruby/object:ScoringEngine::TestResult
    raw_results:
      ScriptCode: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct
        = 5;\r\nassert(isequal(scoreOrderedDominoes(list, order),y_correct))""
      Diagnostics: ''
      Output: |2+

      TestResult:
        Duration: 0.007065
        Started: true
        VerificationFailed: false
        AssumptionFailed: false
        AssertionFailed: false
        Errored: false
        FatalAssertionFailed: false
        Name: solutionTest.m/x_4
        Passed: true
        Failed: false
        Incomplete: false
        Completed: true
      Figures: &5 []
    additional_test: false
    code: ""%%\r\nlist = [1 2; 5 4; 2 4];\r\norder = [1 2 3];\r\ny_correct = 5;\r\nassert(isequal(scoreOrderedDominoes(list,
      order),y_correct))""
    error: ''
    output: |2+

    passed: true
    duration: 0.007065
    figures: *5
  :shared_variables:
  - !ruby/object:ScoringEngine::SharedVariable
    raw_results:
      ScriptCode: ''
      Diagnostics: ''
      Output: |2+

      TestResult: ''
      Figures: &6 []
    additional_test: false
    code: ''
    error: ''
    output: |2+

    figures: *6
:additional_test_points:
  :tests: []
  :shared_variables: []
",45,1,470,62446,"2016-01-17 23:19:27"
